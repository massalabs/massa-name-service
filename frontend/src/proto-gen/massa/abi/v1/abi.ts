// @generated by protobuf-ts 2.9.1 with parameter generate_dependencies
// @generated from protobuf file "massa/abi/v1/abi.proto" (package "massa.abi.v1", syntax proto3)
// tslint:disable
//
// Copyright (c) 2023 MASSA LABS <info@massa.net>
//
import type { BinaryWriteOptions } from '@protobuf-ts/runtime';
import type { IBinaryWriter } from '@protobuf-ts/runtime';
import { WireType } from '@protobuf-ts/runtime';
import type { BinaryReadOptions } from '@protobuf-ts/runtime';
import type { IBinaryReader } from '@protobuf-ts/runtime';
import { UnknownFieldHandler } from '@protobuf-ts/runtime';
import type { PartialMessage } from '@protobuf-ts/runtime';
import { reflectionMergePartial } from '@protobuf-ts/runtime';
import { MESSAGE_TYPE } from '@protobuf-ts/runtime';
import { MessageType } from '@protobuf-ts/runtime';
import { AddressCategory } from '../../model/v1/address';
import { Slot } from '../../model/v1/slot';
import { BytesValue } from '../../../google/protobuf/wrappers';
import { ComparisonResult } from '../../model/v1/commons';
import { NativeTime } from '../../model/v1/time';
import { StringValue } from '../../../google/protobuf/wrappers';
import { NativeAmount } from '../../model/v1/amount';
/**
 * Error message used in abi Response
 *
 * @generated from protobuf message massa.abi.v1.Error
 */
export interface Error {
  /**
   * a string representing the error
   *
   * @generated from protobuf field: string message = 1;
   */
  message: string;
}
/**
 * Create SC request
 *
 * @generated from protobuf message massa.abi.v1.CreateScRequest
 */
export interface CreateScRequest {
  /**
   * Bytecode is the compiled code of the smart contract
   *
   * @generated from protobuf field: bytes bytecode = 1;
   */
  bytecode: Uint8Array;
}
/**
 * Create SC result
 *
 * @generated from protobuf message massa.abi.v1.CreateScResult
 */
export interface CreateScResult {
  /**
   * Address of the just created smart contract
   *
   * @generated from protobuf field: string sc_address = 1;
   */
  scAddress: string;
}
/**
 * Call SC request
 *
 * @generated from protobuf message massa.abi.v1.CallRequest
 */
export interface CallRequest {
  /**
   * Address of the smart contract to call
   *
   * @generated from protobuf field: string target_sc_address = 1;
   */
  targetScAddress: string;
  /**
   * Function to call in the targeted smart contract
   *
   * @generated from protobuf field: string target_function_name = 2;
   */
  targetFunctionName: string;
  /**
   * Argument to the function serialized in a byte array.
   *
   * @generated from protobuf field: bytes function_arg = 3;
   */
  functionArg: Uint8Array;
  /**
   * call_coins is the amount of coins to pay for the call
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount call_coins = 4;
   */
  callCoins?: NativeAmount;
}
/**
 * Call SC response
 *
 * @generated from protobuf message massa.abi.v1.CallResponse
 */
export interface CallResponse {
  /**
   * Return_data is the return value of the function
   *
   * @generated from protobuf field: bytes data = 1;
   */
  data: Uint8Array;
}
/**
 * Local execution request
 *
 * @generated from protobuf message massa.abi.v1.LocalExecutionRequest
 */
export interface LocalExecutionRequest {
  /**
   * Bytecode is the compiled code of the smart contract
   *
   * @generated from protobuf field: bytes bytecode = 1;
   */
  bytecode: Uint8Array;
  /**
   * Function to call in the targeted smart contract
   *
   * @generated from protobuf field: string target_function_name = 2;
   */
  targetFunctionName: string;
  /**
   * Argument to the function serialized in a byte array.
   *
   * @generated from protobuf field: bytes function_arg = 3;
   */
  functionArg: Uint8Array;
}
/**
 * Local call response
 *
 * @generated from protobuf message massa.abi.v1.LocalExecutionResponse
 */
export interface LocalExecutionResponse {
  /**
   * Return_data is the return value of the function
   *
   * @generated from protobuf field: bytes data = 1;
   */
  data: Uint8Array;
}
/**
 * Generate event request
 *
 * @generated from protobuf message massa.abi.v1.GenerateEventRequest
 */
export interface GenerateEventRequest {
  /**
   * Event
   *
   * @generated from protobuf field: bytes event = 1;
   */
  event: Uint8Array;
}
/**
 * Generate event resulst
 *
 * @generated from protobuf message massa.abi.v1.GenerateEventResult
 */
export interface GenerateEventResult {}
/**
 * Transfer coins request
 *
 * @generated from protobuf message massa.abi.v1.TransferCoinsRequest
 */
export interface TransferCoinsRequest {
  /**
   * The address of the recipient
   *
   * @generated from protobuf field: string target_address = 1;
   */
  targetAddress: string;
  /**
   * The amount of coins to transfer
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount amount_to_transfer = 2;
   */
  amountToTransfer?: NativeAmount;
  /**
   * The address of the sender, if none, use current address
   *
   * @generated from protobuf field: optional google.protobuf.StringValue sender_address = 3;
   */
  senderAddress?: StringValue;
}
/**
 * Transfer coin result
 *
 * @generated from protobuf message massa.abi.v1.TransferCoinsResult
 */
export interface TransferCoinsResult {}
/**
 * Function exists request
 *
 * @generated from protobuf message massa.abi.v1.FunctionExistsRequest
 */
export interface FunctionExistsRequest {
  /**
   * Address of the smart contract to call
   *
   * @generated from protobuf field: string target_sc_address = 1;
   */
  targetScAddress: string;
  /**
   * The name of the function to check the existance of
   *
   * @generated from protobuf field: string function_name = 2;
   */
  functionName: string;
}
/**
 * Function exists result
 *
 * @generated from protobuf message massa.abi.v1.FunctionExistsResult
 */
export interface FunctionExistsResult {
  /**
   * Exists is true if the function exists
   *
   * @generated from protobuf field: bool exists = 1;
   */
  exists: boolean;
}
// Message returned in case of success of an ABI call.
// See the documentation of the specific result for the meaning of the fields.
// Call RespResult because Result will conflict with the Result type in Rust
// data MUSTÂ have the same name as they type in Rust they are converted to type

/**
 * Tips to check for completeness exec:
 * `rg message | rg "\{" | rg "Result" | wc -l`
 * the given count should be equal to the number of messages in RespResult + 1
 * the +1 comes from ResResult itself which is counted above
 *
 * @generated from protobuf message massa.abi.v1.RespResult
 */
export interface RespResult {
  /**
   * @generated from protobuf oneof: res
   */
  res:
    | {
        oneofKind: 'addNativeAmountResult';
        /**
         * @generated from protobuf field: massa.abi.v1.AddNativeAmountResult add_native_amount_result = 1;
         */
        addNativeAmountResult: AddNativeAmountResult;
      }
    | {
        oneofKind: 'addressFromPubKeyResult';
        /**
         * @generated from protobuf field: massa.abi.v1.AddressFromPubKeyResult address_from_pub_key_result = 2;
         */
        addressFromPubKeyResult: AddressFromPubKeyResult;
      }
    | {
        oneofKind: 'appendDsValueResult';
        /**
         * @generated from protobuf field: massa.abi.v1.AppendDsValueResult append_ds_value_result = 3;
         */
        appendDsValueResult: AppendDsValueResult;
      }
    | {
        oneofKind: 'base58CheckToBytesResult';
        /**
         * @generated from protobuf field: massa.abi.v1.Base58CheckToBytesResult base58_check_to_bytes_result = 4;
         */
        base58CheckToBytesResult: Base58CheckToBytesResult;
      }
    | {
        oneofKind: 'bytesToBase58CheckResult';
        /**
         * @generated from protobuf field: massa.abi.v1.BytesToBase58CheckResult bytes_to_base58_check_result = 5;
         */
        bytesToBase58CheckResult: BytesToBase58CheckResult;
      }
    | {
        oneofKind: 'callerHasWriteAccessResult';
        /**
         * @generated from protobuf field: massa.abi.v1.CallerHasWriteAccessResult caller_has_write_access_result = 6;
         */
        callerHasWriteAccessResult: CallerHasWriteAccessResult;
      }
    | {
        oneofKind: 'checkAddressResult';
        /**
         * @generated from protobuf field: massa.abi.v1.CheckAddressResult check_address_result = 7;
         */
        checkAddressResult: CheckAddressResult;
      }
    | {
        oneofKind: 'checkNativeAmountResult';
        /**
         * @generated from protobuf field: massa.abi.v1.CheckNativeAmountResult check_native_amount_result = 8;
         */
        checkNativeAmountResult: CheckNativeAmountResult;
      }
    | {
        oneofKind: 'checkPubKeyResult';
        /**
         * @generated from protobuf field: massa.abi.v1.CheckPubKeyResult check_pub_key_result = 9;
         */
        checkPubKeyResult: CheckPubKeyResult;
      }
    | {
        oneofKind: 'checkSigResult';
        /**
         * @generated from protobuf field: massa.abi.v1.CheckSigResult check_sig_result = 10;
         */
        checkSigResult: CheckSigResult;
      }
    | {
        oneofKind: 'checkedAddNativeTimeResult';
        /**
         * @generated from protobuf field: massa.abi.v1.CheckedAddNativeTimeResult checked_add_native_time_result = 11;
         */
        checkedAddNativeTimeResult: CheckedAddNativeTimeResult;
      }
    | {
        oneofKind: 'checkedDivRemNativeTimeResult';
        /**
         * @generated from protobuf field: massa.abi.v1.CheckedDivRemNativeTimeResult checked_div_rem_native_time_result = 12;
         */
        checkedDivRemNativeTimeResult: CheckedDivRemNativeTimeResult;
      }
    | {
        oneofKind: 'checkedScalarDivRemNativeTimeResult';
        /**
         * @generated from protobuf field: massa.abi.v1.CheckedScalarDivRemNativeTimeResult checked_scalar_div_rem_native_time_result = 13;
         */
        checkedScalarDivRemNativeTimeResult: CheckedScalarDivRemNativeTimeResult;
      }
    | {
        oneofKind: 'checkedScalarMulNativeTimeResult';
        /**
         * @generated from protobuf field: massa.abi.v1.CheckedScalarMulNativeTimeResult checked_scalar_mul_native_time_result = 14;
         */
        checkedScalarMulNativeTimeResult: CheckedScalarMulNativeTimeResult;
      }
    | {
        oneofKind: 'checkedSubNativeTimeResult';
        /**
         * @generated from protobuf field: massa.abi.v1.CheckedSubNativeTimeResult checked_sub_native_time_result = 15;
         */
        checkedSubNativeTimeResult: CheckedSubNativeTimeResult;
      }
    | {
        oneofKind: 'compareAddressResult';
        /**
         * @generated from protobuf field: massa.abi.v1.CompareAddressResult compare_address_result = 16;
         */
        compareAddressResult: CompareAddressResult;
      }
    | {
        oneofKind: 'compareNativeAmountResult';
        /**
         * @generated from protobuf field: massa.abi.v1.CompareNativeAmountResult compare_native_amount_result = 17;
         */
        compareNativeAmountResult: CompareNativeAmountResult;
      }
    | {
        oneofKind: 'compareNativeTimeResult';
        /**
         * @generated from protobuf field: massa.abi.v1.CompareNativeTimeResult compare_native_time_result = 18;
         */
        compareNativeTimeResult: CompareNativeTimeResult;
      }
    | {
        oneofKind: 'comparePubKeyResult';
        /**
         * @generated from protobuf field: massa.abi.v1.ComparePubKeyResult compare_pub_key_result = 19;
         */
        comparePubKeyResult: ComparePubKeyResult;
      }
    | {
        oneofKind: 'createScResult';
        /**
         * @generated from protobuf field: massa.abi.v1.CreateScResult create_sc_result = 20;
         */
        createScResult: CreateScResult;
      }
    | {
        oneofKind: 'deleteDsEntryResult';
        /**
         * @generated from protobuf field: massa.abi.v1.DeleteDsEntryResult delete_ds_entry_result = 21;
         */
        deleteDsEntryResult: DeleteDsEntryResult;
      }
    | {
        oneofKind: 'divRemNativeAmountResult';
        /**
         * @generated from protobuf field: massa.abi.v1.DivRemNativeAmountResult div_rem_native_amount_result = 22;
         */
        divRemNativeAmountResult: DivRemNativeAmountResult;
      }
    | {
        oneofKind: 'dsEntryExistsResult';
        /**
         * @generated from protobuf field: massa.abi.v1.DsEntryExistsResult ds_entry_exists_result = 23;
         */
        dsEntryExistsResult: DsEntryExistsResult;
      }
    | {
        oneofKind: 'functionExistsResult';
        /**
         * @generated from protobuf field: massa.abi.v1.FunctionExistsResult function_exists_result = 24;
         */
        functionExistsResult: FunctionExistsResult;
      }
    | {
        oneofKind: 'generateEventResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GenerateEventResult generate_event_result = 25;
         */
        generateEventResult: GenerateEventResult;
      }
    | {
        oneofKind: 'getAddressCategoryResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetAddressCategoryResult get_address_category_result = 26;
         */
        getAddressCategoryResult: GetAddressCategoryResult;
      }
    | {
        oneofKind: 'getAddressVersionResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetAddressVersionResult get_address_version_result = 27;
         */
        getAddressVersionResult: GetAddressVersionResult;
      }
    | {
        oneofKind: 'getBalanceResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetBalanceResult get_balance_result = 28;
         */
        getBalanceResult: GetBalanceResult;
      }
    | {
        oneofKind: 'getBytecodeResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetBytecodeResult get_bytecode_result = 29;
         */
        getBytecodeResult: GetBytecodeResult;
      }
    | {
        oneofKind: 'getCallCoinsResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetCallCoinsResult get_call_coins_result = 30;
         */
        getCallCoinsResult: GetCallCoinsResult;
      }
    | {
        oneofKind: 'getCallStackResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetCallStackResult get_call_stack_result = 31;
         */
        getCallStackResult: GetCallStackResult;
      }
    | {
        oneofKind: 'getCurrentSlotResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetCurrentSlotResult get_current_slot_result = 32;
         */
        getCurrentSlotResult: GetCurrentSlotResult;
      }
    | {
        oneofKind: 'getDsKeysResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetDsKeysResult get_ds_keys_result = 33;
         */
        getDsKeysResult: GetDsKeysResult;
      }
    | {
        oneofKind: 'getDsValueResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetDsValueResult get_ds_value_result = 34;
         */
        getDsValueResult: GetDsValueResult;
      }
    | {
        oneofKind: 'getNativeTimeResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetNativeTimeResult get_native_time_result = 35;
         */
        getNativeTimeResult: GetNativeTimeResult;
      }
    | {
        oneofKind: 'getOpDataResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetOpDataResult get_op_data_result = 36;
         */
        getOpDataResult: GetOpDataResult;
      }
    | {
        oneofKind: 'getOpKeysResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetOpKeysResult get_op_keys_result = 37;
         */
        getOpKeysResult: GetOpKeysResult;
      }
    | {
        oneofKind: 'getOriginOperationIdResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetOriginOperationIdResult get_origin_operation_id_result = 38;
         */
        getOriginOperationIdResult: GetOriginOperationIdResult;
      }
    | {
        oneofKind: 'getOwnedAddressesResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetOwnedAddressesResult get_owned_addresses_result = 39;
         */
        getOwnedAddressesResult: GetOwnedAddressesResult;
      }
    | {
        oneofKind: 'getPubKeyVersionResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetPubKeyVersionResult get_pub_key_version_result = 40;
         */
        getPubKeyVersionResult: GetPubKeyVersionResult;
      }
    | {
        oneofKind: 'getRemainingGasResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetRemainingGasResult get_remaining_gas_result = 41;
         */
        getRemainingGasResult: GetRemainingGasResult;
      }
    | {
        oneofKind: 'getSignatureVersionResult';
        /**
         * @generated from protobuf field: massa.abi.v1.GetSignatureVersionResult get_signature_version_result = 42;
         */
        getSignatureVersionResult: GetSignatureVersionResult;
      }
    | {
        oneofKind: 'hashBlake3Result';
        /**
         * @generated from protobuf field: massa.abi.v1.HashBlake3Result hash_blake3_result = 43;
         */
        hashBlake3Result: HashBlake3Result;
      }
    | {
        oneofKind: 'hashSha256Result';
        /**
         * @generated from protobuf field: massa.abi.v1.HashSha256Result hash_sha256_result = 44;
         */
        hashSha256Result: HashSha256Result;
      }
    | {
        oneofKind: 'opEntryExistsResult';
        /**
         * @generated from protobuf field: massa.abi.v1.OpEntryExistsResult op_entry_exists_result = 45;
         */
        opEntryExistsResult: OpEntryExistsResult;
      }
    | {
        oneofKind: 'keccak256Result';
        /**
         * @generated from protobuf field: massa.abi.v1.Keccak256Result keccak256_result = 46;
         */
        keccak256Result: Keccak256Result;
      }
    | {
        oneofKind: 'localExecutionResponse';
        /**
         * @generated from protobuf field: massa.abi.v1.LocalExecutionResponse local_execution_response = 47;
         */
        localExecutionResponse: LocalExecutionResponse;
      }
    | {
        oneofKind: 'nativeAmountFromStringResult';
        /**
         * @generated from protobuf field: massa.abi.v1.NativeAmountFromStringResult native_amount_from_string_result = 48;
         */
        nativeAmountFromStringResult: NativeAmountFromStringResult;
      }
    | {
        oneofKind: 'nativeAmountToStringResult';
        /**
         * @generated from protobuf field: massa.abi.v1.NativeAmountToStringResult native_amount_to_string_result = 49;
         */
        nativeAmountToStringResult: NativeAmountToStringResult;
      }
    | {
        oneofKind: 'scalarDivRemNativeAmountResult';
        /**
         * @generated from protobuf field: massa.abi.v1.ScalarDivRemNativeAmountResult scalar_div_rem_native_amount_result = 50;
         */
        scalarDivRemNativeAmountResult: ScalarDivRemNativeAmountResult;
      }
    | {
        oneofKind: 'scalarMulNativeAmountResult';
        /**
         * @generated from protobuf field: massa.abi.v1.ScalarMulNativeAmountResult scalar_mul_native_amount_result = 51;
         */
        scalarMulNativeAmountResult: ScalarMulNativeAmountResult;
      }
    | {
        oneofKind: 'sendAsyncMessageResult';
        /**
         * @generated from protobuf field: massa.abi.v1.SendAsyncMessageResult send_async_message_result = 52;
         */
        sendAsyncMessageResult: SendAsyncMessageResult;
      }
    | {
        oneofKind: 'setBytecodeResult';
        /**
         * @generated from protobuf field: massa.abi.v1.SetBytecodeResult set_bytecode_result = 53;
         */
        setBytecodeResult: SetBytecodeResult;
      }
    | {
        oneofKind: 'setDsValueResult';
        /**
         * @generated from protobuf field: massa.abi.v1.SetDsValueResult set_ds_value_result = 54;
         */
        setDsValueResult: SetDsValueResult;
      }
    | {
        oneofKind: 'subNativeAmountResult';
        /**
         * @generated from protobuf field: massa.abi.v1.SubNativeAmountResult sub_native_amount_result = 55;
         */
        subNativeAmountResult: SubNativeAmountResult;
      }
    | {
        oneofKind: 'transferCoinsResult';
        /**
         * @generated from protobuf field: massa.abi.v1.TransferCoinsResult transfer_coins_result = 56;
         */
        transferCoinsResult: TransferCoinsResult;
      }
    | {
        oneofKind: 'unsafeRandomResult';
        /**
         * @generated from protobuf field: massa.abi.v1.UnsafeRandomResult unsafe_random_result = 57;
         */
        unsafeRandomResult: UnsafeRandomResult;
      }
    | {
        oneofKind: 'evmVerifySigResult';
        /**
         * @generated from protobuf field: massa.abi.v1.EvmVerifySigResult evm_verify_sig_result = 58;
         */
        evmVerifySigResult: EvmVerifySigResult;
      }
    | {
        oneofKind: 'verifySigResult';
        /**
         * @generated from protobuf field: massa.abi.v1.VerifySigResult verify_sig_result = 59;
         */
        verifySigResult: VerifySigResult;
      }
    | {
        oneofKind: 'evmGetAddressFromPubkeyResult';
        /**
         * @generated from protobuf field: massa.abi.v1.EvmGetAddressFromPubkeyResult evm_get_address_from_pubkey_result = 60;
         */
        evmGetAddressFromPubkeyResult: EvmGetAddressFromPubkeyResult;
      }
    | {
        oneofKind: 'evmGetPubkeyFromSignatureResult';
        /**
         * @generated from protobuf field: massa.abi.v1.EvmGetPubkeyFromSignatureResult evm_get_pubkey_from_signature_result = 61;
         */
        evmGetPubkeyFromSignatureResult: EvmGetPubkeyFromSignatureResult;
      }
    | {
        oneofKind: 'isAddressEoaResult';
        /**
         * @generated from protobuf field: massa.abi.v1.IsAddressEoaResult is_address_eoa_result = 62;
         */
        isAddressEoaResult: IsAddressEoaResult;
      }
    | {
        oneofKind: undefined;
      };
}
/**
 * Generic message that encapsulate response from ABI calls.
 *
 * @generated from protobuf message massa.abi.v1.AbiResponse
 */
export interface AbiResponse {
  /**
   * @generated from protobuf oneof: resp
   */
  resp:
    | {
        oneofKind: 'res';
        /**
         * variant for success
         *
         * @generated from protobuf field: massa.abi.v1.RespResult res = 1;
         */
        res: RespResult;
      }
    | {
        oneofKind: 'error';
        /**
         * variant for error
         *
         * @generated from protobuf field: massa.abi.v1.Error error = 2;
         */
        error: Error;
      }
    | {
        oneofKind: undefined;
      };
}
/**
 * Amount to string request
 *
 * @generated from protobuf message massa.abi.v1.NativeAmountToStringRequest
 */
export interface NativeAmountToStringRequest {
  /**
   * Amount to convert to string
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount to_convert = 1;
   */
  toConvert?: NativeAmount;
}
/**
 * Amount to string result
 *
 * @generated from protobuf message massa.abi.v1.NativeAmountToStringResult
 */
export interface NativeAmountToStringResult {
  /**
   * Converted Amount
   *
   * @generated from protobuf field: string converted_amount = 1;
   */
  convertedAmount: string;
}
/**
 * Amount from string request
 *
 * @generated from protobuf message massa.abi.v1.NativeAmountFromStringRequest
 */
export interface NativeAmountFromStringRequest {
  /**
   * String to convert to Amount
   *
   * @generated from protobuf field: string to_convert = 1;
   */
  toConvert: string;
}
/**
 * Amount from string result
 *
 * @generated from protobuf message massa.abi.v1.NativeAmountFromStringResult
 */
export interface NativeAmountFromStringResult {
  /**
   * Converted Amount
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount converted_amount = 1;
   */
  convertedAmount?: NativeAmount;
}
/**
 * Check address request
 *
 * @generated from protobuf message massa.abi.v1.CheckAddressRequest
 */
export interface CheckAddressRequest {
  /**
   * Address to check
   *
   * @generated from protobuf field: string to_check = 1;
   */
  toCheck: string;
}
/**
 * Check address result
 *
 * @generated from protobuf message massa.abi.v1.CheckAddressResult
 */
export interface CheckAddressResult {
  /**
   * Is address valid
   *
   * @generated from protobuf field: bool is_valid = 1;
   */
  isValid: boolean;
}
/**
 * Check PubKey request
 *
 * @generated from protobuf message massa.abi.v1.CheckPubKeyRequest
 */
export interface CheckPubKeyRequest {
  /**
   * PubKey to check
   *
   * @generated from protobuf field: string to_check = 1;
   */
  toCheck: string;
}
/**
 * Check PubKey result
 *
 * @generated from protobuf message massa.abi.v1.CheckPubKeyResult
 */
export interface CheckPubKeyResult {
  /**
   * Is PubKey valid
   *
   * @generated from protobuf field: bool is_valid = 1;
   */
  isValid: boolean;
}
/**
 * Check Sig request
 *
 * @generated from protobuf message massa.abi.v1.CheckSigRequest
 */
export interface CheckSigRequest {
  /**
   * Sig to check
   *
   * @generated from protobuf field: string to_check = 1;
   */
  toCheck: string;
}
/**
 * Check Sig result
 *
 * @generated from protobuf message massa.abi.v1.CheckSigResult
 */
export interface CheckSigResult {
  /**
   * Is Sig valid
   *
   * @generated from protobuf field: bool is_valid = 1;
   */
  isValid: boolean;
}
/**
 * Check Amount request
 *
 * @generated from protobuf message massa.abi.v1.CheckNativeAmountRequest
 */
export interface CheckNativeAmountRequest {
  /**
   * Amount to check
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount to_check = 1;
   */
  toCheck?: NativeAmount;
}
/**
 * Check Amount result
 *
 * @generated from protobuf message massa.abi.v1.CheckNativeAmountResult
 */
export interface CheckNativeAmountResult {
  /**
   * Is Amount valid
   *
   * @generated from protobuf field: bool is_valid = 1;
   */
  isValid: boolean;
}
/**
 * Amount addition request
 *
 * @generated from protobuf message massa.abi.v1.AddNativeAmountRequest
 */
export interface AddNativeAmountRequest {
  /**
   * First amount to add
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount amount1 = 1;
   */
  amount1?: NativeAmount;
  /**
   * Second amount to add
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount amount2 = 2;
   */
  amount2?: NativeAmount;
}
/**
 * Amount addition result
 *
 * @generated from protobuf message massa.abi.v1.AddNativeAmountResult
 */
export interface AddNativeAmountResult {
  /**
   * Sum of amounts
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount sum = 1;
   */
  sum?: NativeAmount;
}
/**
 * Amount subtraction request
 * try to compute difference = left - right
 * fails if right > left
 *
 * @generated from protobuf message massa.abi.v1.SubNativeAmountRequest
 */
export interface SubNativeAmountRequest {
  /**
   * First amount to subtract from
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount left = 1;
   */
  left?: NativeAmount;
  /**
   * Second amount to subtract
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount right = 2;
   */
  right?: NativeAmount;
}
/**
 * Amount subtraction result
 *
 * @generated from protobuf message massa.abi.v1.SubNativeAmountResult
 */
export interface SubNativeAmountResult {
  /**
   * Difference of amounts (left - right)
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount difference = 1;
   */
  difference?: NativeAmount;
}
/**
 * Amount multiplication request
 * Try to compute product = amount * coefficient (fail if overflow)
 *
 * @generated from protobuf message massa.abi.v1.ScalarMulNativeAmountRequest
 */
export interface ScalarMulNativeAmountRequest {
  /**
   * Amount to multiply
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount amount = 1;
   */
  amount?: NativeAmount;
  /**
   * Coefficient to multiply by
   *
   * @generated from protobuf field: uint64 coefficient = 2;
   */
  coefficient: bigint;
}
/**
 * Amount multiplication result
 *
 * @generated from protobuf message massa.abi.v1.ScalarMulNativeAmountResult
 */
export interface ScalarMulNativeAmountResult {
  /**
   * Product of amount and coefficient
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount product = 1;
   */
  product?: NativeAmount;
}
/**
 * Amount division by scalar request
 * Try to compute quotient = dividend / divisor
 * Fails if divisor == 0
 * Fails if underflow
 *
 * @generated from protobuf message massa.abi.v1.ScalarDivRemNativeAmountRequest
 */
export interface ScalarDivRemNativeAmountRequest {
  /**
   * Amount to divide
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount dividend = 1;
   */
  dividend?: NativeAmount;
  /**
   * Divisor to divide by
   *
   * @generated from protobuf field: uint64 divisor = 2;
   */
  divisor: bigint;
}
/**
 * Amount division by scalar result
 *
 * @generated from protobuf message massa.abi.v1.ScalarDivRemNativeAmountResult
 */
export interface ScalarDivRemNativeAmountResult {
  /**
   * Quotient of amount and divisor
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount quotient = 1;
   */
  quotient?: NativeAmount;
  /**
   * Remainder of amount and divisor
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount remainder = 2;
   */
  remainder?: NativeAmount;
}
/**
 * Amount division request
 *
 * @generated from protobuf message massa.abi.v1.DivRemNativeAmountRequest
 */
export interface DivRemNativeAmountRequest {
  /**
   * Amount to divide
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount dividend = 1;
   */
  dividend?: NativeAmount;
  /**
   * Divisor to divide by
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount divisor = 2;
   */
  divisor?: NativeAmount;
}
/**
 * Amount division result
 *
 * @generated from protobuf message massa.abi.v1.DivRemNativeAmountResult
 */
export interface DivRemNativeAmountResult {
  /**
   * Quotient of amount and divisor
   *
   * @generated from protobuf field: uint64 quotient = 1;
   */
  quotient: bigint;
  /**
   * Remainder of amount and divisor
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount remainder = 2;
   */
  remainder?: NativeAmount;
}
/**
 * Time addition checked request
 *
 * @generated from protobuf message massa.abi.v1.CheckedAddNativeTimeRequest
 */
export interface CheckedAddNativeTimeRequest {
  /**
   * First time to add
   *
   * @generated from protobuf field: massa.model.v1.NativeTime left = 1;
   */
  left?: NativeTime;
  /**
   * Second time to add
   *
   * @generated from protobuf field: massa.model.v1.NativeTime right = 2;
   */
  right?: NativeTime;
}
/**
 * Time addition checked result
 *
 * @generated from protobuf message massa.abi.v1.CheckedAddNativeTimeResult
 */
export interface CheckedAddNativeTimeResult {
  /**
   * Sum of times
   *
   * @generated from protobuf field: massa.model.v1.NativeTime sum = 1;
   */
  sum?: NativeTime;
}
/**
 * Time subtraction checked request
 *
 * @generated from protobuf message massa.abi.v1.CheckedSubNativeTimeRequest
 */
export interface CheckedSubNativeTimeRequest {
  /**
   * First time to subtract from
   *
   * @generated from protobuf field: massa.model.v1.NativeTime left = 1;
   */
  left?: NativeTime;
  /**
   * Second time to subtract
   *
   * @generated from protobuf field: massa.model.v1.NativeTime right = 2;
   */
  right?: NativeTime;
}
/**
 * Time subtraction checked result
 *
 * @generated from protobuf message massa.abi.v1.CheckedSubNativeTimeResult
 */
export interface CheckedSubNativeTimeResult {
  /**
   * Difference of times (left - right)
   *
   * @generated from protobuf field: massa.model.v1.NativeTime difference = 1;
   */
  difference?: NativeTime;
}
/**
 * Time scalar mult checked request
 *
 * @generated from protobuf message massa.abi.v1.CheckedScalarMulNativeTimeRequest
 */
export interface CheckedScalarMulNativeTimeRequest {
  /**
   * Time to multiply
   *
   * @generated from protobuf field: massa.model.v1.NativeTime time = 1;
   */
  time?: NativeTime;
  /**
   * Coefficient to multiply by
   *
   * @generated from protobuf field: uint64 coefficient = 2;
   */
  coefficient: bigint;
}
/**
 * Time scalar mult checked result
 *
 * @generated from protobuf message massa.abi.v1.CheckedScalarMulNativeTimeResult
 */
export interface CheckedScalarMulNativeTimeResult {
  /**
   * Product of time and coefficient
   *
   * @generated from protobuf field: massa.model.v1.NativeTime product = 1;
   */
  product?: NativeTime;
}
/**
 * Time scalar divrem checked request
 *
 * @generated from protobuf message massa.abi.v1.CheckedScalarDivRemNativeTimeRequest
 */
export interface CheckedScalarDivRemNativeTimeRequest {
  /**
   * Time to divide
   *
   * @generated from protobuf field: massa.model.v1.NativeTime dividend = 1;
   */
  dividend?: NativeTime;
  /**
   * Divisor to divide by
   *
   * @generated from protobuf field: uint64 divisor = 2;
   */
  divisor: bigint;
}
/**
 * Time scalar divrem checked result
 *
 * @generated from protobuf message massa.abi.v1.CheckedScalarDivRemNativeTimeResult
 */
export interface CheckedScalarDivRemNativeTimeResult {
  /**
   * Quotient of time and divisor
   *
   * @generated from protobuf field: massa.model.v1.NativeTime quotient = 1;
   */
  quotient?: NativeTime;
  /**
   * Remainder of time and divisor
   *
   * @generated from protobuf field: massa.model.v1.NativeTime remainder = 2;
   */
  remainder?: NativeTime;
}
/**
 * Time division checked request
 *
 * @generated from protobuf message massa.abi.v1.CheckedDivRemNativeTimeRequest
 */
export interface CheckedDivRemNativeTimeRequest {
  /**
   * Time to divide
   *
   * @generated from protobuf field: massa.model.v1.NativeTime dividend = 1;
   */
  dividend?: NativeTime;
  /**
   * Divisor to divide by
   *
   * @generated from protobuf field: massa.model.v1.NativeTime divisor = 2;
   */
  divisor?: NativeTime;
}
/**
 * Time division checked result
 *
 * @generated from protobuf message massa.abi.v1.CheckedDivRemNativeTimeResult
 */
export interface CheckedDivRemNativeTimeResult {
  /**
   * Quotient of time and divisor
   *
   * @generated from protobuf field: uint64 quotient = 1;
   */
  quotient: bigint;
  /**
   * Remainder of time and divisor
   *
   * @generated from protobuf field: massa.model.v1.NativeTime remainder = 2;
   */
  remainder?: NativeTime;
}
/**
 * Time comparison request
 *
 * @generated from protobuf message massa.abi.v1.CompareNativeTimeRequest
 */
export interface CompareNativeTimeRequest {
  /**
   * First time to compare
   *
   * @generated from protobuf field: massa.model.v1.NativeTime left = 1;
   */
  left?: NativeTime;
  /**
   * Second time to compare
   *
   * @generated from protobuf field: massa.model.v1.NativeTime right = 2;
   */
  right?: NativeTime;
}
/**
 * Time comparison result
 *
 * @generated from protobuf message massa.abi.v1.CompareNativeTimeResult
 */
export interface CompareNativeTimeResult {
  /**
   * Comparison result
   *
   * @generated from protobuf field: massa.model.v1.ComparisonResult result = 1;
   */
  result: ComparisonResult;
}
/**
 * Compare Address request
 *
 * @generated from protobuf message massa.abi.v1.CompareAddressRequest
 */
export interface CompareAddressRequest {
  /**
   * First address to compare
   *
   * @generated from protobuf field: string left = 1;
   */
  left: string;
  /**
   * Second address to compare
   *
   * @generated from protobuf field: string right = 2;
   */
  right: string;
}
/**
 * Compare Address result
 *
 * @generated from protobuf message massa.abi.v1.CompareAddressResult
 */
export interface CompareAddressResult {
  /**
   * Comparison result
   *
   * @generated from protobuf field: massa.model.v1.ComparisonResult result = 1;
   */
  result: ComparisonResult;
}
/**
 * Compare PubKey request
 *
 * @generated from protobuf message massa.abi.v1.ComparePubKeyRequest
 */
export interface ComparePubKeyRequest {
  /**
   * First public key to compare
   *
   * @generated from protobuf field: string left = 1;
   */
  left: string;
  /**
   * Second public key to compare
   *
   * @generated from protobuf field: string right = 2;
   */
  right: string;
}
/**
 * Compare PubKey result
 *
 * @generated from protobuf message massa.abi.v1.ComparePubKeyResult
 */
export interface ComparePubKeyResult {
  /**
   * Comparison result
   *
   * @generated from protobuf field: massa.model.v1.ComparisonResult result = 1;
   */
  result: ComparisonResult;
}
/**
 * Verify Sig request
 *
 * @generated from protobuf message massa.abi.v1.VerifySigRequest
 */
export interface VerifySigRequest {
  /**
   * Signature to verify
   *
   * @generated from protobuf field: string sig = 1;
   */
  sig: string;
  /**
   * Message to verify
   *
   * @generated from protobuf field: bytes message = 2;
   */
  message: Uint8Array;
  /**
   * Public key to verify with
   *
   * @generated from protobuf field: string pub_key = 3;
   */
  pubKey: string;
}
/**
 * Verify Sig result
 *
 * @generated from protobuf message massa.abi.v1.VerifySigResult
 */
export interface VerifySigResult {
  /**
   * Verification result
   *
   * @generated from protobuf field: bool is_verified = 1;
   */
  isVerified: boolean;
}
/**
 * Compare NativeAmount request
 *
 * @generated from protobuf message massa.abi.v1.CompareNativeAmountRequest
 */
export interface CompareNativeAmountRequest {
  /**
   * First amount to compare
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount left = 1;
   */
  left?: NativeAmount;
  /**
   * Second amount to compare
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount right = 2;
   */
  right?: NativeAmount;
}
/**
 * Compare NativeAmount result
 *
 * @generated from protobuf message massa.abi.v1.CompareNativeAmountResult
 */
export interface CompareNativeAmountResult {
  /**
   * Comparison result
   *
   * @generated from protobuf field: massa.model.v1.ComparisonResult result = 1;
   */
  result: ComparisonResult;
}
/**
 * Keccak256 hash request
 *
 * @generated from protobuf message massa.abi.v1.Keccak256Request
 */
export interface Keccak256Request {
  /**
   * Data to hash
   *
   * @generated from protobuf field: bytes data = 1;
   */
  data: Uint8Array;
}
/**
 * Keccak256 hash result
 *
 * @generated from protobuf message massa.abi.v1.Keccak256Result
 */
export interface Keccak256Result {
  /**
   * Hash of data
   *
   * @generated from protobuf field: bytes hash = 1;
   */
  hash: Uint8Array;
}
/**
 * EVM signature verification request
 *
 * @generated from protobuf message massa.abi.v1.EvmVerifySigRequest
 */
export interface EvmVerifySigRequest {
  /**
   * Signature to verify
   *
   * @generated from protobuf field: bytes sig = 1;
   */
  sig: Uint8Array;
  /**
   * Message to verify
   *
   * @generated from protobuf field: bytes message = 2;
   */
  message: Uint8Array;
  /**
   * Public key to verify with
   *
   * @generated from protobuf field: bytes pub_key = 3;
   */
  pubKey: Uint8Array;
}
/**
 * EVM signature verification result
 *
 * @generated from protobuf message massa.abi.v1.EvmVerifySigResult
 */
export interface EvmVerifySigResult {
  /**
   * Verification result
   *
   * @generated from protobuf field: bool is_verified = 1;
   */
  isVerified: boolean;
}
/**
 * EVM get address from public key request
 *
 * @generated from protobuf message massa.abi.v1.EvmGetAddressFromPubkeyRequest
 */
export interface EvmGetAddressFromPubkeyRequest {
  /**
   * Public key to get address from
   *
   * @generated from protobuf field: bytes pub_key = 1;
   */
  pubKey: Uint8Array;
}
/**
 * EVM get address from public key result
 *
 * @generated from protobuf message massa.abi.v1.EvmGetAddressFromPubkeyResult
 */
export interface EvmGetAddressFromPubkeyResult {
  /**
   * Address
   *
   * @generated from protobuf field: bytes address = 1;
   */
  address: Uint8Array;
}
/**
 * EVM get public key from signature request
 *
 * @generated from protobuf message massa.abi.v1.EvmGetPubkeyFromSignatureRequest
 */
export interface EvmGetPubkeyFromSignatureRequest {
  /**
   * Signed hash to verify
   *
   * @generated from protobuf field: bytes hash = 1;
   */
  hash: Uint8Array;
  /**
   * Signature to verify
   *
   * @generated from protobuf field: bytes sig = 2;
   */
  sig: Uint8Array;
}
/**
 * EVM get public key from signature result
 *
 * @generated from protobuf message massa.abi.v1.EvmGetPubkeyFromSignatureResult
 */
export interface EvmGetPubkeyFromSignatureResult {
  /**
   * Public key
   *
   * @generated from protobuf field: bytes pub_key = 1;
   */
  pubKey: Uint8Array;
}
/**
 * Is address EOA request
 *
 * @generated from protobuf message massa.abi.v1.IsAddressEoaRequest
 */
export interface IsAddressEoaRequest {
  /**
   * Address to check
   *
   * @generated from protobuf field: string address = 1;
   */
  address: string;
}
/**
 * Is address EOA result
 *
 * @generated from protobuf message massa.abi.v1.IsAddressEoaResult
 */
export interface IsAddressEoaResult {
  /**
   * Is address EOA
   *
   * @generated from protobuf field: bool is_eoa = 1;
   */
  isEoa: boolean;
}
/**
 * Blake3 hash request
 *
 * @generated from protobuf message massa.abi.v1.HashBlake3Request
 */
export interface HashBlake3Request {
  /**
   * Data to hash
   *
   * @generated from protobuf field: bytes data = 1;
   */
  data: Uint8Array;
}
/**
 * Blake3 hash result
 *
 * @generated from protobuf message massa.abi.v1.HashBlake3Result
 */
export interface HashBlake3Result {
  /**
   * Hash of data
   *
   * @generated from protobuf field: bytes hash = 1;
   */
  hash: Uint8Array;
}
/**
 * Get keys request
 *
 * @generated from protobuf message massa.abi.v1.GetDsKeysRequest
 */
export interface GetDsKeysRequest {
  /**
   * keys prefix
   *
   * @generated from protobuf field: bytes prefix = 1;
   */
  prefix: Uint8Array;
  /**
   * Address to get keys for
   *
   * @generated from protobuf field: optional google.protobuf.StringValue address = 2;
   */
  address?: StringValue;
}
/**
 * Get keys result
 *
 * @generated from protobuf message massa.abi.v1.GetDsKeysResult
 */
export interface GetDsKeysResult {
  /**
   * keys
   *
   * @generated from protobuf field: repeated bytes keys = 1;
   */
  keys: Uint8Array[];
}
/**
 * Set data store value request
 *
 * @generated from protobuf message massa.abi.v1.SetDsValueRequest
 */
export interface SetDsValueRequest {
  /**
   * key
   *
   * @generated from protobuf field: bytes key = 1;
   */
  key: Uint8Array;
  /**
   * value
   *
   * @generated from protobuf field: bytes value = 2;
   */
  value: Uint8Array;
  /**
   * Address to set data for, if none, use current address
   *
   * @generated from protobuf field: optional google.protobuf.StringValue address = 3;
   */
  address?: StringValue;
}
/**
 * Set data store value result
 *
 * @generated from protobuf message massa.abi.v1.SetDsValueResult
 */
export interface SetDsValueResult {}
/**
 * Append data request
 *
 * @generated from protobuf message massa.abi.v1.AppendDsValueRequest
 */
export interface AppendDsValueRequest {
  /**
   * key
   *
   * @generated from protobuf field: bytes key = 1;
   */
  key: Uint8Array;
  /**
   * value
   *
   * @generated from protobuf field: bytes value = 2;
   */
  value: Uint8Array;
  /**
   * Address to append data for, if none, use current address
   *
   * @generated from protobuf field: optional google.protobuf.StringValue address = 3;
   */
  address?: StringValue;
}
/**
 * Append data result
 *
 * @generated from protobuf message massa.abi.v1.AppendDsValueResult
 */
export interface AppendDsValueResult {}
/**
 * Get data request
 *
 * @generated from protobuf message massa.abi.v1.GetDsValueRequest
 */
export interface GetDsValueRequest {
  /**
   * key
   *
   * @generated from protobuf field: bytes key = 1;
   */
  key: Uint8Array;
  /**
   * Address to get data for, if none, use current address
   *
   * @generated from protobuf field: optional google.protobuf.StringValue address = 2;
   */
  address?: StringValue;
}
/**
 * Get data result
 *
 * @generated from protobuf message massa.abi.v1.GetDsValueResult
 */
export interface GetDsValueResult {
  /**
   * value
   *
   * @generated from protobuf field: bytes value = 1;
   */
  value: Uint8Array;
}
/**
 * Delete data store entry request
 *
 * @generated from protobuf message massa.abi.v1.DeleteDsEntryRequest
 */
export interface DeleteDsEntryRequest {
  /**
   * key
   *
   * @generated from protobuf field: bytes key = 1;
   */
  key: Uint8Array;
  /**
   * Address to delete data for, if none, use current address
   *
   * @generated from protobuf field: optional google.protobuf.StringValue address = 2;
   */
  address?: StringValue;
}
/**
 * Delete data store entry result
 *
 * @generated from protobuf message massa.abi.v1.DeleteDsEntryResult
 */
export interface DeleteDsEntryResult {}
/**
 * Data store entry exists request
 *
 * @generated from protobuf message massa.abi.v1.DsEntryExistsRequest
 */
export interface DsEntryExistsRequest {
  /**
   * key
   *
   * @generated from protobuf field: bytes key = 1;
   */
  key: Uint8Array;
  /**
   * Address to check data for, if none, use current address
   *
   * @generated from protobuf field: optional google.protobuf.StringValue address = 2;
   */
  address?: StringValue;
}
/**
 * Data store entry exists result
 *
 * @generated from protobuf message massa.abi.v1.DsEntryExistsResult
 */
export interface DsEntryExistsResult {
  /**
   * has data
   *
   * @generated from protobuf field: bool has_data = 1;
   */
  hasData: boolean;
}
/**
 * Get owned addresses request
 *
 * @generated from protobuf message massa.abi.v1.GetOwnedAddressesRequest
 */
export interface GetOwnedAddressesRequest {}
/**
 * Get owned addresses result
 *
 * @generated from protobuf message massa.abi.v1.GetOwnedAddressesResult
 */
export interface GetOwnedAddressesResult {
  /**
   * owned addresses
   *
   * @generated from protobuf field: repeated string addresses = 1;
   */
  addresses: string[];
}
/**
 * Get call stack request
 *
 * @generated from protobuf message massa.abi.v1.GetCallStackRequest
 */
export interface GetCallStackRequest {}
/**
 * Get call stack result
 *
 * @generated from protobuf message massa.abi.v1.GetCallStackResult
 */
export interface GetCallStackResult {
  /**
   * call stack
   *
   * @generated from protobuf field: repeated string calls = 1;
   */
  calls: string[];
}
/**
 * Address from public key request
 *
 * @generated from protobuf message massa.abi.v1.AddressFromPubKeyRequest
 */
export interface AddressFromPubKeyRequest {
  /**
   * Native public key
   *
   * @generated from protobuf field: string pub_key = 1;
   */
  pubKey: string;
}
/**
 * Address from public key result
 *
 * @generated from protobuf message massa.abi.v1.AddressFromPubKeyResult
 */
export interface AddressFromPubKeyResult {
  /**
   * Address
   *
   * @generated from protobuf field: string address = 1;
   */
  address: string;
}
/**
 * Unsafe random request
 *
 * @generated from protobuf message massa.abi.v1.UnsafeRandomRequest
 */
export interface UnsafeRandomRequest {
  /**
   * @generated from protobuf field: uint32 num_bytes = 2;
   */
  numBytes: number;
}
/**
 * Unsafe random result
 *
 * @generated from protobuf message massa.abi.v1.UnsafeRandomResult
 */
export interface UnsafeRandomResult {
  /**
   * Random bytes generated
   *
   * @generated from protobuf field: bytes random_bytes = 1;
   */
  randomBytes: Uint8Array;
}
/**
 * Send async message request filter
 *
 * @generated from protobuf message massa.abi.v1.SendAsyncMessageFilter
 */
export interface SendAsyncMessageFilter {
  /**
   * Target address
   *
   * @generated from protobuf field: string target_address = 1;
   */
  targetAddress: string;
  /**
   * Target key
   *
   * @generated from protobuf field: google.protobuf.BytesValue target_key = 2;
   */
  targetKey?: BytesValue;
}
/**
 * Send async message request
 *
 * @generated from protobuf message massa.abi.v1.SendAsyncMessageRequest
 */
export interface SendAsyncMessageRequest {
  /**
   * Target address
   *
   * @generated from protobuf field: string target_address = 1;
   */
  targetAddress: string;
  /**
   * Target handler (function name)
   *
   * @generated from protobuf field: string target_handler = 2;
   */
  targetHandler: string;
  /**
   * Start slot for the message execution
   *
   * @generated from protobuf field: massa.model.v1.Slot validity_start = 3;
   */
  validityStart?: Slot;
  /**
   * End slot for the message execution
   *
   * @generated from protobuf field: massa.model.v1.Slot validity_end = 4;
   */
  validityEnd?: Slot;
  /**
   * Gas given for the execution
   *
   * @generated from protobuf field: uint64 execution_gas = 5;
   */
  executionGas: bigint;
  /**
   * Message fee
   *
   * @generated from protobuf field: uint64 raw_fee = 6;
   */
  rawFee: bigint;
  /**
   * Coins sent to the execution context
   *
   * @generated from protobuf field: uint64 raw_coins = 7;
   */
  rawCoins: bigint;
  /**
   * Message data
   *
   * @generated from protobuf field: bytes data = 8;
   */
  data: Uint8Array;
  /**
   * Filter for the message
   *
   * @generated from protobuf field: massa.abi.v1.SendAsyncMessageFilter filter = 9;
   */
  filter?: SendAsyncMessageFilter;
}
/**
 * Send async message result
 *
 * @generated from protobuf message massa.abi.v1.SendAsyncMessageResult
 */
export interface SendAsyncMessageResult {}
/**
 * Get origin operation id request
 *
 * @generated from protobuf message massa.abi.v1.GetOriginOperationIdRequest
 */
export interface GetOriginOperationIdRequest {}
/**
 * Get origin operation id result
 *
 * @generated from protobuf message massa.abi.v1.GetOriginOperationIdResult
 */
export interface GetOriginOperationIdResult {
  /**
   * @generated from protobuf field: optional google.protobuf.StringValue operation_id = 1;
   */
  operationId?: StringValue;
}
/**
 * Get native time request
 *
 * @generated from protobuf message massa.abi.v1.GetNativeTimeRequest
 */
export interface GetNativeTimeRequest {}
/**
 * Get native time result
 *
 * @generated from protobuf message massa.abi.v1.GetNativeTimeResult
 */
export interface GetNativeTimeResult {
  /**
   * Native time
   *
   * @generated from protobuf field: massa.model.v1.NativeTime time = 1;
   */
  time?: NativeTime;
}
/**
 * Get current slot request
 *
 * @generated from protobuf message massa.abi.v1.GetCurrentSlotRequest
 */
export interface GetCurrentSlotRequest {}
/**
 * Get current slot result
 *
 * @generated from protobuf message massa.abi.v1.GetCurrentSlotResult
 */
export interface GetCurrentSlotResult {
  /**
   * Current slot
   *
   * @generated from protobuf field: massa.model.v1.Slot slot = 1;
   */
  slot?: Slot;
}
/**
 * Set bytecode request
 *
 * @generated from protobuf message massa.abi.v1.SetBytecodeRequest
 */
export interface SetBytecodeRequest {
  /**
   * Bytecode
   *
   * @generated from protobuf field: bytes bytecode = 1;
   */
  bytecode: Uint8Array;
  /**
   * Address to set bytecode for, if none, use current address
   *
   * @generated from protobuf field: optional google.protobuf.StringValue address = 2;
   */
  address?: StringValue;
}
/**
 * Set bytecode result
 *
 * @generated from protobuf message massa.abi.v1.SetBytecodeResult
 */
export interface SetBytecodeResult {}
/**
 * Get bytecode request
 *
 * @generated from protobuf message massa.abi.v1.GetBytecodeRequest
 */
export interface GetBytecodeRequest {
  /**
   * Address to get bytecode for, if none, use current address
   *
   * @generated from protobuf field: optional google.protobuf.StringValue address = 1;
   */
  address?: StringValue;
}
/**
 * Get bytecode result
 *
 * @generated from protobuf message massa.abi.v1.GetBytecodeResult
 */
export interface GetBytecodeResult {
  /**
   * Bytecode
   *
   * @generated from protobuf field: bytes bytecode = 1;
   */
  bytecode: Uint8Array;
}
/**
 * Caller has write access request
 *
 * @generated from protobuf message massa.abi.v1.CallerHasWriteAccessRequest
 */
export interface CallerHasWriteAccessRequest {}
/**
 * Caller has write access result
 *
 * @generated from protobuf message massa.abi.v1.CallerHasWriteAccessResult
 */
export interface CallerHasWriteAccessResult {
  /**
   * Caller has write access
   *
   * @generated from protobuf field: bool has_write_access = 1;
   */
  hasWriteAccess: boolean;
}
/**
 * Hash sha256 request
 *
 * @generated from protobuf message massa.abi.v1.HashSha256Request
 */
export interface HashSha256Request {
  /**
   * data
   *
   * @generated from protobuf field: bytes data = 1;
   */
  data: Uint8Array;
}
/**
 * Hash sha256 result
 *
 * @generated from protobuf message massa.abi.v1.HashSha256Result
 */
export interface HashSha256Result {
  /**
   * hash
   *
   * @generated from protobuf field: bytes hash = 1;
   */
  hash: Uint8Array;
}
/**
 * Get op data request
 *
 * @generated from protobuf message massa.abi.v1.GetOpDataRequest
 */
export interface GetOpDataRequest {
  /**
   * key
   *
   * @generated from protobuf field: bytes key = 1;
   */
  key: Uint8Array;
}
/**
 * Get op data result
 *
 * @generated from protobuf message massa.abi.v1.GetOpDataResult
 */
export interface GetOpDataResult {
  /**
   * value
   *
   * @generated from protobuf field: bytes value = 1;
   */
  value: Uint8Array;
}
/**
 * Op entry exists request
 *
 * @generated from protobuf message massa.abi.v1.OpEntryExistsRequest
 */
export interface OpEntryExistsRequest {
  /**
   * key
   *
   * @generated from protobuf field: bytes key = 1;
   */
  key: Uint8Array;
}
/**
 * Op entry exists result
 *
 * @generated from protobuf message massa.abi.v1.OpEntryExistsResult
 */
export interface OpEntryExistsResult {
  /**
   * has key
   *
   * @generated from protobuf field: bool has_key = 1;
   */
  hasKey: boolean;
}
/**
 * Get op keys request
 *
 * @generated from protobuf message massa.abi.v1.GetOpKeysRequest
 */
export interface GetOpKeysRequest {
  /**
   * keys prefix
   *
   * @generated from protobuf field: bytes prefix = 1;
   */
  prefix: Uint8Array;
}
/**
 * Get op keys result
 *
 * @generated from protobuf message massa.abi.v1.GetOpKeysResult
 */
export interface GetOpKeysResult {
  /**
   * keys
   *
   * @generated from protobuf field: repeated bytes keys = 1;
   */
  keys: Uint8Array[];
}
/**
 * Get remaining gas request
 *
 * @generated from protobuf message massa.abi.v1.GetRemainingGasRequest
 */
export interface GetRemainingGasRequest {}
/**
 * Get remaining gas result
 *
 * @generated from protobuf message massa.abi.v1.GetRemainingGasResult
 */
export interface GetRemainingGasResult {
  /**
   * remaining gas
   *
   * @generated from protobuf field: uint64 remaining_gas = 1;
   */
  remainingGas: bigint;
}
/**
 * Get balance request
 *
 * @generated from protobuf message massa.abi.v1.GetBalanceRequest
 */
export interface GetBalanceRequest {
  /**
   * Address to get balance for, if none, use current address
   *
   * @generated from protobuf field: optional google.protobuf.StringValue address = 1;
   */
  address?: StringValue;
}
/**
 * Get balance result
 *
 * @generated from protobuf message massa.abi.v1.GetBalanceResult
 */
export interface GetBalanceResult {
  /**
   * balance
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount balance = 1;
   */
  balance?: NativeAmount;
}
/**
 * Get call coins request
 *
 * @generated from protobuf message massa.abi.v1.GetCallCoinsRequest
 */
export interface GetCallCoinsRequest {}
/**
 * Get call coins result
 *
 * @generated from protobuf message massa.abi.v1.GetCallCoinsResult
 */
export interface GetCallCoinsResult {
  /**
   * coins
   *
   * @generated from protobuf field: massa.model.v1.NativeAmount coins = 1;
   */
  coins?: NativeAmount;
}
/**
 * Get the version of the address request
 *
 * @generated from protobuf message massa.abi.v1.GetAddressVersionRequest
 */
export interface GetAddressVersionRequest {
  /**
   * @generated from protobuf field: string address = 1;
   */
  address: string;
}
/**
 * Get the version of the address result
 *
 * @generated from protobuf message massa.abi.v1.GetAddressVersionResult
 */
export interface GetAddressVersionResult {
  /**
   * @generated from protobuf field: uint64 version = 1;
   */
  version: bigint;
}
/**
 * Get the category of the address request
 *
 * @generated from protobuf message massa.abi.v1.GetAddressCategoryRequest
 */
export interface GetAddressCategoryRequest {
  /**
   * @generated from protobuf field: string address = 1;
   */
  address: string;
}
/**
 * Get the category of the address result
 *
 * @generated from protobuf message massa.abi.v1.GetAddressCategoryResult
 */
export interface GetAddressCategoryResult {
  /**
   * @generated from protobuf field: massa.model.v1.AddressCategory category = 1;
   */
  category: AddressCategory;
}
/**
 * Get the version of the public key request
 *
 * @generated from protobuf message massa.abi.v1.GetPubKeyVersionRequest
 */
export interface GetPubKeyVersionRequest {
  /**
   * @generated from protobuf field: string pub_key = 1;
   */
  pubKey: string;
}
/**
 * Get the version of the public key result
 *
 * @generated from protobuf message massa.abi.v1.GetPubKeyVersionResult
 */
export interface GetPubKeyVersionResult {
  /**
   * @generated from protobuf field: uint64 version = 1;
   */
  version: bigint;
}
/**
 * Get the version of the signature request
 *
 * @generated from protobuf message massa.abi.v1.GetSignatureVersionRequest
 */
export interface GetSignatureVersionRequest {
  /**
   * @generated from protobuf field: string signature = 1;
   */
  signature: string;
}
/**
 * Get the version of the signature result
 *
 * @generated from protobuf message massa.abi.v1.GetSignatureVersionResult
 */
export interface GetSignatureVersionResult {
  /**
   * @generated from protobuf field: uint64 version = 1;
   */
  version: bigint;
}
/**
 * bytes to base58 request
 *
 * @generated from protobuf message massa.abi.v1.BytesToBase58CheckRequest
 */
export interface BytesToBase58CheckRequest {
  /**
   * @generated from protobuf field: bytes bytes = 1;
   */
  bytes: Uint8Array;
}
/**
 * bytes to base58 result
 *
 * @generated from protobuf message massa.abi.v1.BytesToBase58CheckResult
 */
export interface BytesToBase58CheckResult {
  /**
   * @generated from protobuf field: string base58_check = 1;
   */
  base58Check: string;
}
/**
 * base58 to bytes request
 *
 * @generated from protobuf message massa.abi.v1.Base58CheckToBytesRequest
 */
export interface Base58CheckToBytesRequest {
  /**
   * @generated from protobuf field: string base58_check = 1;
   */
  base58Check: string;
}
/**
 * base58 to bytes result
 *
 * @generated from protobuf message massa.abi.v1.Base58CheckToBytesResult
 */
export interface Base58CheckToBytesResult {
  /**
   * @generated from protobuf field: bytes bytes = 1;
   */
  bytes: Uint8Array;
}
// @generated message type with reflection information, may provide speed optimized methods
class Error$Type extends MessageType<Error> {
  constructor() {
    super('massa.abi.v1.Error', [
      { no: 1, name: 'message', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
    ]);
  }
  create(value?: PartialMessage<Error>): Error {
    const message = { message: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<Error>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: Error,
  ): Error {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string message */ 1:
          message.message = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: Error,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string message = 1; */
    if (message.message !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.message);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.Error
 */
export const Error = new Error$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateScRequest$Type extends MessageType<CreateScRequest> {
  constructor() {
    super('massa.abi.v1.CreateScRequest', [
      { no: 1, name: 'bytecode', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<CreateScRequest>): CreateScRequest {
    const message = { bytecode: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CreateScRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CreateScRequest,
  ): CreateScRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes bytecode */ 1:
          message.bytecode = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CreateScRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes bytecode = 1; */
    if (message.bytecode.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.bytecode);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CreateScRequest
 */
export const CreateScRequest = new CreateScRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CreateScResult$Type extends MessageType<CreateScResult> {
  constructor() {
    super('massa.abi.v1.CreateScResult', [
      {
        no: 1,
        name: 'sc_address',
        kind: 'scalar',
        T: 9 /* ScalarType.STRING*/,
      },
    ]);
  }
  create(value?: PartialMessage<CreateScResult>): CreateScResult {
    const message = { scAddress: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CreateScResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CreateScResult,
  ): CreateScResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string sc_address */ 1:
          message.scAddress = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CreateScResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string sc_address = 1; */
    if (message.scAddress !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.scAddress);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CreateScResult
 */
export const CreateScResult = new CreateScResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CallRequest$Type extends MessageType<CallRequest> {
  constructor() {
    super('massa.abi.v1.CallRequest', [
      {
        no: 1,
        name: 'target_sc_address',
        kind: 'scalar',
        T: 9 /* ScalarType.STRING*/,
      },
      {
        no: 2,
        name: 'target_function_name',
        kind: 'scalar',
        T: 9 /* ScalarType.STRING*/,
      },
      {
        no: 3,
        name: 'function_arg',
        kind: 'scalar',
        T: 12 /* ScalarType.BYTES*/,
      },
      { no: 4, name: 'call_coins', kind: 'message', T: () => NativeAmount },
    ]);
  }
  create(value?: PartialMessage<CallRequest>): CallRequest {
    const message = {
      targetScAddress: '',
      targetFunctionName: '',
      functionArg: new Uint8Array(0),
    };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CallRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CallRequest,
  ): CallRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string target_sc_address */ 1:
          message.targetScAddress = reader.string();
          break;
        case /* string target_function_name */ 2:
          message.targetFunctionName = reader.string();
          break;
        case /* bytes function_arg */ 3:
          message.functionArg = reader.bytes();
          break;
        case /* massa.model.v1.NativeAmount call_coins */ 4:
          message.callCoins = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.callCoins,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CallRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string target_sc_address = 1; */
    if (message.targetScAddress !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.targetScAddress);
    /* string target_function_name = 2; */
    if (message.targetFunctionName !== '')
      writer
        .tag(2, WireType.LengthDelimited)
        .string(message.targetFunctionName);
    /* bytes function_arg = 3; */
    if (message.functionArg.length)
      writer.tag(3, WireType.LengthDelimited).bytes(message.functionArg);
    /* massa.model.v1.NativeAmount call_coins = 4; */
    if (message.callCoins)
      NativeAmount.internalBinaryWrite(
        message.callCoins,
        writer.tag(4, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CallRequest
 */
export const CallRequest = new CallRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CallResponse$Type extends MessageType<CallResponse> {
  constructor() {
    super('massa.abi.v1.CallResponse', [
      { no: 1, name: 'data', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<CallResponse>): CallResponse {
    const message = { data: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CallResponse>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CallResponse,
  ): CallResponse {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes data */ 1:
          message.data = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CallResponse,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes data = 1; */
    if (message.data.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.data);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CallResponse
 */
export const CallResponse = new CallResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LocalExecutionRequest$Type extends MessageType<LocalExecutionRequest> {
  constructor() {
    super('massa.abi.v1.LocalExecutionRequest', [
      { no: 1, name: 'bytecode', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      {
        no: 2,
        name: 'target_function_name',
        kind: 'scalar',
        T: 9 /* ScalarType.STRING*/,
      },
      {
        no: 3,
        name: 'function_arg',
        kind: 'scalar',
        T: 12 /* ScalarType.BYTES*/,
      },
    ]);
  }
  create(value?: PartialMessage<LocalExecutionRequest>): LocalExecutionRequest {
    const message = {
      bytecode: new Uint8Array(0),
      targetFunctionName: '',
      functionArg: new Uint8Array(0),
    };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<LocalExecutionRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: LocalExecutionRequest,
  ): LocalExecutionRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes bytecode */ 1:
          message.bytecode = reader.bytes();
          break;
        case /* string target_function_name */ 2:
          message.targetFunctionName = reader.string();
          break;
        case /* bytes function_arg */ 3:
          message.functionArg = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: LocalExecutionRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes bytecode = 1; */
    if (message.bytecode.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.bytecode);
    /* string target_function_name = 2; */
    if (message.targetFunctionName !== '')
      writer
        .tag(2, WireType.LengthDelimited)
        .string(message.targetFunctionName);
    /* bytes function_arg = 3; */
    if (message.functionArg.length)
      writer.tag(3, WireType.LengthDelimited).bytes(message.functionArg);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.LocalExecutionRequest
 */
export const LocalExecutionRequest = new LocalExecutionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LocalExecutionResponse$Type extends MessageType<LocalExecutionResponse> {
  constructor() {
    super('massa.abi.v1.LocalExecutionResponse', [
      { no: 1, name: 'data', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(
    value?: PartialMessage<LocalExecutionResponse>,
  ): LocalExecutionResponse {
    const message = { data: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<LocalExecutionResponse>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: LocalExecutionResponse,
  ): LocalExecutionResponse {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes data */ 1:
          message.data = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: LocalExecutionResponse,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes data = 1; */
    if (message.data.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.data);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.LocalExecutionResponse
 */
export const LocalExecutionResponse = new LocalExecutionResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateEventRequest$Type extends MessageType<GenerateEventRequest> {
  constructor() {
    super('massa.abi.v1.GenerateEventRequest', [
      { no: 1, name: 'event', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<GenerateEventRequest>): GenerateEventRequest {
    const message = { event: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GenerateEventRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GenerateEventRequest,
  ): GenerateEventRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes event */ 1:
          message.event = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GenerateEventRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes event = 1; */
    if (message.event.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.event);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GenerateEventRequest
 */
export const GenerateEventRequest = new GenerateEventRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GenerateEventResult$Type extends MessageType<GenerateEventResult> {
  constructor() {
    super('massa.abi.v1.GenerateEventResult', []);
  }
  create(value?: PartialMessage<GenerateEventResult>): GenerateEventResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GenerateEventResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GenerateEventResult,
  ): GenerateEventResult {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: GenerateEventResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GenerateEventResult
 */
export const GenerateEventResult = new GenerateEventResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TransferCoinsRequest$Type extends MessageType<TransferCoinsRequest> {
  constructor() {
    super('massa.abi.v1.TransferCoinsRequest', [
      {
        no: 1,
        name: 'target_address',
        kind: 'scalar',
        T: 9 /* ScalarType.STRING*/,
      },
      {
        no: 2,
        name: 'amount_to_transfer',
        kind: 'message',
        T: () => NativeAmount,
      },
      { no: 3, name: 'sender_address', kind: 'message', T: () => StringValue },
    ]);
  }
  create(value?: PartialMessage<TransferCoinsRequest>): TransferCoinsRequest {
    const message = { targetAddress: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<TransferCoinsRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: TransferCoinsRequest,
  ): TransferCoinsRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string target_address */ 1:
          message.targetAddress = reader.string();
          break;
        case /* massa.model.v1.NativeAmount amount_to_transfer */ 2:
          message.amountToTransfer = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.amountToTransfer,
          );
          break;
        case /* optional google.protobuf.StringValue sender_address */ 3:
          message.senderAddress = StringValue.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.senderAddress,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: TransferCoinsRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string target_address = 1; */
    if (message.targetAddress !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.targetAddress);
    /* massa.model.v1.NativeAmount amount_to_transfer = 2; */
    if (message.amountToTransfer)
      NativeAmount.internalBinaryWrite(
        message.amountToTransfer,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* optional google.protobuf.StringValue sender_address = 3; */
    if (message.senderAddress)
      StringValue.internalBinaryWrite(
        message.senderAddress,
        writer.tag(3, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.TransferCoinsRequest
 */
export const TransferCoinsRequest = new TransferCoinsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TransferCoinsResult$Type extends MessageType<TransferCoinsResult> {
  constructor() {
    super('massa.abi.v1.TransferCoinsResult', []);
  }
  create(value?: PartialMessage<TransferCoinsResult>): TransferCoinsResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<TransferCoinsResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: TransferCoinsResult,
  ): TransferCoinsResult {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: TransferCoinsResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.TransferCoinsResult
 */
export const TransferCoinsResult = new TransferCoinsResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FunctionExistsRequest$Type extends MessageType<FunctionExistsRequest> {
  constructor() {
    super('massa.abi.v1.FunctionExistsRequest', [
      {
        no: 1,
        name: 'target_sc_address',
        kind: 'scalar',
        T: 9 /* ScalarType.STRING*/,
      },
      {
        no: 2,
        name: 'function_name',
        kind: 'scalar',
        T: 9 /* ScalarType.STRING*/,
      },
    ]);
  }
  create(value?: PartialMessage<FunctionExistsRequest>): FunctionExistsRequest {
    const message = { targetScAddress: '', functionName: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<FunctionExistsRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: FunctionExistsRequest,
  ): FunctionExistsRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string target_sc_address */ 1:
          message.targetScAddress = reader.string();
          break;
        case /* string function_name */ 2:
          message.functionName = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: FunctionExistsRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string target_sc_address = 1; */
    if (message.targetScAddress !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.targetScAddress);
    /* string function_name = 2; */
    if (message.functionName !== '')
      writer.tag(2, WireType.LengthDelimited).string(message.functionName);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.FunctionExistsRequest
 */
export const FunctionExistsRequest = new FunctionExistsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FunctionExistsResult$Type extends MessageType<FunctionExistsResult> {
  constructor() {
    super('massa.abi.v1.FunctionExistsResult', [
      { no: 1, name: 'exists', kind: 'scalar', T: 8 /* ScalarType.BOOL*/ },
    ]);
  }
  create(value?: PartialMessage<FunctionExistsResult>): FunctionExistsResult {
    const message = { exists: false };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<FunctionExistsResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: FunctionExistsResult,
  ): FunctionExistsResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bool exists */ 1:
          message.exists = reader.bool();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: FunctionExistsResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bool exists = 1; */
    if (message.exists !== false)
      writer.tag(1, WireType.Varint).bool(message.exists);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.FunctionExistsResult
 */
export const FunctionExistsResult = new FunctionExistsResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RespResult$Type extends MessageType<RespResult> {
  constructor() {
    super('massa.abi.v1.RespResult', [
      {
        no: 1,
        name: 'add_native_amount_result',
        kind: 'message',
        oneof: 'res',
        T: () => AddNativeAmountResult,
      },
      {
        no: 2,
        name: 'address_from_pub_key_result',
        kind: 'message',
        oneof: 'res',
        T: () => AddressFromPubKeyResult,
      },
      {
        no: 3,
        name: 'append_ds_value_result',
        kind: 'message',
        oneof: 'res',
        T: () => AppendDsValueResult,
      },
      {
        no: 4,
        name: 'base58_check_to_bytes_result',
        kind: 'message',
        oneof: 'res',
        T: () => Base58CheckToBytesResult,
      },
      {
        no: 5,
        name: 'bytes_to_base58_check_result',
        kind: 'message',
        oneof: 'res',
        T: () => BytesToBase58CheckResult,
      },
      {
        no: 6,
        name: 'caller_has_write_access_result',
        kind: 'message',
        oneof: 'res',
        T: () => CallerHasWriteAccessResult,
      },
      {
        no: 7,
        name: 'check_address_result',
        kind: 'message',
        oneof: 'res',
        T: () => CheckAddressResult,
      },
      {
        no: 8,
        name: 'check_native_amount_result',
        kind: 'message',
        oneof: 'res',
        T: () => CheckNativeAmountResult,
      },
      {
        no: 9,
        name: 'check_pub_key_result',
        kind: 'message',
        oneof: 'res',
        T: () => CheckPubKeyResult,
      },
      {
        no: 10,
        name: 'check_sig_result',
        kind: 'message',
        oneof: 'res',
        T: () => CheckSigResult,
      },
      {
        no: 11,
        name: 'checked_add_native_time_result',
        kind: 'message',
        oneof: 'res',
        T: () => CheckedAddNativeTimeResult,
      },
      {
        no: 12,
        name: 'checked_div_rem_native_time_result',
        kind: 'message',
        oneof: 'res',
        T: () => CheckedDivRemNativeTimeResult,
      },
      {
        no: 13,
        name: 'checked_scalar_div_rem_native_time_result',
        kind: 'message',
        oneof: 'res',
        T: () => CheckedScalarDivRemNativeTimeResult,
      },
      {
        no: 14,
        name: 'checked_scalar_mul_native_time_result',
        kind: 'message',
        oneof: 'res',
        T: () => CheckedScalarMulNativeTimeResult,
      },
      {
        no: 15,
        name: 'checked_sub_native_time_result',
        kind: 'message',
        oneof: 'res',
        T: () => CheckedSubNativeTimeResult,
      },
      {
        no: 16,
        name: 'compare_address_result',
        kind: 'message',
        oneof: 'res',
        T: () => CompareAddressResult,
      },
      {
        no: 17,
        name: 'compare_native_amount_result',
        kind: 'message',
        oneof: 'res',
        T: () => CompareNativeAmountResult,
      },
      {
        no: 18,
        name: 'compare_native_time_result',
        kind: 'message',
        oneof: 'res',
        T: () => CompareNativeTimeResult,
      },
      {
        no: 19,
        name: 'compare_pub_key_result',
        kind: 'message',
        oneof: 'res',
        T: () => ComparePubKeyResult,
      },
      {
        no: 20,
        name: 'create_sc_result',
        kind: 'message',
        oneof: 'res',
        T: () => CreateScResult,
      },
      {
        no: 21,
        name: 'delete_ds_entry_result',
        kind: 'message',
        oneof: 'res',
        T: () => DeleteDsEntryResult,
      },
      {
        no: 22,
        name: 'div_rem_native_amount_result',
        kind: 'message',
        oneof: 'res',
        T: () => DivRemNativeAmountResult,
      },
      {
        no: 23,
        name: 'ds_entry_exists_result',
        kind: 'message',
        oneof: 'res',
        T: () => DsEntryExistsResult,
      },
      {
        no: 24,
        name: 'function_exists_result',
        kind: 'message',
        oneof: 'res',
        T: () => FunctionExistsResult,
      },
      {
        no: 25,
        name: 'generate_event_result',
        kind: 'message',
        oneof: 'res',
        T: () => GenerateEventResult,
      },
      {
        no: 26,
        name: 'get_address_category_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetAddressCategoryResult,
      },
      {
        no: 27,
        name: 'get_address_version_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetAddressVersionResult,
      },
      {
        no: 28,
        name: 'get_balance_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetBalanceResult,
      },
      {
        no: 29,
        name: 'get_bytecode_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetBytecodeResult,
      },
      {
        no: 30,
        name: 'get_call_coins_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetCallCoinsResult,
      },
      {
        no: 31,
        name: 'get_call_stack_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetCallStackResult,
      },
      {
        no: 32,
        name: 'get_current_slot_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetCurrentSlotResult,
      },
      {
        no: 33,
        name: 'get_ds_keys_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetDsKeysResult,
      },
      {
        no: 34,
        name: 'get_ds_value_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetDsValueResult,
      },
      {
        no: 35,
        name: 'get_native_time_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetNativeTimeResult,
      },
      {
        no: 36,
        name: 'get_op_data_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetOpDataResult,
      },
      {
        no: 37,
        name: 'get_op_keys_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetOpKeysResult,
      },
      {
        no: 38,
        name: 'get_origin_operation_id_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetOriginOperationIdResult,
      },
      {
        no: 39,
        name: 'get_owned_addresses_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetOwnedAddressesResult,
      },
      {
        no: 40,
        name: 'get_pub_key_version_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetPubKeyVersionResult,
      },
      {
        no: 41,
        name: 'get_remaining_gas_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetRemainingGasResult,
      },
      {
        no: 42,
        name: 'get_signature_version_result',
        kind: 'message',
        oneof: 'res',
        T: () => GetSignatureVersionResult,
      },
      {
        no: 43,
        name: 'hash_blake3_result',
        kind: 'message',
        oneof: 'res',
        T: () => HashBlake3Result,
      },
      {
        no: 44,
        name: 'hash_sha256_result',
        kind: 'message',
        oneof: 'res',
        T: () => HashSha256Result,
      },
      {
        no: 45,
        name: 'op_entry_exists_result',
        kind: 'message',
        oneof: 'res',
        T: () => OpEntryExistsResult,
      },
      {
        no: 46,
        name: 'keccak256_result',
        kind: 'message',
        oneof: 'res',
        T: () => Keccak256Result,
      },
      {
        no: 47,
        name: 'local_execution_response',
        kind: 'message',
        oneof: 'res',
        T: () => LocalExecutionResponse,
      },
      {
        no: 48,
        name: 'native_amount_from_string_result',
        kind: 'message',
        oneof: 'res',
        T: () => NativeAmountFromStringResult,
      },
      {
        no: 49,
        name: 'native_amount_to_string_result',
        kind: 'message',
        oneof: 'res',
        T: () => NativeAmountToStringResult,
      },
      {
        no: 50,
        name: 'scalar_div_rem_native_amount_result',
        kind: 'message',
        oneof: 'res',
        T: () => ScalarDivRemNativeAmountResult,
      },
      {
        no: 51,
        name: 'scalar_mul_native_amount_result',
        kind: 'message',
        oneof: 'res',
        T: () => ScalarMulNativeAmountResult,
      },
      {
        no: 52,
        name: 'send_async_message_result',
        kind: 'message',
        oneof: 'res',
        T: () => SendAsyncMessageResult,
      },
      {
        no: 53,
        name: 'set_bytecode_result',
        kind: 'message',
        oneof: 'res',
        T: () => SetBytecodeResult,
      },
      {
        no: 54,
        name: 'set_ds_value_result',
        kind: 'message',
        oneof: 'res',
        T: () => SetDsValueResult,
      },
      {
        no: 55,
        name: 'sub_native_amount_result',
        kind: 'message',
        oneof: 'res',
        T: () => SubNativeAmountResult,
      },
      {
        no: 56,
        name: 'transfer_coins_result',
        kind: 'message',
        oneof: 'res',
        T: () => TransferCoinsResult,
      },
      {
        no: 57,
        name: 'unsafe_random_result',
        kind: 'message',
        oneof: 'res',
        T: () => UnsafeRandomResult,
      },
      {
        no: 58,
        name: 'evm_verify_sig_result',
        kind: 'message',
        oneof: 'res',
        T: () => EvmVerifySigResult,
      },
      {
        no: 59,
        name: 'verify_sig_result',
        kind: 'message',
        oneof: 'res',
        T: () => VerifySigResult,
      },
      {
        no: 60,
        name: 'evm_get_address_from_pubkey_result',
        kind: 'message',
        oneof: 'res',
        T: () => EvmGetAddressFromPubkeyResult,
      },
      {
        no: 61,
        name: 'evm_get_pubkey_from_signature_result',
        kind: 'message',
        oneof: 'res',
        T: () => EvmGetPubkeyFromSignatureResult,
      },
      {
        no: 62,
        name: 'is_address_eoa_result',
        kind: 'message',
        oneof: 'res',
        T: () => IsAddressEoaResult,
      },
    ]);
  }
  create(value?: PartialMessage<RespResult>): RespResult {
    const message = { res: { oneofKind: undefined } };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<RespResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: RespResult,
  ): RespResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.abi.v1.AddNativeAmountResult add_native_amount_result */ 1:
          message.res = {
            oneofKind: 'addNativeAmountResult',
            addNativeAmountResult: AddNativeAmountResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).addNativeAmountResult,
            ),
          };
          break;
        case /* massa.abi.v1.AddressFromPubKeyResult address_from_pub_key_result */ 2:
          message.res = {
            oneofKind: 'addressFromPubKeyResult',
            addressFromPubKeyResult: AddressFromPubKeyResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).addressFromPubKeyResult,
            ),
          };
          break;
        case /* massa.abi.v1.AppendDsValueResult append_ds_value_result */ 3:
          message.res = {
            oneofKind: 'appendDsValueResult',
            appendDsValueResult: AppendDsValueResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).appendDsValueResult,
            ),
          };
          break;
        case /* massa.abi.v1.Base58CheckToBytesResult base58_check_to_bytes_result */ 4:
          message.res = {
            oneofKind: 'base58CheckToBytesResult',
            base58CheckToBytesResult:
              Base58CheckToBytesResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).base58CheckToBytesResult,
              ),
          };
          break;
        case /* massa.abi.v1.BytesToBase58CheckResult bytes_to_base58_check_result */ 5:
          message.res = {
            oneofKind: 'bytesToBase58CheckResult',
            bytesToBase58CheckResult:
              BytesToBase58CheckResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).bytesToBase58CheckResult,
              ),
          };
          break;
        case /* massa.abi.v1.CallerHasWriteAccessResult caller_has_write_access_result */ 6:
          message.res = {
            oneofKind: 'callerHasWriteAccessResult',
            callerHasWriteAccessResult:
              CallerHasWriteAccessResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).callerHasWriteAccessResult,
              ),
          };
          break;
        case /* massa.abi.v1.CheckAddressResult check_address_result */ 7:
          message.res = {
            oneofKind: 'checkAddressResult',
            checkAddressResult: CheckAddressResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).checkAddressResult,
            ),
          };
          break;
        case /* massa.abi.v1.CheckNativeAmountResult check_native_amount_result */ 8:
          message.res = {
            oneofKind: 'checkNativeAmountResult',
            checkNativeAmountResult: CheckNativeAmountResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).checkNativeAmountResult,
            ),
          };
          break;
        case /* massa.abi.v1.CheckPubKeyResult check_pub_key_result */ 9:
          message.res = {
            oneofKind: 'checkPubKeyResult',
            checkPubKeyResult: CheckPubKeyResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).checkPubKeyResult,
            ),
          };
          break;
        case /* massa.abi.v1.CheckSigResult check_sig_result */ 10:
          message.res = {
            oneofKind: 'checkSigResult',
            checkSigResult: CheckSigResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).checkSigResult,
            ),
          };
          break;
        case /* massa.abi.v1.CheckedAddNativeTimeResult checked_add_native_time_result */ 11:
          message.res = {
            oneofKind: 'checkedAddNativeTimeResult',
            checkedAddNativeTimeResult:
              CheckedAddNativeTimeResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).checkedAddNativeTimeResult,
              ),
          };
          break;
        case /* massa.abi.v1.CheckedDivRemNativeTimeResult checked_div_rem_native_time_result */ 12:
          message.res = {
            oneofKind: 'checkedDivRemNativeTimeResult',
            checkedDivRemNativeTimeResult:
              CheckedDivRemNativeTimeResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).checkedDivRemNativeTimeResult,
              ),
          };
          break;
        case /* massa.abi.v1.CheckedScalarDivRemNativeTimeResult checked_scalar_div_rem_native_time_result */ 13:
          message.res = {
            oneofKind: 'checkedScalarDivRemNativeTimeResult',
            checkedScalarDivRemNativeTimeResult:
              CheckedScalarDivRemNativeTimeResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).checkedScalarDivRemNativeTimeResult,
              ),
          };
          break;
        case /* massa.abi.v1.CheckedScalarMulNativeTimeResult checked_scalar_mul_native_time_result */ 14:
          message.res = {
            oneofKind: 'checkedScalarMulNativeTimeResult',
            checkedScalarMulNativeTimeResult:
              CheckedScalarMulNativeTimeResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).checkedScalarMulNativeTimeResult,
              ),
          };
          break;
        case /* massa.abi.v1.CheckedSubNativeTimeResult checked_sub_native_time_result */ 15:
          message.res = {
            oneofKind: 'checkedSubNativeTimeResult',
            checkedSubNativeTimeResult:
              CheckedSubNativeTimeResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).checkedSubNativeTimeResult,
              ),
          };
          break;
        case /* massa.abi.v1.CompareAddressResult compare_address_result */ 16:
          message.res = {
            oneofKind: 'compareAddressResult',
            compareAddressResult: CompareAddressResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).compareAddressResult,
            ),
          };
          break;
        case /* massa.abi.v1.CompareNativeAmountResult compare_native_amount_result */ 17:
          message.res = {
            oneofKind: 'compareNativeAmountResult',
            compareNativeAmountResult:
              CompareNativeAmountResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).compareNativeAmountResult,
              ),
          };
          break;
        case /* massa.abi.v1.CompareNativeTimeResult compare_native_time_result */ 18:
          message.res = {
            oneofKind: 'compareNativeTimeResult',
            compareNativeTimeResult: CompareNativeTimeResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).compareNativeTimeResult,
            ),
          };
          break;
        case /* massa.abi.v1.ComparePubKeyResult compare_pub_key_result */ 19:
          message.res = {
            oneofKind: 'comparePubKeyResult',
            comparePubKeyResult: ComparePubKeyResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).comparePubKeyResult,
            ),
          };
          break;
        case /* massa.abi.v1.CreateScResult create_sc_result */ 20:
          message.res = {
            oneofKind: 'createScResult',
            createScResult: CreateScResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).createScResult,
            ),
          };
          break;
        case /* massa.abi.v1.DeleteDsEntryResult delete_ds_entry_result */ 21:
          message.res = {
            oneofKind: 'deleteDsEntryResult',
            deleteDsEntryResult: DeleteDsEntryResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).deleteDsEntryResult,
            ),
          };
          break;
        case /* massa.abi.v1.DivRemNativeAmountResult div_rem_native_amount_result */ 22:
          message.res = {
            oneofKind: 'divRemNativeAmountResult',
            divRemNativeAmountResult:
              DivRemNativeAmountResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).divRemNativeAmountResult,
              ),
          };
          break;
        case /* massa.abi.v1.DsEntryExistsResult ds_entry_exists_result */ 23:
          message.res = {
            oneofKind: 'dsEntryExistsResult',
            dsEntryExistsResult: DsEntryExistsResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).dsEntryExistsResult,
            ),
          };
          break;
        case /* massa.abi.v1.FunctionExistsResult function_exists_result */ 24:
          message.res = {
            oneofKind: 'functionExistsResult',
            functionExistsResult: FunctionExistsResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).functionExistsResult,
            ),
          };
          break;
        case /* massa.abi.v1.GenerateEventResult generate_event_result */ 25:
          message.res = {
            oneofKind: 'generateEventResult',
            generateEventResult: GenerateEventResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).generateEventResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetAddressCategoryResult get_address_category_result */ 26:
          message.res = {
            oneofKind: 'getAddressCategoryResult',
            getAddressCategoryResult:
              GetAddressCategoryResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).getAddressCategoryResult,
              ),
          };
          break;
        case /* massa.abi.v1.GetAddressVersionResult get_address_version_result */ 27:
          message.res = {
            oneofKind: 'getAddressVersionResult',
            getAddressVersionResult: GetAddressVersionResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).getAddressVersionResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetBalanceResult get_balance_result */ 28:
          message.res = {
            oneofKind: 'getBalanceResult',
            getBalanceResult: GetBalanceResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).getBalanceResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetBytecodeResult get_bytecode_result */ 29:
          message.res = {
            oneofKind: 'getBytecodeResult',
            getBytecodeResult: GetBytecodeResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).getBytecodeResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetCallCoinsResult get_call_coins_result */ 30:
          message.res = {
            oneofKind: 'getCallCoinsResult',
            getCallCoinsResult: GetCallCoinsResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).getCallCoinsResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetCallStackResult get_call_stack_result */ 31:
          message.res = {
            oneofKind: 'getCallStackResult',
            getCallStackResult: GetCallStackResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).getCallStackResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetCurrentSlotResult get_current_slot_result */ 32:
          message.res = {
            oneofKind: 'getCurrentSlotResult',
            getCurrentSlotResult: GetCurrentSlotResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).getCurrentSlotResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetDsKeysResult get_ds_keys_result */ 33:
          message.res = {
            oneofKind: 'getDsKeysResult',
            getDsKeysResult: GetDsKeysResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).getDsKeysResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetDsValueResult get_ds_value_result */ 34:
          message.res = {
            oneofKind: 'getDsValueResult',
            getDsValueResult: GetDsValueResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).getDsValueResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetNativeTimeResult get_native_time_result */ 35:
          message.res = {
            oneofKind: 'getNativeTimeResult',
            getNativeTimeResult: GetNativeTimeResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).getNativeTimeResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetOpDataResult get_op_data_result */ 36:
          message.res = {
            oneofKind: 'getOpDataResult',
            getOpDataResult: GetOpDataResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).getOpDataResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetOpKeysResult get_op_keys_result */ 37:
          message.res = {
            oneofKind: 'getOpKeysResult',
            getOpKeysResult: GetOpKeysResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).getOpKeysResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetOriginOperationIdResult get_origin_operation_id_result */ 38:
          message.res = {
            oneofKind: 'getOriginOperationIdResult',
            getOriginOperationIdResult:
              GetOriginOperationIdResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).getOriginOperationIdResult,
              ),
          };
          break;
        case /* massa.abi.v1.GetOwnedAddressesResult get_owned_addresses_result */ 39:
          message.res = {
            oneofKind: 'getOwnedAddressesResult',
            getOwnedAddressesResult: GetOwnedAddressesResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).getOwnedAddressesResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetPubKeyVersionResult get_pub_key_version_result */ 40:
          message.res = {
            oneofKind: 'getPubKeyVersionResult',
            getPubKeyVersionResult: GetPubKeyVersionResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).getPubKeyVersionResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetRemainingGasResult get_remaining_gas_result */ 41:
          message.res = {
            oneofKind: 'getRemainingGasResult',
            getRemainingGasResult: GetRemainingGasResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).getRemainingGasResult,
            ),
          };
          break;
        case /* massa.abi.v1.GetSignatureVersionResult get_signature_version_result */ 42:
          message.res = {
            oneofKind: 'getSignatureVersionResult',
            getSignatureVersionResult:
              GetSignatureVersionResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).getSignatureVersionResult,
              ),
          };
          break;
        case /* massa.abi.v1.HashBlake3Result hash_blake3_result */ 43:
          message.res = {
            oneofKind: 'hashBlake3Result',
            hashBlake3Result: HashBlake3Result.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).hashBlake3Result,
            ),
          };
          break;
        case /* massa.abi.v1.HashSha256Result hash_sha256_result */ 44:
          message.res = {
            oneofKind: 'hashSha256Result',
            hashSha256Result: HashSha256Result.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).hashSha256Result,
            ),
          };
          break;
        case /* massa.abi.v1.OpEntryExistsResult op_entry_exists_result */ 45:
          message.res = {
            oneofKind: 'opEntryExistsResult',
            opEntryExistsResult: OpEntryExistsResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).opEntryExistsResult,
            ),
          };
          break;
        case /* massa.abi.v1.Keccak256Result keccak256_result */ 46:
          message.res = {
            oneofKind: 'keccak256Result',
            keccak256Result: Keccak256Result.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).keccak256Result,
            ),
          };
          break;
        case /* massa.abi.v1.LocalExecutionResponse local_execution_response */ 47:
          message.res = {
            oneofKind: 'localExecutionResponse',
            localExecutionResponse: LocalExecutionResponse.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).localExecutionResponse,
            ),
          };
          break;
        case /* massa.abi.v1.NativeAmountFromStringResult native_amount_from_string_result */ 48:
          message.res = {
            oneofKind: 'nativeAmountFromStringResult',
            nativeAmountFromStringResult:
              NativeAmountFromStringResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).nativeAmountFromStringResult,
              ),
          };
          break;
        case /* massa.abi.v1.NativeAmountToStringResult native_amount_to_string_result */ 49:
          message.res = {
            oneofKind: 'nativeAmountToStringResult',
            nativeAmountToStringResult:
              NativeAmountToStringResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).nativeAmountToStringResult,
              ),
          };
          break;
        case /* massa.abi.v1.ScalarDivRemNativeAmountResult scalar_div_rem_native_amount_result */ 50:
          message.res = {
            oneofKind: 'scalarDivRemNativeAmountResult',
            scalarDivRemNativeAmountResult:
              ScalarDivRemNativeAmountResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).scalarDivRemNativeAmountResult,
              ),
          };
          break;
        case /* massa.abi.v1.ScalarMulNativeAmountResult scalar_mul_native_amount_result */ 51:
          message.res = {
            oneofKind: 'scalarMulNativeAmountResult',
            scalarMulNativeAmountResult:
              ScalarMulNativeAmountResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).scalarMulNativeAmountResult,
              ),
          };
          break;
        case /* massa.abi.v1.SendAsyncMessageResult send_async_message_result */ 52:
          message.res = {
            oneofKind: 'sendAsyncMessageResult',
            sendAsyncMessageResult: SendAsyncMessageResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).sendAsyncMessageResult,
            ),
          };
          break;
        case /* massa.abi.v1.SetBytecodeResult set_bytecode_result */ 53:
          message.res = {
            oneofKind: 'setBytecodeResult',
            setBytecodeResult: SetBytecodeResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).setBytecodeResult,
            ),
          };
          break;
        case /* massa.abi.v1.SetDsValueResult set_ds_value_result */ 54:
          message.res = {
            oneofKind: 'setDsValueResult',
            setDsValueResult: SetDsValueResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).setDsValueResult,
            ),
          };
          break;
        case /* massa.abi.v1.SubNativeAmountResult sub_native_amount_result */ 55:
          message.res = {
            oneofKind: 'subNativeAmountResult',
            subNativeAmountResult: SubNativeAmountResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).subNativeAmountResult,
            ),
          };
          break;
        case /* massa.abi.v1.TransferCoinsResult transfer_coins_result */ 56:
          message.res = {
            oneofKind: 'transferCoinsResult',
            transferCoinsResult: TransferCoinsResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).transferCoinsResult,
            ),
          };
          break;
        case /* massa.abi.v1.UnsafeRandomResult unsafe_random_result */ 57:
          message.res = {
            oneofKind: 'unsafeRandomResult',
            unsafeRandomResult: UnsafeRandomResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).unsafeRandomResult,
            ),
          };
          break;
        case /* massa.abi.v1.EvmVerifySigResult evm_verify_sig_result */ 58:
          message.res = {
            oneofKind: 'evmVerifySigResult',
            evmVerifySigResult: EvmVerifySigResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).evmVerifySigResult,
            ),
          };
          break;
        case /* massa.abi.v1.VerifySigResult verify_sig_result */ 59:
          message.res = {
            oneofKind: 'verifySigResult',
            verifySigResult: VerifySigResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).verifySigResult,
            ),
          };
          break;
        case /* massa.abi.v1.EvmGetAddressFromPubkeyResult evm_get_address_from_pubkey_result */ 60:
          message.res = {
            oneofKind: 'evmGetAddressFromPubkeyResult',
            evmGetAddressFromPubkeyResult:
              EvmGetAddressFromPubkeyResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).evmGetAddressFromPubkeyResult,
              ),
          };
          break;
        case /* massa.abi.v1.EvmGetPubkeyFromSignatureResult evm_get_pubkey_from_signature_result */ 61:
          message.res = {
            oneofKind: 'evmGetPubkeyFromSignatureResult',
            evmGetPubkeyFromSignatureResult:
              EvmGetPubkeyFromSignatureResult.internalBinaryRead(
                reader,
                reader.uint32(),
                options,
                (message.res as any).evmGetPubkeyFromSignatureResult,
              ),
          };
          break;
        case /* massa.abi.v1.IsAddressEoaResult is_address_eoa_result */ 62:
          message.res = {
            oneofKind: 'isAddressEoaResult',
            isAddressEoaResult: IsAddressEoaResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.res as any).isAddressEoaResult,
            ),
          };
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: RespResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.abi.v1.AddNativeAmountResult add_native_amount_result = 1; */
    if (message.res.oneofKind === 'addNativeAmountResult')
      AddNativeAmountResult.internalBinaryWrite(
        message.res.addNativeAmountResult,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.AddressFromPubKeyResult address_from_pub_key_result = 2; */
    if (message.res.oneofKind === 'addressFromPubKeyResult')
      AddressFromPubKeyResult.internalBinaryWrite(
        message.res.addressFromPubKeyResult,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.AppendDsValueResult append_ds_value_result = 3; */
    if (message.res.oneofKind === 'appendDsValueResult')
      AppendDsValueResult.internalBinaryWrite(
        message.res.appendDsValueResult,
        writer.tag(3, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.Base58CheckToBytesResult base58_check_to_bytes_result = 4; */
    if (message.res.oneofKind === 'base58CheckToBytesResult')
      Base58CheckToBytesResult.internalBinaryWrite(
        message.res.base58CheckToBytesResult,
        writer.tag(4, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.BytesToBase58CheckResult bytes_to_base58_check_result = 5; */
    if (message.res.oneofKind === 'bytesToBase58CheckResult')
      BytesToBase58CheckResult.internalBinaryWrite(
        message.res.bytesToBase58CheckResult,
        writer.tag(5, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.CallerHasWriteAccessResult caller_has_write_access_result = 6; */
    if (message.res.oneofKind === 'callerHasWriteAccessResult')
      CallerHasWriteAccessResult.internalBinaryWrite(
        message.res.callerHasWriteAccessResult,
        writer.tag(6, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.CheckAddressResult check_address_result = 7; */
    if (message.res.oneofKind === 'checkAddressResult')
      CheckAddressResult.internalBinaryWrite(
        message.res.checkAddressResult,
        writer.tag(7, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.CheckNativeAmountResult check_native_amount_result = 8; */
    if (message.res.oneofKind === 'checkNativeAmountResult')
      CheckNativeAmountResult.internalBinaryWrite(
        message.res.checkNativeAmountResult,
        writer.tag(8, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.CheckPubKeyResult check_pub_key_result = 9; */
    if (message.res.oneofKind === 'checkPubKeyResult')
      CheckPubKeyResult.internalBinaryWrite(
        message.res.checkPubKeyResult,
        writer.tag(9, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.CheckSigResult check_sig_result = 10; */
    if (message.res.oneofKind === 'checkSigResult')
      CheckSigResult.internalBinaryWrite(
        message.res.checkSigResult,
        writer.tag(10, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.CheckedAddNativeTimeResult checked_add_native_time_result = 11; */
    if (message.res.oneofKind === 'checkedAddNativeTimeResult')
      CheckedAddNativeTimeResult.internalBinaryWrite(
        message.res.checkedAddNativeTimeResult,
        writer.tag(11, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.CheckedDivRemNativeTimeResult checked_div_rem_native_time_result = 12; */
    if (message.res.oneofKind === 'checkedDivRemNativeTimeResult')
      CheckedDivRemNativeTimeResult.internalBinaryWrite(
        message.res.checkedDivRemNativeTimeResult,
        writer.tag(12, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.CheckedScalarDivRemNativeTimeResult checked_scalar_div_rem_native_time_result = 13; */
    if (message.res.oneofKind === 'checkedScalarDivRemNativeTimeResult')
      CheckedScalarDivRemNativeTimeResult.internalBinaryWrite(
        message.res.checkedScalarDivRemNativeTimeResult,
        writer.tag(13, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.CheckedScalarMulNativeTimeResult checked_scalar_mul_native_time_result = 14; */
    if (message.res.oneofKind === 'checkedScalarMulNativeTimeResult')
      CheckedScalarMulNativeTimeResult.internalBinaryWrite(
        message.res.checkedScalarMulNativeTimeResult,
        writer.tag(14, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.CheckedSubNativeTimeResult checked_sub_native_time_result = 15; */
    if (message.res.oneofKind === 'checkedSubNativeTimeResult')
      CheckedSubNativeTimeResult.internalBinaryWrite(
        message.res.checkedSubNativeTimeResult,
        writer.tag(15, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.CompareAddressResult compare_address_result = 16; */
    if (message.res.oneofKind === 'compareAddressResult')
      CompareAddressResult.internalBinaryWrite(
        message.res.compareAddressResult,
        writer.tag(16, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.CompareNativeAmountResult compare_native_amount_result = 17; */
    if (message.res.oneofKind === 'compareNativeAmountResult')
      CompareNativeAmountResult.internalBinaryWrite(
        message.res.compareNativeAmountResult,
        writer.tag(17, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.CompareNativeTimeResult compare_native_time_result = 18; */
    if (message.res.oneofKind === 'compareNativeTimeResult')
      CompareNativeTimeResult.internalBinaryWrite(
        message.res.compareNativeTimeResult,
        writer.tag(18, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.ComparePubKeyResult compare_pub_key_result = 19; */
    if (message.res.oneofKind === 'comparePubKeyResult')
      ComparePubKeyResult.internalBinaryWrite(
        message.res.comparePubKeyResult,
        writer.tag(19, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.CreateScResult create_sc_result = 20; */
    if (message.res.oneofKind === 'createScResult')
      CreateScResult.internalBinaryWrite(
        message.res.createScResult,
        writer.tag(20, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.DeleteDsEntryResult delete_ds_entry_result = 21; */
    if (message.res.oneofKind === 'deleteDsEntryResult')
      DeleteDsEntryResult.internalBinaryWrite(
        message.res.deleteDsEntryResult,
        writer.tag(21, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.DivRemNativeAmountResult div_rem_native_amount_result = 22; */
    if (message.res.oneofKind === 'divRemNativeAmountResult')
      DivRemNativeAmountResult.internalBinaryWrite(
        message.res.divRemNativeAmountResult,
        writer.tag(22, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.DsEntryExistsResult ds_entry_exists_result = 23; */
    if (message.res.oneofKind === 'dsEntryExistsResult')
      DsEntryExistsResult.internalBinaryWrite(
        message.res.dsEntryExistsResult,
        writer.tag(23, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.FunctionExistsResult function_exists_result = 24; */
    if (message.res.oneofKind === 'functionExistsResult')
      FunctionExistsResult.internalBinaryWrite(
        message.res.functionExistsResult,
        writer.tag(24, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GenerateEventResult generate_event_result = 25; */
    if (message.res.oneofKind === 'generateEventResult')
      GenerateEventResult.internalBinaryWrite(
        message.res.generateEventResult,
        writer.tag(25, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetAddressCategoryResult get_address_category_result = 26; */
    if (message.res.oneofKind === 'getAddressCategoryResult')
      GetAddressCategoryResult.internalBinaryWrite(
        message.res.getAddressCategoryResult,
        writer.tag(26, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetAddressVersionResult get_address_version_result = 27; */
    if (message.res.oneofKind === 'getAddressVersionResult')
      GetAddressVersionResult.internalBinaryWrite(
        message.res.getAddressVersionResult,
        writer.tag(27, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetBalanceResult get_balance_result = 28; */
    if (message.res.oneofKind === 'getBalanceResult')
      GetBalanceResult.internalBinaryWrite(
        message.res.getBalanceResult,
        writer.tag(28, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetBytecodeResult get_bytecode_result = 29; */
    if (message.res.oneofKind === 'getBytecodeResult')
      GetBytecodeResult.internalBinaryWrite(
        message.res.getBytecodeResult,
        writer.tag(29, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetCallCoinsResult get_call_coins_result = 30; */
    if (message.res.oneofKind === 'getCallCoinsResult')
      GetCallCoinsResult.internalBinaryWrite(
        message.res.getCallCoinsResult,
        writer.tag(30, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetCallStackResult get_call_stack_result = 31; */
    if (message.res.oneofKind === 'getCallStackResult')
      GetCallStackResult.internalBinaryWrite(
        message.res.getCallStackResult,
        writer.tag(31, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetCurrentSlotResult get_current_slot_result = 32; */
    if (message.res.oneofKind === 'getCurrentSlotResult')
      GetCurrentSlotResult.internalBinaryWrite(
        message.res.getCurrentSlotResult,
        writer.tag(32, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetDsKeysResult get_ds_keys_result = 33; */
    if (message.res.oneofKind === 'getDsKeysResult')
      GetDsKeysResult.internalBinaryWrite(
        message.res.getDsKeysResult,
        writer.tag(33, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetDsValueResult get_ds_value_result = 34; */
    if (message.res.oneofKind === 'getDsValueResult')
      GetDsValueResult.internalBinaryWrite(
        message.res.getDsValueResult,
        writer.tag(34, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetNativeTimeResult get_native_time_result = 35; */
    if (message.res.oneofKind === 'getNativeTimeResult')
      GetNativeTimeResult.internalBinaryWrite(
        message.res.getNativeTimeResult,
        writer.tag(35, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetOpDataResult get_op_data_result = 36; */
    if (message.res.oneofKind === 'getOpDataResult')
      GetOpDataResult.internalBinaryWrite(
        message.res.getOpDataResult,
        writer.tag(36, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetOpKeysResult get_op_keys_result = 37; */
    if (message.res.oneofKind === 'getOpKeysResult')
      GetOpKeysResult.internalBinaryWrite(
        message.res.getOpKeysResult,
        writer.tag(37, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetOriginOperationIdResult get_origin_operation_id_result = 38; */
    if (message.res.oneofKind === 'getOriginOperationIdResult')
      GetOriginOperationIdResult.internalBinaryWrite(
        message.res.getOriginOperationIdResult,
        writer.tag(38, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetOwnedAddressesResult get_owned_addresses_result = 39; */
    if (message.res.oneofKind === 'getOwnedAddressesResult')
      GetOwnedAddressesResult.internalBinaryWrite(
        message.res.getOwnedAddressesResult,
        writer.tag(39, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetPubKeyVersionResult get_pub_key_version_result = 40; */
    if (message.res.oneofKind === 'getPubKeyVersionResult')
      GetPubKeyVersionResult.internalBinaryWrite(
        message.res.getPubKeyVersionResult,
        writer.tag(40, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetRemainingGasResult get_remaining_gas_result = 41; */
    if (message.res.oneofKind === 'getRemainingGasResult')
      GetRemainingGasResult.internalBinaryWrite(
        message.res.getRemainingGasResult,
        writer.tag(41, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.GetSignatureVersionResult get_signature_version_result = 42; */
    if (message.res.oneofKind === 'getSignatureVersionResult')
      GetSignatureVersionResult.internalBinaryWrite(
        message.res.getSignatureVersionResult,
        writer.tag(42, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.HashBlake3Result hash_blake3_result = 43; */
    if (message.res.oneofKind === 'hashBlake3Result')
      HashBlake3Result.internalBinaryWrite(
        message.res.hashBlake3Result,
        writer.tag(43, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.HashSha256Result hash_sha256_result = 44; */
    if (message.res.oneofKind === 'hashSha256Result')
      HashSha256Result.internalBinaryWrite(
        message.res.hashSha256Result,
        writer.tag(44, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.OpEntryExistsResult op_entry_exists_result = 45; */
    if (message.res.oneofKind === 'opEntryExistsResult')
      OpEntryExistsResult.internalBinaryWrite(
        message.res.opEntryExistsResult,
        writer.tag(45, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.Keccak256Result keccak256_result = 46; */
    if (message.res.oneofKind === 'keccak256Result')
      Keccak256Result.internalBinaryWrite(
        message.res.keccak256Result,
        writer.tag(46, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.LocalExecutionResponse local_execution_response = 47; */
    if (message.res.oneofKind === 'localExecutionResponse')
      LocalExecutionResponse.internalBinaryWrite(
        message.res.localExecutionResponse,
        writer.tag(47, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.NativeAmountFromStringResult native_amount_from_string_result = 48; */
    if (message.res.oneofKind === 'nativeAmountFromStringResult')
      NativeAmountFromStringResult.internalBinaryWrite(
        message.res.nativeAmountFromStringResult,
        writer.tag(48, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.NativeAmountToStringResult native_amount_to_string_result = 49; */
    if (message.res.oneofKind === 'nativeAmountToStringResult')
      NativeAmountToStringResult.internalBinaryWrite(
        message.res.nativeAmountToStringResult,
        writer.tag(49, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.ScalarDivRemNativeAmountResult scalar_div_rem_native_amount_result = 50; */
    if (message.res.oneofKind === 'scalarDivRemNativeAmountResult')
      ScalarDivRemNativeAmountResult.internalBinaryWrite(
        message.res.scalarDivRemNativeAmountResult,
        writer.tag(50, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.ScalarMulNativeAmountResult scalar_mul_native_amount_result = 51; */
    if (message.res.oneofKind === 'scalarMulNativeAmountResult')
      ScalarMulNativeAmountResult.internalBinaryWrite(
        message.res.scalarMulNativeAmountResult,
        writer.tag(51, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.SendAsyncMessageResult send_async_message_result = 52; */
    if (message.res.oneofKind === 'sendAsyncMessageResult')
      SendAsyncMessageResult.internalBinaryWrite(
        message.res.sendAsyncMessageResult,
        writer.tag(52, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.SetBytecodeResult set_bytecode_result = 53; */
    if (message.res.oneofKind === 'setBytecodeResult')
      SetBytecodeResult.internalBinaryWrite(
        message.res.setBytecodeResult,
        writer.tag(53, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.SetDsValueResult set_ds_value_result = 54; */
    if (message.res.oneofKind === 'setDsValueResult')
      SetDsValueResult.internalBinaryWrite(
        message.res.setDsValueResult,
        writer.tag(54, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.SubNativeAmountResult sub_native_amount_result = 55; */
    if (message.res.oneofKind === 'subNativeAmountResult')
      SubNativeAmountResult.internalBinaryWrite(
        message.res.subNativeAmountResult,
        writer.tag(55, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.TransferCoinsResult transfer_coins_result = 56; */
    if (message.res.oneofKind === 'transferCoinsResult')
      TransferCoinsResult.internalBinaryWrite(
        message.res.transferCoinsResult,
        writer.tag(56, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.UnsafeRandomResult unsafe_random_result = 57; */
    if (message.res.oneofKind === 'unsafeRandomResult')
      UnsafeRandomResult.internalBinaryWrite(
        message.res.unsafeRandomResult,
        writer.tag(57, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.EvmVerifySigResult evm_verify_sig_result = 58; */
    if (message.res.oneofKind === 'evmVerifySigResult')
      EvmVerifySigResult.internalBinaryWrite(
        message.res.evmVerifySigResult,
        writer.tag(58, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.VerifySigResult verify_sig_result = 59; */
    if (message.res.oneofKind === 'verifySigResult')
      VerifySigResult.internalBinaryWrite(
        message.res.verifySigResult,
        writer.tag(59, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.EvmGetAddressFromPubkeyResult evm_get_address_from_pubkey_result = 60; */
    if (message.res.oneofKind === 'evmGetAddressFromPubkeyResult')
      EvmGetAddressFromPubkeyResult.internalBinaryWrite(
        message.res.evmGetAddressFromPubkeyResult,
        writer.tag(60, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.EvmGetPubkeyFromSignatureResult evm_get_pubkey_from_signature_result = 61; */
    if (message.res.oneofKind === 'evmGetPubkeyFromSignatureResult')
      EvmGetPubkeyFromSignatureResult.internalBinaryWrite(
        message.res.evmGetPubkeyFromSignatureResult,
        writer.tag(61, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.IsAddressEoaResult is_address_eoa_result = 62; */
    if (message.res.oneofKind === 'isAddressEoaResult')
      IsAddressEoaResult.internalBinaryWrite(
        message.res.isAddressEoaResult,
        writer.tag(62, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.RespResult
 */
export const RespResult = new RespResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AbiResponse$Type extends MessageType<AbiResponse> {
  constructor() {
    super('massa.abi.v1.AbiResponse', [
      {
        no: 1,
        name: 'res',
        kind: 'message',
        oneof: 'resp',
        T: () => RespResult,
      },
      { no: 2, name: 'error', kind: 'message', oneof: 'resp', T: () => Error },
    ]);
  }
  create(value?: PartialMessage<AbiResponse>): AbiResponse {
    const message = { resp: { oneofKind: undefined } };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<AbiResponse>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: AbiResponse,
  ): AbiResponse {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.abi.v1.RespResult res */ 1:
          message.resp = {
            oneofKind: 'res',
            res: RespResult.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.resp as any).res,
            ),
          };
          break;
        case /* massa.abi.v1.Error error */ 2:
          message.resp = {
            oneofKind: 'error',
            error: Error.internalBinaryRead(
              reader,
              reader.uint32(),
              options,
              (message.resp as any).error,
            ),
          };
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: AbiResponse,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.abi.v1.RespResult res = 1; */
    if (message.resp.oneofKind === 'res')
      RespResult.internalBinaryWrite(
        message.resp.res,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.abi.v1.Error error = 2; */
    if (message.resp.oneofKind === 'error')
      Error.internalBinaryWrite(
        message.resp.error,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.AbiResponse
 */
export const AbiResponse = new AbiResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NativeAmountToStringRequest$Type extends MessageType<NativeAmountToStringRequest> {
  constructor() {
    super('massa.abi.v1.NativeAmountToStringRequest', [
      { no: 1, name: 'to_convert', kind: 'message', T: () => NativeAmount },
    ]);
  }
  create(
    value?: PartialMessage<NativeAmountToStringRequest>,
  ): NativeAmountToStringRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<NativeAmountToStringRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: NativeAmountToStringRequest,
  ): NativeAmountToStringRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount to_convert */ 1:
          message.toConvert = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.toConvert,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: NativeAmountToStringRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount to_convert = 1; */
    if (message.toConvert)
      NativeAmount.internalBinaryWrite(
        message.toConvert,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.NativeAmountToStringRequest
 */
export const NativeAmountToStringRequest =
  new NativeAmountToStringRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NativeAmountToStringResult$Type extends MessageType<NativeAmountToStringResult> {
  constructor() {
    super('massa.abi.v1.NativeAmountToStringResult', [
      {
        no: 1,
        name: 'converted_amount',
        kind: 'scalar',
        T: 9 /* ScalarType.STRING*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<NativeAmountToStringResult>,
  ): NativeAmountToStringResult {
    const message = { convertedAmount: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<NativeAmountToStringResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: NativeAmountToStringResult,
  ): NativeAmountToStringResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string converted_amount */ 1:
          message.convertedAmount = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: NativeAmountToStringResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string converted_amount = 1; */
    if (message.convertedAmount !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.convertedAmount);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.NativeAmountToStringResult
 */
export const NativeAmountToStringResult = new NativeAmountToStringResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NativeAmountFromStringRequest$Type extends MessageType<NativeAmountFromStringRequest> {
  constructor() {
    super('massa.abi.v1.NativeAmountFromStringRequest', [
      {
        no: 1,
        name: 'to_convert',
        kind: 'scalar',
        T: 9 /* ScalarType.STRING*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<NativeAmountFromStringRequest>,
  ): NativeAmountFromStringRequest {
    const message = { toConvert: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<NativeAmountFromStringRequest>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: NativeAmountFromStringRequest,
  ): NativeAmountFromStringRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string to_convert */ 1:
          message.toConvert = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: NativeAmountFromStringRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string to_convert = 1; */
    if (message.toConvert !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.toConvert);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.NativeAmountFromStringRequest
 */
export const NativeAmountFromStringRequest =
  new NativeAmountFromStringRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NativeAmountFromStringResult$Type extends MessageType<NativeAmountFromStringResult> {
  constructor() {
    super('massa.abi.v1.NativeAmountFromStringResult', [
      {
        no: 1,
        name: 'converted_amount',
        kind: 'message',
        T: () => NativeAmount,
      },
    ]);
  }
  create(
    value?: PartialMessage<NativeAmountFromStringResult>,
  ): NativeAmountFromStringResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<NativeAmountFromStringResult>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: NativeAmountFromStringResult,
  ): NativeAmountFromStringResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount converted_amount */ 1:
          message.convertedAmount = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.convertedAmount,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: NativeAmountFromStringResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount converted_amount = 1; */
    if (message.convertedAmount)
      NativeAmount.internalBinaryWrite(
        message.convertedAmount,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.NativeAmountFromStringResult
 */
export const NativeAmountFromStringResult =
  new NativeAmountFromStringResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckAddressRequest$Type extends MessageType<CheckAddressRequest> {
  constructor() {
    super('massa.abi.v1.CheckAddressRequest', [
      { no: 1, name: 'to_check', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
    ]);
  }
  create(value?: PartialMessage<CheckAddressRequest>): CheckAddressRequest {
    const message = { toCheck: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckAddressRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckAddressRequest,
  ): CheckAddressRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string to_check */ 1:
          message.toCheck = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckAddressRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string to_check = 1; */
    if (message.toCheck !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.toCheck);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckAddressRequest
 */
export const CheckAddressRequest = new CheckAddressRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckAddressResult$Type extends MessageType<CheckAddressResult> {
  constructor() {
    super('massa.abi.v1.CheckAddressResult', [
      { no: 1, name: 'is_valid', kind: 'scalar', T: 8 /* ScalarType.BOOL*/ },
    ]);
  }
  create(value?: PartialMessage<CheckAddressResult>): CheckAddressResult {
    const message = { isValid: false };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckAddressResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckAddressResult,
  ): CheckAddressResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bool is_valid */ 1:
          message.isValid = reader.bool();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckAddressResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bool is_valid = 1; */
    if (message.isValid !== false)
      writer.tag(1, WireType.Varint).bool(message.isValid);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckAddressResult
 */
export const CheckAddressResult = new CheckAddressResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckPubKeyRequest$Type extends MessageType<CheckPubKeyRequest> {
  constructor() {
    super('massa.abi.v1.CheckPubKeyRequest', [
      { no: 1, name: 'to_check', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
    ]);
  }
  create(value?: PartialMessage<CheckPubKeyRequest>): CheckPubKeyRequest {
    const message = { toCheck: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckPubKeyRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckPubKeyRequest,
  ): CheckPubKeyRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string to_check */ 1:
          message.toCheck = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckPubKeyRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string to_check = 1; */
    if (message.toCheck !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.toCheck);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckPubKeyRequest
 */
export const CheckPubKeyRequest = new CheckPubKeyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckPubKeyResult$Type extends MessageType<CheckPubKeyResult> {
  constructor() {
    super('massa.abi.v1.CheckPubKeyResult', [
      { no: 1, name: 'is_valid', kind: 'scalar', T: 8 /* ScalarType.BOOL*/ },
    ]);
  }
  create(value?: PartialMessage<CheckPubKeyResult>): CheckPubKeyResult {
    const message = { isValid: false };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckPubKeyResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckPubKeyResult,
  ): CheckPubKeyResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bool is_valid */ 1:
          message.isValid = reader.bool();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckPubKeyResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bool is_valid = 1; */
    if (message.isValid !== false)
      writer.tag(1, WireType.Varint).bool(message.isValid);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckPubKeyResult
 */
export const CheckPubKeyResult = new CheckPubKeyResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckSigRequest$Type extends MessageType<CheckSigRequest> {
  constructor() {
    super('massa.abi.v1.CheckSigRequest', [
      { no: 1, name: 'to_check', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
    ]);
  }
  create(value?: PartialMessage<CheckSigRequest>): CheckSigRequest {
    const message = { toCheck: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckSigRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckSigRequest,
  ): CheckSigRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string to_check */ 1:
          message.toCheck = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckSigRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string to_check = 1; */
    if (message.toCheck !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.toCheck);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckSigRequest
 */
export const CheckSigRequest = new CheckSigRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckSigResult$Type extends MessageType<CheckSigResult> {
  constructor() {
    super('massa.abi.v1.CheckSigResult', [
      { no: 1, name: 'is_valid', kind: 'scalar', T: 8 /* ScalarType.BOOL*/ },
    ]);
  }
  create(value?: PartialMessage<CheckSigResult>): CheckSigResult {
    const message = { isValid: false };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckSigResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckSigResult,
  ): CheckSigResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bool is_valid */ 1:
          message.isValid = reader.bool();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckSigResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bool is_valid = 1; */
    if (message.isValid !== false)
      writer.tag(1, WireType.Varint).bool(message.isValid);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckSigResult
 */
export const CheckSigResult = new CheckSigResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckNativeAmountRequest$Type extends MessageType<CheckNativeAmountRequest> {
  constructor() {
    super('massa.abi.v1.CheckNativeAmountRequest', [
      { no: 1, name: 'to_check', kind: 'message', T: () => NativeAmount },
    ]);
  }
  create(
    value?: PartialMessage<CheckNativeAmountRequest>,
  ): CheckNativeAmountRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckNativeAmountRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckNativeAmountRequest,
  ): CheckNativeAmountRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount to_check */ 1:
          message.toCheck = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.toCheck,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckNativeAmountRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount to_check = 1; */
    if (message.toCheck)
      NativeAmount.internalBinaryWrite(
        message.toCheck,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckNativeAmountRequest
 */
export const CheckNativeAmountRequest = new CheckNativeAmountRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckNativeAmountResult$Type extends MessageType<CheckNativeAmountResult> {
  constructor() {
    super('massa.abi.v1.CheckNativeAmountResult', [
      { no: 1, name: 'is_valid', kind: 'scalar', T: 8 /* ScalarType.BOOL*/ },
    ]);
  }
  create(
    value?: PartialMessage<CheckNativeAmountResult>,
  ): CheckNativeAmountResult {
    const message = { isValid: false };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckNativeAmountResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckNativeAmountResult,
  ): CheckNativeAmountResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bool is_valid */ 1:
          message.isValid = reader.bool();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckNativeAmountResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bool is_valid = 1; */
    if (message.isValid !== false)
      writer.tag(1, WireType.Varint).bool(message.isValid);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckNativeAmountResult
 */
export const CheckNativeAmountResult = new CheckNativeAmountResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddNativeAmountRequest$Type extends MessageType<AddNativeAmountRequest> {
  constructor() {
    super('massa.abi.v1.AddNativeAmountRequest', [
      { no: 1, name: 'amount1', kind: 'message', T: () => NativeAmount },
      { no: 2, name: 'amount2', kind: 'message', T: () => NativeAmount },
    ]);
  }
  create(
    value?: PartialMessage<AddNativeAmountRequest>,
  ): AddNativeAmountRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<AddNativeAmountRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: AddNativeAmountRequest,
  ): AddNativeAmountRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount amount1 */ 1:
          message.amount1 = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.amount1,
          );
          break;
        case /* massa.model.v1.NativeAmount amount2 */ 2:
          message.amount2 = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.amount2,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: AddNativeAmountRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount amount1 = 1; */
    if (message.amount1)
      NativeAmount.internalBinaryWrite(
        message.amount1,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.model.v1.NativeAmount amount2 = 2; */
    if (message.amount2)
      NativeAmount.internalBinaryWrite(
        message.amount2,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.AddNativeAmountRequest
 */
export const AddNativeAmountRequest = new AddNativeAmountRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddNativeAmountResult$Type extends MessageType<AddNativeAmountResult> {
  constructor() {
    super('massa.abi.v1.AddNativeAmountResult', [
      { no: 1, name: 'sum', kind: 'message', T: () => NativeAmount },
    ]);
  }
  create(value?: PartialMessage<AddNativeAmountResult>): AddNativeAmountResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<AddNativeAmountResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: AddNativeAmountResult,
  ): AddNativeAmountResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount sum */ 1:
          message.sum = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.sum,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: AddNativeAmountResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount sum = 1; */
    if (message.sum)
      NativeAmount.internalBinaryWrite(
        message.sum,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.AddNativeAmountResult
 */
export const AddNativeAmountResult = new AddNativeAmountResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SubNativeAmountRequest$Type extends MessageType<SubNativeAmountRequest> {
  constructor() {
    super('massa.abi.v1.SubNativeAmountRequest', [
      { no: 1, name: 'left', kind: 'message', T: () => NativeAmount },
      { no: 2, name: 'right', kind: 'message', T: () => NativeAmount },
    ]);
  }
  create(
    value?: PartialMessage<SubNativeAmountRequest>,
  ): SubNativeAmountRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<SubNativeAmountRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: SubNativeAmountRequest,
  ): SubNativeAmountRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount left */ 1:
          message.left = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.left,
          );
          break;
        case /* massa.model.v1.NativeAmount right */ 2:
          message.right = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.right,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: SubNativeAmountRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount left = 1; */
    if (message.left)
      NativeAmount.internalBinaryWrite(
        message.left,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.model.v1.NativeAmount right = 2; */
    if (message.right)
      NativeAmount.internalBinaryWrite(
        message.right,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.SubNativeAmountRequest
 */
export const SubNativeAmountRequest = new SubNativeAmountRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SubNativeAmountResult$Type extends MessageType<SubNativeAmountResult> {
  constructor() {
    super('massa.abi.v1.SubNativeAmountResult', [
      { no: 1, name: 'difference', kind: 'message', T: () => NativeAmount },
    ]);
  }
  create(value?: PartialMessage<SubNativeAmountResult>): SubNativeAmountResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<SubNativeAmountResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: SubNativeAmountResult,
  ): SubNativeAmountResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount difference */ 1:
          message.difference = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.difference,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: SubNativeAmountResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount difference = 1; */
    if (message.difference)
      NativeAmount.internalBinaryWrite(
        message.difference,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.SubNativeAmountResult
 */
export const SubNativeAmountResult = new SubNativeAmountResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ScalarMulNativeAmountRequest$Type extends MessageType<ScalarMulNativeAmountRequest> {
  constructor() {
    super('massa.abi.v1.ScalarMulNativeAmountRequest', [
      { no: 1, name: 'amount', kind: 'message', T: () => NativeAmount },
      {
        no: 2,
        name: 'coefficient',
        kind: 'scalar',
        T: 4 /* ScalarType.UINT64*/,
        L: 0 /* LongType.BIGINT*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<ScalarMulNativeAmountRequest>,
  ): ScalarMulNativeAmountRequest {
    const message = { coefficient: 0n };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<ScalarMulNativeAmountRequest>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: ScalarMulNativeAmountRequest,
  ): ScalarMulNativeAmountRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount amount */ 1:
          message.amount = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.amount,
          );
          break;
        case /* uint64 coefficient */ 2:
          message.coefficient = reader.uint64().toBigInt();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: ScalarMulNativeAmountRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount amount = 1; */
    if (message.amount)
      NativeAmount.internalBinaryWrite(
        message.amount,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* uint64 coefficient = 2; */
    if (message.coefficient !== 0n)
      writer.tag(2, WireType.Varint).uint64(message.coefficient);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.ScalarMulNativeAmountRequest
 */
export const ScalarMulNativeAmountRequest =
  new ScalarMulNativeAmountRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ScalarMulNativeAmountResult$Type extends MessageType<ScalarMulNativeAmountResult> {
  constructor() {
    super('massa.abi.v1.ScalarMulNativeAmountResult', [
      { no: 1, name: 'product', kind: 'message', T: () => NativeAmount },
    ]);
  }
  create(
    value?: PartialMessage<ScalarMulNativeAmountResult>,
  ): ScalarMulNativeAmountResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<ScalarMulNativeAmountResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: ScalarMulNativeAmountResult,
  ): ScalarMulNativeAmountResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount product */ 1:
          message.product = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.product,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: ScalarMulNativeAmountResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount product = 1; */
    if (message.product)
      NativeAmount.internalBinaryWrite(
        message.product,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.ScalarMulNativeAmountResult
 */
export const ScalarMulNativeAmountResult =
  new ScalarMulNativeAmountResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ScalarDivRemNativeAmountRequest$Type extends MessageType<ScalarDivRemNativeAmountRequest> {
  constructor() {
    super('massa.abi.v1.ScalarDivRemNativeAmountRequest', [
      { no: 1, name: 'dividend', kind: 'message', T: () => NativeAmount },
      {
        no: 2,
        name: 'divisor',
        kind: 'scalar',
        T: 4 /* ScalarType.UINT64*/,
        L: 0 /* LongType.BIGINT*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<ScalarDivRemNativeAmountRequest>,
  ): ScalarDivRemNativeAmountRequest {
    const message = { divisor: 0n };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<ScalarDivRemNativeAmountRequest>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: ScalarDivRemNativeAmountRequest,
  ): ScalarDivRemNativeAmountRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount dividend */ 1:
          message.dividend = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.dividend,
          );
          break;
        case /* uint64 divisor */ 2:
          message.divisor = reader.uint64().toBigInt();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: ScalarDivRemNativeAmountRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount dividend = 1; */
    if (message.dividend)
      NativeAmount.internalBinaryWrite(
        message.dividend,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* uint64 divisor = 2; */
    if (message.divisor !== 0n)
      writer.tag(2, WireType.Varint).uint64(message.divisor);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.ScalarDivRemNativeAmountRequest
 */
export const ScalarDivRemNativeAmountRequest =
  new ScalarDivRemNativeAmountRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ScalarDivRemNativeAmountResult$Type extends MessageType<ScalarDivRemNativeAmountResult> {
  constructor() {
    super('massa.abi.v1.ScalarDivRemNativeAmountResult', [
      { no: 1, name: 'quotient', kind: 'message', T: () => NativeAmount },
      { no: 2, name: 'remainder', kind: 'message', T: () => NativeAmount },
    ]);
  }
  create(
    value?: PartialMessage<ScalarDivRemNativeAmountResult>,
  ): ScalarDivRemNativeAmountResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<ScalarDivRemNativeAmountResult>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: ScalarDivRemNativeAmountResult,
  ): ScalarDivRemNativeAmountResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount quotient */ 1:
          message.quotient = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.quotient,
          );
          break;
        case /* massa.model.v1.NativeAmount remainder */ 2:
          message.remainder = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.remainder,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: ScalarDivRemNativeAmountResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount quotient = 1; */
    if (message.quotient)
      NativeAmount.internalBinaryWrite(
        message.quotient,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.model.v1.NativeAmount remainder = 2; */
    if (message.remainder)
      NativeAmount.internalBinaryWrite(
        message.remainder,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.ScalarDivRemNativeAmountResult
 */
export const ScalarDivRemNativeAmountResult =
  new ScalarDivRemNativeAmountResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DivRemNativeAmountRequest$Type extends MessageType<DivRemNativeAmountRequest> {
  constructor() {
    super('massa.abi.v1.DivRemNativeAmountRequest', [
      { no: 1, name: 'dividend', kind: 'message', T: () => NativeAmount },
      { no: 2, name: 'divisor', kind: 'message', T: () => NativeAmount },
    ]);
  }
  create(
    value?: PartialMessage<DivRemNativeAmountRequest>,
  ): DivRemNativeAmountRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<DivRemNativeAmountRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: DivRemNativeAmountRequest,
  ): DivRemNativeAmountRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount dividend */ 1:
          message.dividend = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.dividend,
          );
          break;
        case /* massa.model.v1.NativeAmount divisor */ 2:
          message.divisor = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.divisor,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: DivRemNativeAmountRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount dividend = 1; */
    if (message.dividend)
      NativeAmount.internalBinaryWrite(
        message.dividend,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.model.v1.NativeAmount divisor = 2; */
    if (message.divisor)
      NativeAmount.internalBinaryWrite(
        message.divisor,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.DivRemNativeAmountRequest
 */
export const DivRemNativeAmountRequest = new DivRemNativeAmountRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DivRemNativeAmountResult$Type extends MessageType<DivRemNativeAmountResult> {
  constructor() {
    super('massa.abi.v1.DivRemNativeAmountResult', [
      {
        no: 1,
        name: 'quotient',
        kind: 'scalar',
        T: 4 /* ScalarType.UINT64*/,
        L: 0 /* LongType.BIGINT*/,
      },
      { no: 2, name: 'remainder', kind: 'message', T: () => NativeAmount },
    ]);
  }
  create(
    value?: PartialMessage<DivRemNativeAmountResult>,
  ): DivRemNativeAmountResult {
    const message = { quotient: 0n };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<DivRemNativeAmountResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: DivRemNativeAmountResult,
  ): DivRemNativeAmountResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* uint64 quotient */ 1:
          message.quotient = reader.uint64().toBigInt();
          break;
        case /* massa.model.v1.NativeAmount remainder */ 2:
          message.remainder = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.remainder,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: DivRemNativeAmountResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* uint64 quotient = 1; */
    if (message.quotient !== 0n)
      writer.tag(1, WireType.Varint).uint64(message.quotient);
    /* massa.model.v1.NativeAmount remainder = 2; */
    if (message.remainder)
      NativeAmount.internalBinaryWrite(
        message.remainder,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.DivRemNativeAmountResult
 */
export const DivRemNativeAmountResult = new DivRemNativeAmountResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckedAddNativeTimeRequest$Type extends MessageType<CheckedAddNativeTimeRequest> {
  constructor() {
    super('massa.abi.v1.CheckedAddNativeTimeRequest', [
      { no: 1, name: 'left', kind: 'message', T: () => NativeTime },
      { no: 2, name: 'right', kind: 'message', T: () => NativeTime },
    ]);
  }
  create(
    value?: PartialMessage<CheckedAddNativeTimeRequest>,
  ): CheckedAddNativeTimeRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckedAddNativeTimeRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckedAddNativeTimeRequest,
  ): CheckedAddNativeTimeRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeTime left */ 1:
          message.left = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.left,
          );
          break;
        case /* massa.model.v1.NativeTime right */ 2:
          message.right = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.right,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckedAddNativeTimeRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeTime left = 1; */
    if (message.left)
      NativeTime.internalBinaryWrite(
        message.left,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.model.v1.NativeTime right = 2; */
    if (message.right)
      NativeTime.internalBinaryWrite(
        message.right,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckedAddNativeTimeRequest
 */
export const CheckedAddNativeTimeRequest =
  new CheckedAddNativeTimeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckedAddNativeTimeResult$Type extends MessageType<CheckedAddNativeTimeResult> {
  constructor() {
    super('massa.abi.v1.CheckedAddNativeTimeResult', [
      { no: 1, name: 'sum', kind: 'message', T: () => NativeTime },
    ]);
  }
  create(
    value?: PartialMessage<CheckedAddNativeTimeResult>,
  ): CheckedAddNativeTimeResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckedAddNativeTimeResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckedAddNativeTimeResult,
  ): CheckedAddNativeTimeResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeTime sum */ 1:
          message.sum = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.sum,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckedAddNativeTimeResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeTime sum = 1; */
    if (message.sum)
      NativeTime.internalBinaryWrite(
        message.sum,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckedAddNativeTimeResult
 */
export const CheckedAddNativeTimeResult = new CheckedAddNativeTimeResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckedSubNativeTimeRequest$Type extends MessageType<CheckedSubNativeTimeRequest> {
  constructor() {
    super('massa.abi.v1.CheckedSubNativeTimeRequest', [
      { no: 1, name: 'left', kind: 'message', T: () => NativeTime },
      { no: 2, name: 'right', kind: 'message', T: () => NativeTime },
    ]);
  }
  create(
    value?: PartialMessage<CheckedSubNativeTimeRequest>,
  ): CheckedSubNativeTimeRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckedSubNativeTimeRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckedSubNativeTimeRequest,
  ): CheckedSubNativeTimeRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeTime left */ 1:
          message.left = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.left,
          );
          break;
        case /* massa.model.v1.NativeTime right */ 2:
          message.right = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.right,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckedSubNativeTimeRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeTime left = 1; */
    if (message.left)
      NativeTime.internalBinaryWrite(
        message.left,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.model.v1.NativeTime right = 2; */
    if (message.right)
      NativeTime.internalBinaryWrite(
        message.right,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckedSubNativeTimeRequest
 */
export const CheckedSubNativeTimeRequest =
  new CheckedSubNativeTimeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckedSubNativeTimeResult$Type extends MessageType<CheckedSubNativeTimeResult> {
  constructor() {
    super('massa.abi.v1.CheckedSubNativeTimeResult', [
      { no: 1, name: 'difference', kind: 'message', T: () => NativeTime },
    ]);
  }
  create(
    value?: PartialMessage<CheckedSubNativeTimeResult>,
  ): CheckedSubNativeTimeResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckedSubNativeTimeResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckedSubNativeTimeResult,
  ): CheckedSubNativeTimeResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeTime difference */ 1:
          message.difference = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.difference,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckedSubNativeTimeResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeTime difference = 1; */
    if (message.difference)
      NativeTime.internalBinaryWrite(
        message.difference,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckedSubNativeTimeResult
 */
export const CheckedSubNativeTimeResult = new CheckedSubNativeTimeResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckedScalarMulNativeTimeRequest$Type extends MessageType<CheckedScalarMulNativeTimeRequest> {
  constructor() {
    super('massa.abi.v1.CheckedScalarMulNativeTimeRequest', [
      { no: 1, name: 'time', kind: 'message', T: () => NativeTime },
      {
        no: 2,
        name: 'coefficient',
        kind: 'scalar',
        T: 4 /* ScalarType.UINT64*/,
        L: 0 /* LongType.BIGINT*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<CheckedScalarMulNativeTimeRequest>,
  ): CheckedScalarMulNativeTimeRequest {
    const message = { coefficient: 0n };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckedScalarMulNativeTimeRequest>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckedScalarMulNativeTimeRequest,
  ): CheckedScalarMulNativeTimeRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeTime time */ 1:
          message.time = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.time,
          );
          break;
        case /* uint64 coefficient */ 2:
          message.coefficient = reader.uint64().toBigInt();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckedScalarMulNativeTimeRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeTime time = 1; */
    if (message.time)
      NativeTime.internalBinaryWrite(
        message.time,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* uint64 coefficient = 2; */
    if (message.coefficient !== 0n)
      writer.tag(2, WireType.Varint).uint64(message.coefficient);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckedScalarMulNativeTimeRequest
 */
export const CheckedScalarMulNativeTimeRequest =
  new CheckedScalarMulNativeTimeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckedScalarMulNativeTimeResult$Type extends MessageType<CheckedScalarMulNativeTimeResult> {
  constructor() {
    super('massa.abi.v1.CheckedScalarMulNativeTimeResult', [
      { no: 1, name: 'product', kind: 'message', T: () => NativeTime },
    ]);
  }
  create(
    value?: PartialMessage<CheckedScalarMulNativeTimeResult>,
  ): CheckedScalarMulNativeTimeResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckedScalarMulNativeTimeResult>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckedScalarMulNativeTimeResult,
  ): CheckedScalarMulNativeTimeResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeTime product */ 1:
          message.product = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.product,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckedScalarMulNativeTimeResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeTime product = 1; */
    if (message.product)
      NativeTime.internalBinaryWrite(
        message.product,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckedScalarMulNativeTimeResult
 */
export const CheckedScalarMulNativeTimeResult =
  new CheckedScalarMulNativeTimeResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckedScalarDivRemNativeTimeRequest$Type extends MessageType<CheckedScalarDivRemNativeTimeRequest> {
  constructor() {
    super('massa.abi.v1.CheckedScalarDivRemNativeTimeRequest', [
      { no: 1, name: 'dividend', kind: 'message', T: () => NativeTime },
      {
        no: 2,
        name: 'divisor',
        kind: 'scalar',
        T: 4 /* ScalarType.UINT64*/,
        L: 0 /* LongType.BIGINT*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<CheckedScalarDivRemNativeTimeRequest>,
  ): CheckedScalarDivRemNativeTimeRequest {
    const message = { divisor: 0n };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckedScalarDivRemNativeTimeRequest>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckedScalarDivRemNativeTimeRequest,
  ): CheckedScalarDivRemNativeTimeRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeTime dividend */ 1:
          message.dividend = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.dividend,
          );
          break;
        case /* uint64 divisor */ 2:
          message.divisor = reader.uint64().toBigInt();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckedScalarDivRemNativeTimeRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeTime dividend = 1; */
    if (message.dividend)
      NativeTime.internalBinaryWrite(
        message.dividend,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* uint64 divisor = 2; */
    if (message.divisor !== 0n)
      writer.tag(2, WireType.Varint).uint64(message.divisor);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckedScalarDivRemNativeTimeRequest
 */
export const CheckedScalarDivRemNativeTimeRequest =
  new CheckedScalarDivRemNativeTimeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckedScalarDivRemNativeTimeResult$Type extends MessageType<CheckedScalarDivRemNativeTimeResult> {
  constructor() {
    super('massa.abi.v1.CheckedScalarDivRemNativeTimeResult', [
      { no: 1, name: 'quotient', kind: 'message', T: () => NativeTime },
      { no: 2, name: 'remainder', kind: 'message', T: () => NativeTime },
    ]);
  }
  create(
    value?: PartialMessage<CheckedScalarDivRemNativeTimeResult>,
  ): CheckedScalarDivRemNativeTimeResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckedScalarDivRemNativeTimeResult>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckedScalarDivRemNativeTimeResult,
  ): CheckedScalarDivRemNativeTimeResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeTime quotient */ 1:
          message.quotient = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.quotient,
          );
          break;
        case /* massa.model.v1.NativeTime remainder */ 2:
          message.remainder = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.remainder,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckedScalarDivRemNativeTimeResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeTime quotient = 1; */
    if (message.quotient)
      NativeTime.internalBinaryWrite(
        message.quotient,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.model.v1.NativeTime remainder = 2; */
    if (message.remainder)
      NativeTime.internalBinaryWrite(
        message.remainder,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckedScalarDivRemNativeTimeResult
 */
export const CheckedScalarDivRemNativeTimeResult =
  new CheckedScalarDivRemNativeTimeResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckedDivRemNativeTimeRequest$Type extends MessageType<CheckedDivRemNativeTimeRequest> {
  constructor() {
    super('massa.abi.v1.CheckedDivRemNativeTimeRequest', [
      { no: 1, name: 'dividend', kind: 'message', T: () => NativeTime },
      { no: 2, name: 'divisor', kind: 'message', T: () => NativeTime },
    ]);
  }
  create(
    value?: PartialMessage<CheckedDivRemNativeTimeRequest>,
  ): CheckedDivRemNativeTimeRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckedDivRemNativeTimeRequest>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckedDivRemNativeTimeRequest,
  ): CheckedDivRemNativeTimeRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeTime dividend */ 1:
          message.dividend = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.dividend,
          );
          break;
        case /* massa.model.v1.NativeTime divisor */ 2:
          message.divisor = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.divisor,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckedDivRemNativeTimeRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeTime dividend = 1; */
    if (message.dividend)
      NativeTime.internalBinaryWrite(
        message.dividend,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.model.v1.NativeTime divisor = 2; */
    if (message.divisor)
      NativeTime.internalBinaryWrite(
        message.divisor,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckedDivRemNativeTimeRequest
 */
export const CheckedDivRemNativeTimeRequest =
  new CheckedDivRemNativeTimeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckedDivRemNativeTimeResult$Type extends MessageType<CheckedDivRemNativeTimeResult> {
  constructor() {
    super('massa.abi.v1.CheckedDivRemNativeTimeResult', [
      {
        no: 1,
        name: 'quotient',
        kind: 'scalar',
        T: 4 /* ScalarType.UINT64*/,
        L: 0 /* LongType.BIGINT*/,
      },
      { no: 2, name: 'remainder', kind: 'message', T: () => NativeTime },
    ]);
  }
  create(
    value?: PartialMessage<CheckedDivRemNativeTimeResult>,
  ): CheckedDivRemNativeTimeResult {
    const message = { quotient: 0n };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CheckedDivRemNativeTimeResult>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CheckedDivRemNativeTimeResult,
  ): CheckedDivRemNativeTimeResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* uint64 quotient */ 1:
          message.quotient = reader.uint64().toBigInt();
          break;
        case /* massa.model.v1.NativeTime remainder */ 2:
          message.remainder = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.remainder,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CheckedDivRemNativeTimeResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* uint64 quotient = 1; */
    if (message.quotient !== 0n)
      writer.tag(1, WireType.Varint).uint64(message.quotient);
    /* massa.model.v1.NativeTime remainder = 2; */
    if (message.remainder)
      NativeTime.internalBinaryWrite(
        message.remainder,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CheckedDivRemNativeTimeResult
 */
export const CheckedDivRemNativeTimeResult =
  new CheckedDivRemNativeTimeResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CompareNativeTimeRequest$Type extends MessageType<CompareNativeTimeRequest> {
  constructor() {
    super('massa.abi.v1.CompareNativeTimeRequest', [
      { no: 1, name: 'left', kind: 'message', T: () => NativeTime },
      { no: 2, name: 'right', kind: 'message', T: () => NativeTime },
    ]);
  }
  create(
    value?: PartialMessage<CompareNativeTimeRequest>,
  ): CompareNativeTimeRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CompareNativeTimeRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CompareNativeTimeRequest,
  ): CompareNativeTimeRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeTime left */ 1:
          message.left = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.left,
          );
          break;
        case /* massa.model.v1.NativeTime right */ 2:
          message.right = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.right,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CompareNativeTimeRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeTime left = 1; */
    if (message.left)
      NativeTime.internalBinaryWrite(
        message.left,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.model.v1.NativeTime right = 2; */
    if (message.right)
      NativeTime.internalBinaryWrite(
        message.right,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CompareNativeTimeRequest
 */
export const CompareNativeTimeRequest = new CompareNativeTimeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CompareNativeTimeResult$Type extends MessageType<CompareNativeTimeResult> {
  constructor() {
    super('massa.abi.v1.CompareNativeTimeResult', [
      {
        no: 1,
        name: 'result',
        kind: 'enum',
        T: () => [
          'massa.model.v1.ComparisonResult',
          ComparisonResult,
          'COMPARISON_RESULT_',
        ],
      },
    ]);
  }
  create(
    value?: PartialMessage<CompareNativeTimeResult>,
  ): CompareNativeTimeResult {
    const message = { result: 0 };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CompareNativeTimeResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CompareNativeTimeResult,
  ): CompareNativeTimeResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.ComparisonResult result */ 1:
          message.result = reader.int32();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CompareNativeTimeResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.ComparisonResult result = 1; */
    if (message.result !== 0)
      writer.tag(1, WireType.Varint).int32(message.result);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CompareNativeTimeResult
 */
export const CompareNativeTimeResult = new CompareNativeTimeResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CompareAddressRequest$Type extends MessageType<CompareAddressRequest> {
  constructor() {
    super('massa.abi.v1.CompareAddressRequest', [
      { no: 1, name: 'left', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
      { no: 2, name: 'right', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
    ]);
  }
  create(value?: PartialMessage<CompareAddressRequest>): CompareAddressRequest {
    const message = { left: '', right: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CompareAddressRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CompareAddressRequest,
  ): CompareAddressRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string left */ 1:
          message.left = reader.string();
          break;
        case /* string right */ 2:
          message.right = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CompareAddressRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string left = 1; */
    if (message.left !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.left);
    /* string right = 2; */
    if (message.right !== '')
      writer.tag(2, WireType.LengthDelimited).string(message.right);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CompareAddressRequest
 */
export const CompareAddressRequest = new CompareAddressRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CompareAddressResult$Type extends MessageType<CompareAddressResult> {
  constructor() {
    super('massa.abi.v1.CompareAddressResult', [
      {
        no: 1,
        name: 'result',
        kind: 'enum',
        T: () => [
          'massa.model.v1.ComparisonResult',
          ComparisonResult,
          'COMPARISON_RESULT_',
        ],
      },
    ]);
  }
  create(value?: PartialMessage<CompareAddressResult>): CompareAddressResult {
    const message = { result: 0 };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CompareAddressResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CompareAddressResult,
  ): CompareAddressResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.ComparisonResult result */ 1:
          message.result = reader.int32();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CompareAddressResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.ComparisonResult result = 1; */
    if (message.result !== 0)
      writer.tag(1, WireType.Varint).int32(message.result);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CompareAddressResult
 */
export const CompareAddressResult = new CompareAddressResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ComparePubKeyRequest$Type extends MessageType<ComparePubKeyRequest> {
  constructor() {
    super('massa.abi.v1.ComparePubKeyRequest', [
      { no: 1, name: 'left', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
      { no: 2, name: 'right', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
    ]);
  }
  create(value?: PartialMessage<ComparePubKeyRequest>): ComparePubKeyRequest {
    const message = { left: '', right: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<ComparePubKeyRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: ComparePubKeyRequest,
  ): ComparePubKeyRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string left */ 1:
          message.left = reader.string();
          break;
        case /* string right */ 2:
          message.right = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: ComparePubKeyRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string left = 1; */
    if (message.left !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.left);
    /* string right = 2; */
    if (message.right !== '')
      writer.tag(2, WireType.LengthDelimited).string(message.right);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.ComparePubKeyRequest
 */
export const ComparePubKeyRequest = new ComparePubKeyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ComparePubKeyResult$Type extends MessageType<ComparePubKeyResult> {
  constructor() {
    super('massa.abi.v1.ComparePubKeyResult', [
      {
        no: 1,
        name: 'result',
        kind: 'enum',
        T: () => [
          'massa.model.v1.ComparisonResult',
          ComparisonResult,
          'COMPARISON_RESULT_',
        ],
      },
    ]);
  }
  create(value?: PartialMessage<ComparePubKeyResult>): ComparePubKeyResult {
    const message = { result: 0 };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<ComparePubKeyResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: ComparePubKeyResult,
  ): ComparePubKeyResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.ComparisonResult result */ 1:
          message.result = reader.int32();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: ComparePubKeyResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.ComparisonResult result = 1; */
    if (message.result !== 0)
      writer.tag(1, WireType.Varint).int32(message.result);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.ComparePubKeyResult
 */
export const ComparePubKeyResult = new ComparePubKeyResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VerifySigRequest$Type extends MessageType<VerifySigRequest> {
  constructor() {
    super('massa.abi.v1.VerifySigRequest', [
      { no: 1, name: 'sig', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
      { no: 2, name: 'message', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      { no: 3, name: 'pub_key', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
    ]);
  }
  create(value?: PartialMessage<VerifySigRequest>): VerifySigRequest {
    const message = { sig: '', message: new Uint8Array(0), pubKey: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<VerifySigRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: VerifySigRequest,
  ): VerifySigRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string sig */ 1:
          message.sig = reader.string();
          break;
        case /* bytes message */ 2:
          message.message = reader.bytes();
          break;
        case /* string pub_key */ 3:
          message.pubKey = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: VerifySigRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string sig = 1; */
    if (message.sig !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.sig);
    /* bytes message = 2; */
    if (message.message.length)
      writer.tag(2, WireType.LengthDelimited).bytes(message.message);
    /* string pub_key = 3; */
    if (message.pubKey !== '')
      writer.tag(3, WireType.LengthDelimited).string(message.pubKey);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.VerifySigRequest
 */
export const VerifySigRequest = new VerifySigRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VerifySigResult$Type extends MessageType<VerifySigResult> {
  constructor() {
    super('massa.abi.v1.VerifySigResult', [
      { no: 1, name: 'is_verified', kind: 'scalar', T: 8 /* ScalarType.BOOL*/ },
    ]);
  }
  create(value?: PartialMessage<VerifySigResult>): VerifySigResult {
    const message = { isVerified: false };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<VerifySigResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: VerifySigResult,
  ): VerifySigResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bool is_verified */ 1:
          message.isVerified = reader.bool();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: VerifySigResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bool is_verified = 1; */
    if (message.isVerified !== false)
      writer.tag(1, WireType.Varint).bool(message.isVerified);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.VerifySigResult
 */
export const VerifySigResult = new VerifySigResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CompareNativeAmountRequest$Type extends MessageType<CompareNativeAmountRequest> {
  constructor() {
    super('massa.abi.v1.CompareNativeAmountRequest', [
      { no: 1, name: 'left', kind: 'message', T: () => NativeAmount },
      { no: 2, name: 'right', kind: 'message', T: () => NativeAmount },
    ]);
  }
  create(
    value?: PartialMessage<CompareNativeAmountRequest>,
  ): CompareNativeAmountRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CompareNativeAmountRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CompareNativeAmountRequest,
  ): CompareNativeAmountRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount left */ 1:
          message.left = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.left,
          );
          break;
        case /* massa.model.v1.NativeAmount right */ 2:
          message.right = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.right,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CompareNativeAmountRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount left = 1; */
    if (message.left)
      NativeAmount.internalBinaryWrite(
        message.left,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.model.v1.NativeAmount right = 2; */
    if (message.right)
      NativeAmount.internalBinaryWrite(
        message.right,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CompareNativeAmountRequest
 */
export const CompareNativeAmountRequest = new CompareNativeAmountRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CompareNativeAmountResult$Type extends MessageType<CompareNativeAmountResult> {
  constructor() {
    super('massa.abi.v1.CompareNativeAmountResult', [
      {
        no: 1,
        name: 'result',
        kind: 'enum',
        T: () => [
          'massa.model.v1.ComparisonResult',
          ComparisonResult,
          'COMPARISON_RESULT_',
        ],
      },
    ]);
  }
  create(
    value?: PartialMessage<CompareNativeAmountResult>,
  ): CompareNativeAmountResult {
    const message = { result: 0 };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CompareNativeAmountResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CompareNativeAmountResult,
  ): CompareNativeAmountResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.ComparisonResult result */ 1:
          message.result = reader.int32();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CompareNativeAmountResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.ComparisonResult result = 1; */
    if (message.result !== 0)
      writer.tag(1, WireType.Varint).int32(message.result);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CompareNativeAmountResult
 */
export const CompareNativeAmountResult = new CompareNativeAmountResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Keccak256Request$Type extends MessageType<Keccak256Request> {
  constructor() {
    super('massa.abi.v1.Keccak256Request', [
      { no: 1, name: 'data', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<Keccak256Request>): Keccak256Request {
    const message = { data: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<Keccak256Request>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: Keccak256Request,
  ): Keccak256Request {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes data */ 1:
          message.data = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: Keccak256Request,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes data = 1; */
    if (message.data.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.data);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.Keccak256Request
 */
export const Keccak256Request = new Keccak256Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Keccak256Result$Type extends MessageType<Keccak256Result> {
  constructor() {
    super('massa.abi.v1.Keccak256Result', [
      { no: 1, name: 'hash', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<Keccak256Result>): Keccak256Result {
    const message = { hash: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<Keccak256Result>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: Keccak256Result,
  ): Keccak256Result {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes hash */ 1:
          message.hash = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: Keccak256Result,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes hash = 1; */
    if (message.hash.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.hash);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.Keccak256Result
 */
export const Keccak256Result = new Keccak256Result$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EvmVerifySigRequest$Type extends MessageType<EvmVerifySigRequest> {
  constructor() {
    super('massa.abi.v1.EvmVerifySigRequest', [
      { no: 1, name: 'sig', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      { no: 2, name: 'message', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      { no: 3, name: 'pub_key', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<EvmVerifySigRequest>): EvmVerifySigRequest {
    const message = {
      sig: new Uint8Array(0),
      message: new Uint8Array(0),
      pubKey: new Uint8Array(0),
    };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<EvmVerifySigRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: EvmVerifySigRequest,
  ): EvmVerifySigRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes sig */ 1:
          message.sig = reader.bytes();
          break;
        case /* bytes message */ 2:
          message.message = reader.bytes();
          break;
        case /* bytes pub_key */ 3:
          message.pubKey = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: EvmVerifySigRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes sig = 1; */
    if (message.sig.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.sig);
    /* bytes message = 2; */
    if (message.message.length)
      writer.tag(2, WireType.LengthDelimited).bytes(message.message);
    /* bytes pub_key = 3; */
    if (message.pubKey.length)
      writer.tag(3, WireType.LengthDelimited).bytes(message.pubKey);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.EvmVerifySigRequest
 */
export const EvmVerifySigRequest = new EvmVerifySigRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EvmVerifySigResult$Type extends MessageType<EvmVerifySigResult> {
  constructor() {
    super('massa.abi.v1.EvmVerifySigResult', [
      { no: 1, name: 'is_verified', kind: 'scalar', T: 8 /* ScalarType.BOOL*/ },
    ]);
  }
  create(value?: PartialMessage<EvmVerifySigResult>): EvmVerifySigResult {
    const message = { isVerified: false };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<EvmVerifySigResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: EvmVerifySigResult,
  ): EvmVerifySigResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bool is_verified */ 1:
          message.isVerified = reader.bool();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: EvmVerifySigResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bool is_verified = 1; */
    if (message.isVerified !== false)
      writer.tag(1, WireType.Varint).bool(message.isVerified);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.EvmVerifySigResult
 */
export const EvmVerifySigResult = new EvmVerifySigResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EvmGetAddressFromPubkeyRequest$Type extends MessageType<EvmGetAddressFromPubkeyRequest> {
  constructor() {
    super('massa.abi.v1.EvmGetAddressFromPubkeyRequest', [
      { no: 1, name: 'pub_key', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(
    value?: PartialMessage<EvmGetAddressFromPubkeyRequest>,
  ): EvmGetAddressFromPubkeyRequest {
    const message = { pubKey: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<EvmGetAddressFromPubkeyRequest>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: EvmGetAddressFromPubkeyRequest,
  ): EvmGetAddressFromPubkeyRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes pub_key */ 1:
          message.pubKey = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: EvmGetAddressFromPubkeyRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes pub_key = 1; */
    if (message.pubKey.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.pubKey);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.EvmGetAddressFromPubkeyRequest
 */
export const EvmGetAddressFromPubkeyRequest =
  new EvmGetAddressFromPubkeyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EvmGetAddressFromPubkeyResult$Type extends MessageType<EvmGetAddressFromPubkeyResult> {
  constructor() {
    super('massa.abi.v1.EvmGetAddressFromPubkeyResult', [
      { no: 1, name: 'address', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(
    value?: PartialMessage<EvmGetAddressFromPubkeyResult>,
  ): EvmGetAddressFromPubkeyResult {
    const message = { address: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<EvmGetAddressFromPubkeyResult>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: EvmGetAddressFromPubkeyResult,
  ): EvmGetAddressFromPubkeyResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes address */ 1:
          message.address = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: EvmGetAddressFromPubkeyResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes address = 1; */
    if (message.address.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.address);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.EvmGetAddressFromPubkeyResult
 */
export const EvmGetAddressFromPubkeyResult =
  new EvmGetAddressFromPubkeyResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EvmGetPubkeyFromSignatureRequest$Type extends MessageType<EvmGetPubkeyFromSignatureRequest> {
  constructor() {
    super('massa.abi.v1.EvmGetPubkeyFromSignatureRequest', [
      { no: 1, name: 'hash', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      { no: 2, name: 'sig', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(
    value?: PartialMessage<EvmGetPubkeyFromSignatureRequest>,
  ): EvmGetPubkeyFromSignatureRequest {
    const message = { hash: new Uint8Array(0), sig: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<EvmGetPubkeyFromSignatureRequest>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: EvmGetPubkeyFromSignatureRequest,
  ): EvmGetPubkeyFromSignatureRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes hash */ 1:
          message.hash = reader.bytes();
          break;
        case /* bytes sig */ 2:
          message.sig = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: EvmGetPubkeyFromSignatureRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes hash = 1; */
    if (message.hash.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.hash);
    /* bytes sig = 2; */
    if (message.sig.length)
      writer.tag(2, WireType.LengthDelimited).bytes(message.sig);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.EvmGetPubkeyFromSignatureRequest
 */
export const EvmGetPubkeyFromSignatureRequest =
  new EvmGetPubkeyFromSignatureRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EvmGetPubkeyFromSignatureResult$Type extends MessageType<EvmGetPubkeyFromSignatureResult> {
  constructor() {
    super('massa.abi.v1.EvmGetPubkeyFromSignatureResult', [
      { no: 1, name: 'pub_key', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(
    value?: PartialMessage<EvmGetPubkeyFromSignatureResult>,
  ): EvmGetPubkeyFromSignatureResult {
    const message = { pubKey: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<EvmGetPubkeyFromSignatureResult>(
        this,
        message,
        value,
      );
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: EvmGetPubkeyFromSignatureResult,
  ): EvmGetPubkeyFromSignatureResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes pub_key */ 1:
          message.pubKey = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: EvmGetPubkeyFromSignatureResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes pub_key = 1; */
    if (message.pubKey.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.pubKey);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.EvmGetPubkeyFromSignatureResult
 */
export const EvmGetPubkeyFromSignatureResult =
  new EvmGetPubkeyFromSignatureResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IsAddressEoaRequest$Type extends MessageType<IsAddressEoaRequest> {
  constructor() {
    super('massa.abi.v1.IsAddressEoaRequest', [
      { no: 1, name: 'address', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
    ]);
  }
  create(value?: PartialMessage<IsAddressEoaRequest>): IsAddressEoaRequest {
    const message = { address: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<IsAddressEoaRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: IsAddressEoaRequest,
  ): IsAddressEoaRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string address */ 1:
          message.address = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: IsAddressEoaRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string address = 1; */
    if (message.address !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.address);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.IsAddressEoaRequest
 */
export const IsAddressEoaRequest = new IsAddressEoaRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IsAddressEoaResult$Type extends MessageType<IsAddressEoaResult> {
  constructor() {
    super('massa.abi.v1.IsAddressEoaResult', [
      { no: 1, name: 'is_eoa', kind: 'scalar', T: 8 /* ScalarType.BOOL*/ },
    ]);
  }
  create(value?: PartialMessage<IsAddressEoaResult>): IsAddressEoaResult {
    const message = { isEoa: false };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<IsAddressEoaResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: IsAddressEoaResult,
  ): IsAddressEoaResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bool is_eoa */ 1:
          message.isEoa = reader.bool();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: IsAddressEoaResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bool is_eoa = 1; */
    if (message.isEoa !== false)
      writer.tag(1, WireType.Varint).bool(message.isEoa);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.IsAddressEoaResult
 */
export const IsAddressEoaResult = new IsAddressEoaResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HashBlake3Request$Type extends MessageType<HashBlake3Request> {
  constructor() {
    super('massa.abi.v1.HashBlake3Request', [
      { no: 1, name: 'data', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<HashBlake3Request>): HashBlake3Request {
    const message = { data: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<HashBlake3Request>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: HashBlake3Request,
  ): HashBlake3Request {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes data */ 1:
          message.data = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: HashBlake3Request,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes data = 1; */
    if (message.data.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.data);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.HashBlake3Request
 */
export const HashBlake3Request = new HashBlake3Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HashBlake3Result$Type extends MessageType<HashBlake3Result> {
  constructor() {
    super('massa.abi.v1.HashBlake3Result', [
      { no: 1, name: 'hash', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<HashBlake3Result>): HashBlake3Result {
    const message = { hash: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<HashBlake3Result>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: HashBlake3Result,
  ): HashBlake3Result {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes hash */ 1:
          message.hash = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: HashBlake3Result,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes hash = 1; */
    if (message.hash.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.hash);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.HashBlake3Result
 */
export const HashBlake3Result = new HashBlake3Result$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDsKeysRequest$Type extends MessageType<GetDsKeysRequest> {
  constructor() {
    super('massa.abi.v1.GetDsKeysRequest', [
      { no: 1, name: 'prefix', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      { no: 2, name: 'address', kind: 'message', T: () => StringValue },
    ]);
  }
  create(value?: PartialMessage<GetDsKeysRequest>): GetDsKeysRequest {
    const message = { prefix: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetDsKeysRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetDsKeysRequest,
  ): GetDsKeysRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes prefix */ 1:
          message.prefix = reader.bytes();
          break;
        case /* optional google.protobuf.StringValue address */ 2:
          message.address = StringValue.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.address,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetDsKeysRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes prefix = 1; */
    if (message.prefix.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.prefix);
    /* optional google.protobuf.StringValue address = 2; */
    if (message.address)
      StringValue.internalBinaryWrite(
        message.address,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetDsKeysRequest
 */
export const GetDsKeysRequest = new GetDsKeysRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDsKeysResult$Type extends MessageType<GetDsKeysResult> {
  constructor() {
    super('massa.abi.v1.GetDsKeysResult', [
      {
        no: 1,
        name: 'keys',
        kind: 'scalar',
        repeat: 2 /* RepeatType.UNPACKED*/,
        T: 12 /* ScalarType.BYTES*/,
      },
    ]);
  }
  create(value?: PartialMessage<GetDsKeysResult>): GetDsKeysResult {
    const message = { keys: [] };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetDsKeysResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetDsKeysResult,
  ): GetDsKeysResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* repeated bytes keys */ 1:
          message.keys.push(reader.bytes());
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetDsKeysResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* repeated bytes keys = 1; */
    for (let i = 0; i < message.keys.length; i++)
      writer.tag(1, WireType.LengthDelimited).bytes(message.keys[i]);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetDsKeysResult
 */
export const GetDsKeysResult = new GetDsKeysResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetDsValueRequest$Type extends MessageType<SetDsValueRequest> {
  constructor() {
    super('massa.abi.v1.SetDsValueRequest', [
      { no: 1, name: 'key', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      { no: 2, name: 'value', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      { no: 3, name: 'address', kind: 'message', T: () => StringValue },
    ]);
  }
  create(value?: PartialMessage<SetDsValueRequest>): SetDsValueRequest {
    const message = { key: new Uint8Array(0), value: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<SetDsValueRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: SetDsValueRequest,
  ): SetDsValueRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes key */ 1:
          message.key = reader.bytes();
          break;
        case /* bytes value */ 2:
          message.value = reader.bytes();
          break;
        case /* optional google.protobuf.StringValue address */ 3:
          message.address = StringValue.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.address,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: SetDsValueRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes key = 1; */
    if (message.key.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.key);
    /* bytes value = 2; */
    if (message.value.length)
      writer.tag(2, WireType.LengthDelimited).bytes(message.value);
    /* optional google.protobuf.StringValue address = 3; */
    if (message.address)
      StringValue.internalBinaryWrite(
        message.address,
        writer.tag(3, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.SetDsValueRequest
 */
export const SetDsValueRequest = new SetDsValueRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetDsValueResult$Type extends MessageType<SetDsValueResult> {
  constructor() {
    super('massa.abi.v1.SetDsValueResult', []);
  }
  create(value?: PartialMessage<SetDsValueResult>): SetDsValueResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<SetDsValueResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: SetDsValueResult,
  ): SetDsValueResult {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: SetDsValueResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.SetDsValueResult
 */
export const SetDsValueResult = new SetDsValueResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AppendDsValueRequest$Type extends MessageType<AppendDsValueRequest> {
  constructor() {
    super('massa.abi.v1.AppendDsValueRequest', [
      { no: 1, name: 'key', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      { no: 2, name: 'value', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      { no: 3, name: 'address', kind: 'message', T: () => StringValue },
    ]);
  }
  create(value?: PartialMessage<AppendDsValueRequest>): AppendDsValueRequest {
    const message = { key: new Uint8Array(0), value: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<AppendDsValueRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: AppendDsValueRequest,
  ): AppendDsValueRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes key */ 1:
          message.key = reader.bytes();
          break;
        case /* bytes value */ 2:
          message.value = reader.bytes();
          break;
        case /* optional google.protobuf.StringValue address */ 3:
          message.address = StringValue.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.address,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: AppendDsValueRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes key = 1; */
    if (message.key.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.key);
    /* bytes value = 2; */
    if (message.value.length)
      writer.tag(2, WireType.LengthDelimited).bytes(message.value);
    /* optional google.protobuf.StringValue address = 3; */
    if (message.address)
      StringValue.internalBinaryWrite(
        message.address,
        writer.tag(3, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.AppendDsValueRequest
 */
export const AppendDsValueRequest = new AppendDsValueRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AppendDsValueResult$Type extends MessageType<AppendDsValueResult> {
  constructor() {
    super('massa.abi.v1.AppendDsValueResult', []);
  }
  create(value?: PartialMessage<AppendDsValueResult>): AppendDsValueResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<AppendDsValueResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: AppendDsValueResult,
  ): AppendDsValueResult {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: AppendDsValueResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.AppendDsValueResult
 */
export const AppendDsValueResult = new AppendDsValueResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDsValueRequest$Type extends MessageType<GetDsValueRequest> {
  constructor() {
    super('massa.abi.v1.GetDsValueRequest', [
      { no: 1, name: 'key', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      { no: 2, name: 'address', kind: 'message', T: () => StringValue },
    ]);
  }
  create(value?: PartialMessage<GetDsValueRequest>): GetDsValueRequest {
    const message = { key: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetDsValueRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetDsValueRequest,
  ): GetDsValueRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes key */ 1:
          message.key = reader.bytes();
          break;
        case /* optional google.protobuf.StringValue address */ 2:
          message.address = StringValue.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.address,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetDsValueRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes key = 1; */
    if (message.key.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.key);
    /* optional google.protobuf.StringValue address = 2; */
    if (message.address)
      StringValue.internalBinaryWrite(
        message.address,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetDsValueRequest
 */
export const GetDsValueRequest = new GetDsValueRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetDsValueResult$Type extends MessageType<GetDsValueResult> {
  constructor() {
    super('massa.abi.v1.GetDsValueResult', [
      { no: 1, name: 'value', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<GetDsValueResult>): GetDsValueResult {
    const message = { value: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetDsValueResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetDsValueResult,
  ): GetDsValueResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes value */ 1:
          message.value = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetDsValueResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes value = 1; */
    if (message.value.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.value);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetDsValueResult
 */
export const GetDsValueResult = new GetDsValueResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteDsEntryRequest$Type extends MessageType<DeleteDsEntryRequest> {
  constructor() {
    super('massa.abi.v1.DeleteDsEntryRequest', [
      { no: 1, name: 'key', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      { no: 2, name: 'address', kind: 'message', T: () => StringValue },
    ]);
  }
  create(value?: PartialMessage<DeleteDsEntryRequest>): DeleteDsEntryRequest {
    const message = { key: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<DeleteDsEntryRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: DeleteDsEntryRequest,
  ): DeleteDsEntryRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes key */ 1:
          message.key = reader.bytes();
          break;
        case /* optional google.protobuf.StringValue address */ 2:
          message.address = StringValue.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.address,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: DeleteDsEntryRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes key = 1; */
    if (message.key.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.key);
    /* optional google.protobuf.StringValue address = 2; */
    if (message.address)
      StringValue.internalBinaryWrite(
        message.address,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.DeleteDsEntryRequest
 */
export const DeleteDsEntryRequest = new DeleteDsEntryRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteDsEntryResult$Type extends MessageType<DeleteDsEntryResult> {
  constructor() {
    super('massa.abi.v1.DeleteDsEntryResult', []);
  }
  create(value?: PartialMessage<DeleteDsEntryResult>): DeleteDsEntryResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<DeleteDsEntryResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: DeleteDsEntryResult,
  ): DeleteDsEntryResult {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: DeleteDsEntryResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.DeleteDsEntryResult
 */
export const DeleteDsEntryResult = new DeleteDsEntryResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DsEntryExistsRequest$Type extends MessageType<DsEntryExistsRequest> {
  constructor() {
    super('massa.abi.v1.DsEntryExistsRequest', [
      { no: 1, name: 'key', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      { no: 2, name: 'address', kind: 'message', T: () => StringValue },
    ]);
  }
  create(value?: PartialMessage<DsEntryExistsRequest>): DsEntryExistsRequest {
    const message = { key: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<DsEntryExistsRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: DsEntryExistsRequest,
  ): DsEntryExistsRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes key */ 1:
          message.key = reader.bytes();
          break;
        case /* optional google.protobuf.StringValue address */ 2:
          message.address = StringValue.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.address,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: DsEntryExistsRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes key = 1; */
    if (message.key.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.key);
    /* optional google.protobuf.StringValue address = 2; */
    if (message.address)
      StringValue.internalBinaryWrite(
        message.address,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.DsEntryExistsRequest
 */
export const DsEntryExistsRequest = new DsEntryExistsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DsEntryExistsResult$Type extends MessageType<DsEntryExistsResult> {
  constructor() {
    super('massa.abi.v1.DsEntryExistsResult', [
      { no: 1, name: 'has_data', kind: 'scalar', T: 8 /* ScalarType.BOOL*/ },
    ]);
  }
  create(value?: PartialMessage<DsEntryExistsResult>): DsEntryExistsResult {
    const message = { hasData: false };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<DsEntryExistsResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: DsEntryExistsResult,
  ): DsEntryExistsResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bool has_data */ 1:
          message.hasData = reader.bool();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: DsEntryExistsResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bool has_data = 1; */
    if (message.hasData !== false)
      writer.tag(1, WireType.Varint).bool(message.hasData);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.DsEntryExistsResult
 */
export const DsEntryExistsResult = new DsEntryExistsResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOwnedAddressesRequest$Type extends MessageType<GetOwnedAddressesRequest> {
  constructor() {
    super('massa.abi.v1.GetOwnedAddressesRequest', []);
  }
  create(
    value?: PartialMessage<GetOwnedAddressesRequest>,
  ): GetOwnedAddressesRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetOwnedAddressesRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetOwnedAddressesRequest,
  ): GetOwnedAddressesRequest {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: GetOwnedAddressesRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetOwnedAddressesRequest
 */
export const GetOwnedAddressesRequest = new GetOwnedAddressesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOwnedAddressesResult$Type extends MessageType<GetOwnedAddressesResult> {
  constructor() {
    super('massa.abi.v1.GetOwnedAddressesResult', [
      {
        no: 1,
        name: 'addresses',
        kind: 'scalar',
        repeat: 2 /* RepeatType.UNPACKED*/,
        T: 9 /* ScalarType.STRING*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<GetOwnedAddressesResult>,
  ): GetOwnedAddressesResult {
    const message = { addresses: [] };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetOwnedAddressesResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetOwnedAddressesResult,
  ): GetOwnedAddressesResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* repeated string addresses */ 1:
          message.addresses.push(reader.string());
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetOwnedAddressesResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* repeated string addresses = 1; */
    for (let i = 0; i < message.addresses.length; i++)
      writer.tag(1, WireType.LengthDelimited).string(message.addresses[i]);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetOwnedAddressesResult
 */
export const GetOwnedAddressesResult = new GetOwnedAddressesResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCallStackRequest$Type extends MessageType<GetCallStackRequest> {
  constructor() {
    super('massa.abi.v1.GetCallStackRequest', []);
  }
  create(value?: PartialMessage<GetCallStackRequest>): GetCallStackRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetCallStackRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetCallStackRequest,
  ): GetCallStackRequest {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: GetCallStackRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetCallStackRequest
 */
export const GetCallStackRequest = new GetCallStackRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCallStackResult$Type extends MessageType<GetCallStackResult> {
  constructor() {
    super('massa.abi.v1.GetCallStackResult', [
      {
        no: 1,
        name: 'calls',
        kind: 'scalar',
        repeat: 2 /* RepeatType.UNPACKED*/,
        T: 9 /* ScalarType.STRING*/,
      },
    ]);
  }
  create(value?: PartialMessage<GetCallStackResult>): GetCallStackResult {
    const message = { calls: [] };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetCallStackResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetCallStackResult,
  ): GetCallStackResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* repeated string calls */ 1:
          message.calls.push(reader.string());
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetCallStackResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* repeated string calls = 1; */
    for (let i = 0; i < message.calls.length; i++)
      writer.tag(1, WireType.LengthDelimited).string(message.calls[i]);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetCallStackResult
 */
export const GetCallStackResult = new GetCallStackResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddressFromPubKeyRequest$Type extends MessageType<AddressFromPubKeyRequest> {
  constructor() {
    super('massa.abi.v1.AddressFromPubKeyRequest', [
      { no: 1, name: 'pub_key', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
    ]);
  }
  create(
    value?: PartialMessage<AddressFromPubKeyRequest>,
  ): AddressFromPubKeyRequest {
    const message = { pubKey: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<AddressFromPubKeyRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: AddressFromPubKeyRequest,
  ): AddressFromPubKeyRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string pub_key */ 1:
          message.pubKey = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: AddressFromPubKeyRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string pub_key = 1; */
    if (message.pubKey !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.pubKey);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.AddressFromPubKeyRequest
 */
export const AddressFromPubKeyRequest = new AddressFromPubKeyRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddressFromPubKeyResult$Type extends MessageType<AddressFromPubKeyResult> {
  constructor() {
    super('massa.abi.v1.AddressFromPubKeyResult', [
      { no: 1, name: 'address', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
    ]);
  }
  create(
    value?: PartialMessage<AddressFromPubKeyResult>,
  ): AddressFromPubKeyResult {
    const message = { address: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<AddressFromPubKeyResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: AddressFromPubKeyResult,
  ): AddressFromPubKeyResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string address */ 1:
          message.address = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: AddressFromPubKeyResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string address = 1; */
    if (message.address !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.address);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.AddressFromPubKeyResult
 */
export const AddressFromPubKeyResult = new AddressFromPubKeyResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnsafeRandomRequest$Type extends MessageType<UnsafeRandomRequest> {
  constructor() {
    super('massa.abi.v1.UnsafeRandomRequest', [
      {
        no: 2,
        name: 'num_bytes',
        kind: 'scalar',
        T: 13 /* ScalarType.UINT32*/,
      },
    ]);
  }
  create(value?: PartialMessage<UnsafeRandomRequest>): UnsafeRandomRequest {
    const message = { numBytes: 0 };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<UnsafeRandomRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: UnsafeRandomRequest,
  ): UnsafeRandomRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* uint32 num_bytes */ 2:
          message.numBytes = reader.uint32();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: UnsafeRandomRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* uint32 num_bytes = 2; */
    if (message.numBytes !== 0)
      writer.tag(2, WireType.Varint).uint32(message.numBytes);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.UnsafeRandomRequest
 */
export const UnsafeRandomRequest = new UnsafeRandomRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnsafeRandomResult$Type extends MessageType<UnsafeRandomResult> {
  constructor() {
    super('massa.abi.v1.UnsafeRandomResult', [
      {
        no: 1,
        name: 'random_bytes',
        kind: 'scalar',
        T: 12 /* ScalarType.BYTES*/,
      },
    ]);
  }
  create(value?: PartialMessage<UnsafeRandomResult>): UnsafeRandomResult {
    const message = { randomBytes: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<UnsafeRandomResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: UnsafeRandomResult,
  ): UnsafeRandomResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes random_bytes */ 1:
          message.randomBytes = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: UnsafeRandomResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes random_bytes = 1; */
    if (message.randomBytes.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.randomBytes);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.UnsafeRandomResult
 */
export const UnsafeRandomResult = new UnsafeRandomResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SendAsyncMessageFilter$Type extends MessageType<SendAsyncMessageFilter> {
  constructor() {
    super('massa.abi.v1.SendAsyncMessageFilter', [
      {
        no: 1,
        name: 'target_address',
        kind: 'scalar',
        T: 9 /* ScalarType.STRING*/,
      },
      { no: 2, name: 'target_key', kind: 'message', T: () => BytesValue },
    ]);
  }
  create(
    value?: PartialMessage<SendAsyncMessageFilter>,
  ): SendAsyncMessageFilter {
    const message = { targetAddress: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<SendAsyncMessageFilter>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: SendAsyncMessageFilter,
  ): SendAsyncMessageFilter {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string target_address */ 1:
          message.targetAddress = reader.string();
          break;
        case /* google.protobuf.BytesValue target_key */ 2:
          message.targetKey = BytesValue.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.targetKey,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: SendAsyncMessageFilter,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string target_address = 1; */
    if (message.targetAddress !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.targetAddress);
    /* google.protobuf.BytesValue target_key = 2; */
    if (message.targetKey)
      BytesValue.internalBinaryWrite(
        message.targetKey,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.SendAsyncMessageFilter
 */
export const SendAsyncMessageFilter = new SendAsyncMessageFilter$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SendAsyncMessageRequest$Type extends MessageType<SendAsyncMessageRequest> {
  constructor() {
    super('massa.abi.v1.SendAsyncMessageRequest', [
      {
        no: 1,
        name: 'target_address',
        kind: 'scalar',
        T: 9 /* ScalarType.STRING*/,
      },
      {
        no: 2,
        name: 'target_handler',
        kind: 'scalar',
        T: 9 /* ScalarType.STRING*/,
      },
      { no: 3, name: 'validity_start', kind: 'message', T: () => Slot },
      { no: 4, name: 'validity_end', kind: 'message', T: () => Slot },
      {
        no: 5,
        name: 'execution_gas',
        kind: 'scalar',
        T: 4 /* ScalarType.UINT64*/,
        L: 0 /* LongType.BIGINT*/,
      },
      {
        no: 6,
        name: 'raw_fee',
        kind: 'scalar',
        T: 4 /* ScalarType.UINT64*/,
        L: 0 /* LongType.BIGINT*/,
      },
      {
        no: 7,
        name: 'raw_coins',
        kind: 'scalar',
        T: 4 /* ScalarType.UINT64*/,
        L: 0 /* LongType.BIGINT*/,
      },
      { no: 8, name: 'data', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      {
        no: 9,
        name: 'filter',
        kind: 'message',
        T: () => SendAsyncMessageFilter,
      },
    ]);
  }
  create(
    value?: PartialMessage<SendAsyncMessageRequest>,
  ): SendAsyncMessageRequest {
    const message = {
      targetAddress: '',
      targetHandler: '',
      executionGas: 0n,
      rawFee: 0n,
      rawCoins: 0n,
      data: new Uint8Array(0),
    };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<SendAsyncMessageRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: SendAsyncMessageRequest,
  ): SendAsyncMessageRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string target_address */ 1:
          message.targetAddress = reader.string();
          break;
        case /* string target_handler */ 2:
          message.targetHandler = reader.string();
          break;
        case /* massa.model.v1.Slot validity_start */ 3:
          message.validityStart = Slot.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.validityStart,
          );
          break;
        case /* massa.model.v1.Slot validity_end */ 4:
          message.validityEnd = Slot.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.validityEnd,
          );
          break;
        case /* uint64 execution_gas */ 5:
          message.executionGas = reader.uint64().toBigInt();
          break;
        case /* uint64 raw_fee */ 6:
          message.rawFee = reader.uint64().toBigInt();
          break;
        case /* uint64 raw_coins */ 7:
          message.rawCoins = reader.uint64().toBigInt();
          break;
        case /* bytes data */ 8:
          message.data = reader.bytes();
          break;
        case /* massa.abi.v1.SendAsyncMessageFilter filter */ 9:
          message.filter = SendAsyncMessageFilter.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.filter,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: SendAsyncMessageRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string target_address = 1; */
    if (message.targetAddress !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.targetAddress);
    /* string target_handler = 2; */
    if (message.targetHandler !== '')
      writer.tag(2, WireType.LengthDelimited).string(message.targetHandler);
    /* massa.model.v1.Slot validity_start = 3; */
    if (message.validityStart)
      Slot.internalBinaryWrite(
        message.validityStart,
        writer.tag(3, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* massa.model.v1.Slot validity_end = 4; */
    if (message.validityEnd)
      Slot.internalBinaryWrite(
        message.validityEnd,
        writer.tag(4, WireType.LengthDelimited).fork(),
        options,
      ).join();
    /* uint64 execution_gas = 5; */
    if (message.executionGas !== 0n)
      writer.tag(5, WireType.Varint).uint64(message.executionGas);
    /* uint64 raw_fee = 6; */
    if (message.rawFee !== 0n)
      writer.tag(6, WireType.Varint).uint64(message.rawFee);
    /* uint64 raw_coins = 7; */
    if (message.rawCoins !== 0n)
      writer.tag(7, WireType.Varint).uint64(message.rawCoins);
    /* bytes data = 8; */
    if (message.data.length)
      writer.tag(8, WireType.LengthDelimited).bytes(message.data);
    /* massa.abi.v1.SendAsyncMessageFilter filter = 9; */
    if (message.filter)
      SendAsyncMessageFilter.internalBinaryWrite(
        message.filter,
        writer.tag(9, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.SendAsyncMessageRequest
 */
export const SendAsyncMessageRequest = new SendAsyncMessageRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SendAsyncMessageResult$Type extends MessageType<SendAsyncMessageResult> {
  constructor() {
    super('massa.abi.v1.SendAsyncMessageResult', []);
  }
  create(
    value?: PartialMessage<SendAsyncMessageResult>,
  ): SendAsyncMessageResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<SendAsyncMessageResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: SendAsyncMessageResult,
  ): SendAsyncMessageResult {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: SendAsyncMessageResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.SendAsyncMessageResult
 */
export const SendAsyncMessageResult = new SendAsyncMessageResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOriginOperationIdRequest$Type extends MessageType<GetOriginOperationIdRequest> {
  constructor() {
    super('massa.abi.v1.GetOriginOperationIdRequest', []);
  }
  create(
    value?: PartialMessage<GetOriginOperationIdRequest>,
  ): GetOriginOperationIdRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetOriginOperationIdRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetOriginOperationIdRequest,
  ): GetOriginOperationIdRequest {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: GetOriginOperationIdRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetOriginOperationIdRequest
 */
export const GetOriginOperationIdRequest =
  new GetOriginOperationIdRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOriginOperationIdResult$Type extends MessageType<GetOriginOperationIdResult> {
  constructor() {
    super('massa.abi.v1.GetOriginOperationIdResult', [
      { no: 1, name: 'operation_id', kind: 'message', T: () => StringValue },
    ]);
  }
  create(
    value?: PartialMessage<GetOriginOperationIdResult>,
  ): GetOriginOperationIdResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetOriginOperationIdResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetOriginOperationIdResult,
  ): GetOriginOperationIdResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* optional google.protobuf.StringValue operation_id */ 1:
          message.operationId = StringValue.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.operationId,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetOriginOperationIdResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* optional google.protobuf.StringValue operation_id = 1; */
    if (message.operationId)
      StringValue.internalBinaryWrite(
        message.operationId,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetOriginOperationIdResult
 */
export const GetOriginOperationIdResult = new GetOriginOperationIdResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetNativeTimeRequest$Type extends MessageType<GetNativeTimeRequest> {
  constructor() {
    super('massa.abi.v1.GetNativeTimeRequest', []);
  }
  create(value?: PartialMessage<GetNativeTimeRequest>): GetNativeTimeRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetNativeTimeRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetNativeTimeRequest,
  ): GetNativeTimeRequest {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: GetNativeTimeRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetNativeTimeRequest
 */
export const GetNativeTimeRequest = new GetNativeTimeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetNativeTimeResult$Type extends MessageType<GetNativeTimeResult> {
  constructor() {
    super('massa.abi.v1.GetNativeTimeResult', [
      { no: 1, name: 'time', kind: 'message', T: () => NativeTime },
    ]);
  }
  create(value?: PartialMessage<GetNativeTimeResult>): GetNativeTimeResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetNativeTimeResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetNativeTimeResult,
  ): GetNativeTimeResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeTime time */ 1:
          message.time = NativeTime.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.time,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetNativeTimeResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeTime time = 1; */
    if (message.time)
      NativeTime.internalBinaryWrite(
        message.time,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetNativeTimeResult
 */
export const GetNativeTimeResult = new GetNativeTimeResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCurrentSlotRequest$Type extends MessageType<GetCurrentSlotRequest> {
  constructor() {
    super('massa.abi.v1.GetCurrentSlotRequest', []);
  }
  create(value?: PartialMessage<GetCurrentSlotRequest>): GetCurrentSlotRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetCurrentSlotRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetCurrentSlotRequest,
  ): GetCurrentSlotRequest {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: GetCurrentSlotRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetCurrentSlotRequest
 */
export const GetCurrentSlotRequest = new GetCurrentSlotRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCurrentSlotResult$Type extends MessageType<GetCurrentSlotResult> {
  constructor() {
    super('massa.abi.v1.GetCurrentSlotResult', [
      { no: 1, name: 'slot', kind: 'message', T: () => Slot },
    ]);
  }
  create(value?: PartialMessage<GetCurrentSlotResult>): GetCurrentSlotResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetCurrentSlotResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetCurrentSlotResult,
  ): GetCurrentSlotResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.Slot slot */ 1:
          message.slot = Slot.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.slot,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetCurrentSlotResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.Slot slot = 1; */
    if (message.slot)
      Slot.internalBinaryWrite(
        message.slot,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetCurrentSlotResult
 */
export const GetCurrentSlotResult = new GetCurrentSlotResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetBytecodeRequest$Type extends MessageType<SetBytecodeRequest> {
  constructor() {
    super('massa.abi.v1.SetBytecodeRequest', [
      { no: 1, name: 'bytecode', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
      { no: 2, name: 'address', kind: 'message', T: () => StringValue },
    ]);
  }
  create(value?: PartialMessage<SetBytecodeRequest>): SetBytecodeRequest {
    const message = { bytecode: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<SetBytecodeRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: SetBytecodeRequest,
  ): SetBytecodeRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes bytecode */ 1:
          message.bytecode = reader.bytes();
          break;
        case /* optional google.protobuf.StringValue address */ 2:
          message.address = StringValue.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.address,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: SetBytecodeRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes bytecode = 1; */
    if (message.bytecode.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.bytecode);
    /* optional google.protobuf.StringValue address = 2; */
    if (message.address)
      StringValue.internalBinaryWrite(
        message.address,
        writer.tag(2, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.SetBytecodeRequest
 */
export const SetBytecodeRequest = new SetBytecodeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetBytecodeResult$Type extends MessageType<SetBytecodeResult> {
  constructor() {
    super('massa.abi.v1.SetBytecodeResult', []);
  }
  create(value?: PartialMessage<SetBytecodeResult>): SetBytecodeResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<SetBytecodeResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: SetBytecodeResult,
  ): SetBytecodeResult {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: SetBytecodeResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.SetBytecodeResult
 */
export const SetBytecodeResult = new SetBytecodeResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBytecodeRequest$Type extends MessageType<GetBytecodeRequest> {
  constructor() {
    super('massa.abi.v1.GetBytecodeRequest', [
      { no: 1, name: 'address', kind: 'message', T: () => StringValue },
    ]);
  }
  create(value?: PartialMessage<GetBytecodeRequest>): GetBytecodeRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetBytecodeRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetBytecodeRequest,
  ): GetBytecodeRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* optional google.protobuf.StringValue address */ 1:
          message.address = StringValue.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.address,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetBytecodeRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* optional google.protobuf.StringValue address = 1; */
    if (message.address)
      StringValue.internalBinaryWrite(
        message.address,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetBytecodeRequest
 */
export const GetBytecodeRequest = new GetBytecodeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBytecodeResult$Type extends MessageType<GetBytecodeResult> {
  constructor() {
    super('massa.abi.v1.GetBytecodeResult', [
      { no: 1, name: 'bytecode', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<GetBytecodeResult>): GetBytecodeResult {
    const message = { bytecode: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetBytecodeResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetBytecodeResult,
  ): GetBytecodeResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes bytecode */ 1:
          message.bytecode = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetBytecodeResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes bytecode = 1; */
    if (message.bytecode.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.bytecode);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetBytecodeResult
 */
export const GetBytecodeResult = new GetBytecodeResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CallerHasWriteAccessRequest$Type extends MessageType<CallerHasWriteAccessRequest> {
  constructor() {
    super('massa.abi.v1.CallerHasWriteAccessRequest', []);
  }
  create(
    value?: PartialMessage<CallerHasWriteAccessRequest>,
  ): CallerHasWriteAccessRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CallerHasWriteAccessRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CallerHasWriteAccessRequest,
  ): CallerHasWriteAccessRequest {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: CallerHasWriteAccessRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CallerHasWriteAccessRequest
 */
export const CallerHasWriteAccessRequest =
  new CallerHasWriteAccessRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CallerHasWriteAccessResult$Type extends MessageType<CallerHasWriteAccessResult> {
  constructor() {
    super('massa.abi.v1.CallerHasWriteAccessResult', [
      {
        no: 1,
        name: 'has_write_access',
        kind: 'scalar',
        T: 8 /* ScalarType.BOOL*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<CallerHasWriteAccessResult>,
  ): CallerHasWriteAccessResult {
    const message = { hasWriteAccess: false };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<CallerHasWriteAccessResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: CallerHasWriteAccessResult,
  ): CallerHasWriteAccessResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bool has_write_access */ 1:
          message.hasWriteAccess = reader.bool();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: CallerHasWriteAccessResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bool has_write_access = 1; */
    if (message.hasWriteAccess !== false)
      writer.tag(1, WireType.Varint).bool(message.hasWriteAccess);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.CallerHasWriteAccessResult
 */
export const CallerHasWriteAccessResult = new CallerHasWriteAccessResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HashSha256Request$Type extends MessageType<HashSha256Request> {
  constructor() {
    super('massa.abi.v1.HashSha256Request', [
      { no: 1, name: 'data', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<HashSha256Request>): HashSha256Request {
    const message = { data: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<HashSha256Request>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: HashSha256Request,
  ): HashSha256Request {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes data */ 1:
          message.data = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: HashSha256Request,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes data = 1; */
    if (message.data.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.data);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.HashSha256Request
 */
export const HashSha256Request = new HashSha256Request$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HashSha256Result$Type extends MessageType<HashSha256Result> {
  constructor() {
    super('massa.abi.v1.HashSha256Result', [
      { no: 1, name: 'hash', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<HashSha256Result>): HashSha256Result {
    const message = { hash: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<HashSha256Result>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: HashSha256Result,
  ): HashSha256Result {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes hash */ 1:
          message.hash = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: HashSha256Result,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes hash = 1; */
    if (message.hash.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.hash);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.HashSha256Result
 */
export const HashSha256Result = new HashSha256Result$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOpDataRequest$Type extends MessageType<GetOpDataRequest> {
  constructor() {
    super('massa.abi.v1.GetOpDataRequest', [
      { no: 1, name: 'key', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<GetOpDataRequest>): GetOpDataRequest {
    const message = { key: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetOpDataRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetOpDataRequest,
  ): GetOpDataRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes key */ 1:
          message.key = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetOpDataRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes key = 1; */
    if (message.key.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.key);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetOpDataRequest
 */
export const GetOpDataRequest = new GetOpDataRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOpDataResult$Type extends MessageType<GetOpDataResult> {
  constructor() {
    super('massa.abi.v1.GetOpDataResult', [
      { no: 1, name: 'value', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<GetOpDataResult>): GetOpDataResult {
    const message = { value: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetOpDataResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetOpDataResult,
  ): GetOpDataResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes value */ 1:
          message.value = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetOpDataResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes value = 1; */
    if (message.value.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.value);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetOpDataResult
 */
export const GetOpDataResult = new GetOpDataResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OpEntryExistsRequest$Type extends MessageType<OpEntryExistsRequest> {
  constructor() {
    super('massa.abi.v1.OpEntryExistsRequest', [
      { no: 1, name: 'key', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<OpEntryExistsRequest>): OpEntryExistsRequest {
    const message = { key: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<OpEntryExistsRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: OpEntryExistsRequest,
  ): OpEntryExistsRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes key */ 1:
          message.key = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: OpEntryExistsRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes key = 1; */
    if (message.key.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.key);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.OpEntryExistsRequest
 */
export const OpEntryExistsRequest = new OpEntryExistsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OpEntryExistsResult$Type extends MessageType<OpEntryExistsResult> {
  constructor() {
    super('massa.abi.v1.OpEntryExistsResult', [
      { no: 1, name: 'has_key', kind: 'scalar', T: 8 /* ScalarType.BOOL*/ },
    ]);
  }
  create(value?: PartialMessage<OpEntryExistsResult>): OpEntryExistsResult {
    const message = { hasKey: false };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<OpEntryExistsResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: OpEntryExistsResult,
  ): OpEntryExistsResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bool has_key */ 1:
          message.hasKey = reader.bool();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: OpEntryExistsResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bool has_key = 1; */
    if (message.hasKey !== false)
      writer.tag(1, WireType.Varint).bool(message.hasKey);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.OpEntryExistsResult
 */
export const OpEntryExistsResult = new OpEntryExistsResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOpKeysRequest$Type extends MessageType<GetOpKeysRequest> {
  constructor() {
    super('massa.abi.v1.GetOpKeysRequest', [
      { no: 1, name: 'prefix', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(value?: PartialMessage<GetOpKeysRequest>): GetOpKeysRequest {
    const message = { prefix: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetOpKeysRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetOpKeysRequest,
  ): GetOpKeysRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes prefix */ 1:
          message.prefix = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetOpKeysRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes prefix = 1; */
    if (message.prefix.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.prefix);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetOpKeysRequest
 */
export const GetOpKeysRequest = new GetOpKeysRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOpKeysResult$Type extends MessageType<GetOpKeysResult> {
  constructor() {
    super('massa.abi.v1.GetOpKeysResult', [
      {
        no: 1,
        name: 'keys',
        kind: 'scalar',
        repeat: 2 /* RepeatType.UNPACKED*/,
        T: 12 /* ScalarType.BYTES*/,
      },
    ]);
  }
  create(value?: PartialMessage<GetOpKeysResult>): GetOpKeysResult {
    const message = { keys: [] };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetOpKeysResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetOpKeysResult,
  ): GetOpKeysResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* repeated bytes keys */ 1:
          message.keys.push(reader.bytes());
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetOpKeysResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* repeated bytes keys = 1; */
    for (let i = 0; i < message.keys.length; i++)
      writer.tag(1, WireType.LengthDelimited).bytes(message.keys[i]);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetOpKeysResult
 */
export const GetOpKeysResult = new GetOpKeysResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetRemainingGasRequest$Type extends MessageType<GetRemainingGasRequest> {
  constructor() {
    super('massa.abi.v1.GetRemainingGasRequest', []);
  }
  create(
    value?: PartialMessage<GetRemainingGasRequest>,
  ): GetRemainingGasRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetRemainingGasRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetRemainingGasRequest,
  ): GetRemainingGasRequest {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: GetRemainingGasRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetRemainingGasRequest
 */
export const GetRemainingGasRequest = new GetRemainingGasRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetRemainingGasResult$Type extends MessageType<GetRemainingGasResult> {
  constructor() {
    super('massa.abi.v1.GetRemainingGasResult', [
      {
        no: 1,
        name: 'remaining_gas',
        kind: 'scalar',
        T: 4 /* ScalarType.UINT64*/,
        L: 0 /* LongType.BIGINT*/,
      },
    ]);
  }
  create(value?: PartialMessage<GetRemainingGasResult>): GetRemainingGasResult {
    const message = { remainingGas: 0n };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetRemainingGasResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetRemainingGasResult,
  ): GetRemainingGasResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* uint64 remaining_gas */ 1:
          message.remainingGas = reader.uint64().toBigInt();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetRemainingGasResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* uint64 remaining_gas = 1; */
    if (message.remainingGas !== 0n)
      writer.tag(1, WireType.Varint).uint64(message.remainingGas);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetRemainingGasResult
 */
export const GetRemainingGasResult = new GetRemainingGasResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBalanceRequest$Type extends MessageType<GetBalanceRequest> {
  constructor() {
    super('massa.abi.v1.GetBalanceRequest', [
      { no: 1, name: 'address', kind: 'message', T: () => StringValue },
    ]);
  }
  create(value?: PartialMessage<GetBalanceRequest>): GetBalanceRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetBalanceRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetBalanceRequest,
  ): GetBalanceRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* optional google.protobuf.StringValue address */ 1:
          message.address = StringValue.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.address,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetBalanceRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* optional google.protobuf.StringValue address = 1; */
    if (message.address)
      StringValue.internalBinaryWrite(
        message.address,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetBalanceRequest
 */
export const GetBalanceRequest = new GetBalanceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBalanceResult$Type extends MessageType<GetBalanceResult> {
  constructor() {
    super('massa.abi.v1.GetBalanceResult', [
      { no: 1, name: 'balance', kind: 'message', T: () => NativeAmount },
    ]);
  }
  create(value?: PartialMessage<GetBalanceResult>): GetBalanceResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetBalanceResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetBalanceResult,
  ): GetBalanceResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount balance */ 1:
          message.balance = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.balance,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetBalanceResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount balance = 1; */
    if (message.balance)
      NativeAmount.internalBinaryWrite(
        message.balance,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetBalanceResult
 */
export const GetBalanceResult = new GetBalanceResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCallCoinsRequest$Type extends MessageType<GetCallCoinsRequest> {
  constructor() {
    super('massa.abi.v1.GetCallCoinsRequest', []);
  }
  create(value?: PartialMessage<GetCallCoinsRequest>): GetCallCoinsRequest {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetCallCoinsRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetCallCoinsRequest,
  ): GetCallCoinsRequest {
    return target ?? this.create();
  }
  internalBinaryWrite(
    message: GetCallCoinsRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetCallCoinsRequest
 */
export const GetCallCoinsRequest = new GetCallCoinsRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCallCoinsResult$Type extends MessageType<GetCallCoinsResult> {
  constructor() {
    super('massa.abi.v1.GetCallCoinsResult', [
      { no: 1, name: 'coins', kind: 'message', T: () => NativeAmount },
    ]);
  }
  create(value?: PartialMessage<GetCallCoinsResult>): GetCallCoinsResult {
    const message = {};
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetCallCoinsResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetCallCoinsResult,
  ): GetCallCoinsResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.NativeAmount coins */ 1:
          message.coins = NativeAmount.internalBinaryRead(
            reader,
            reader.uint32(),
            options,
            message.coins,
          );
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetCallCoinsResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.NativeAmount coins = 1; */
    if (message.coins)
      NativeAmount.internalBinaryWrite(
        message.coins,
        writer.tag(1, WireType.LengthDelimited).fork(),
        options,
      ).join();
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetCallCoinsResult
 */
export const GetCallCoinsResult = new GetCallCoinsResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAddressVersionRequest$Type extends MessageType<GetAddressVersionRequest> {
  constructor() {
    super('massa.abi.v1.GetAddressVersionRequest', [
      { no: 1, name: 'address', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
    ]);
  }
  create(
    value?: PartialMessage<GetAddressVersionRequest>,
  ): GetAddressVersionRequest {
    const message = { address: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetAddressVersionRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetAddressVersionRequest,
  ): GetAddressVersionRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string address */ 1:
          message.address = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetAddressVersionRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string address = 1; */
    if (message.address !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.address);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetAddressVersionRequest
 */
export const GetAddressVersionRequest = new GetAddressVersionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAddressVersionResult$Type extends MessageType<GetAddressVersionResult> {
  constructor() {
    super('massa.abi.v1.GetAddressVersionResult', [
      {
        no: 1,
        name: 'version',
        kind: 'scalar',
        T: 4 /* ScalarType.UINT64*/,
        L: 0 /* LongType.BIGINT*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<GetAddressVersionResult>,
  ): GetAddressVersionResult {
    const message = { version: 0n };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetAddressVersionResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetAddressVersionResult,
  ): GetAddressVersionResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* uint64 version */ 1:
          message.version = reader.uint64().toBigInt();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetAddressVersionResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* uint64 version = 1; */
    if (message.version !== 0n)
      writer.tag(1, WireType.Varint).uint64(message.version);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetAddressVersionResult
 */
export const GetAddressVersionResult = new GetAddressVersionResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAddressCategoryRequest$Type extends MessageType<GetAddressCategoryRequest> {
  constructor() {
    super('massa.abi.v1.GetAddressCategoryRequest', [
      { no: 1, name: 'address', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
    ]);
  }
  create(
    value?: PartialMessage<GetAddressCategoryRequest>,
  ): GetAddressCategoryRequest {
    const message = { address: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetAddressCategoryRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetAddressCategoryRequest,
  ): GetAddressCategoryRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string address */ 1:
          message.address = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetAddressCategoryRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string address = 1; */
    if (message.address !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.address);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetAddressCategoryRequest
 */
export const GetAddressCategoryRequest = new GetAddressCategoryRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAddressCategoryResult$Type extends MessageType<GetAddressCategoryResult> {
  constructor() {
    super('massa.abi.v1.GetAddressCategoryResult', [
      {
        no: 1,
        name: 'category',
        kind: 'enum',
        T: () => [
          'massa.model.v1.AddressCategory',
          AddressCategory,
          'ADDRESS_CATEGORY_',
        ],
      },
    ]);
  }
  create(
    value?: PartialMessage<GetAddressCategoryResult>,
  ): GetAddressCategoryResult {
    const message = { category: 0 };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetAddressCategoryResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetAddressCategoryResult,
  ): GetAddressCategoryResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* massa.model.v1.AddressCategory category */ 1:
          message.category = reader.int32();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetAddressCategoryResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* massa.model.v1.AddressCategory category = 1; */
    if (message.category !== 0)
      writer.tag(1, WireType.Varint).int32(message.category);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetAddressCategoryResult
 */
export const GetAddressCategoryResult = new GetAddressCategoryResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPubKeyVersionRequest$Type extends MessageType<GetPubKeyVersionRequest> {
  constructor() {
    super('massa.abi.v1.GetPubKeyVersionRequest', [
      { no: 1, name: 'pub_key', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
    ]);
  }
  create(
    value?: PartialMessage<GetPubKeyVersionRequest>,
  ): GetPubKeyVersionRequest {
    const message = { pubKey: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetPubKeyVersionRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetPubKeyVersionRequest,
  ): GetPubKeyVersionRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string pub_key */ 1:
          message.pubKey = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetPubKeyVersionRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string pub_key = 1; */
    if (message.pubKey !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.pubKey);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetPubKeyVersionRequest
 */
export const GetPubKeyVersionRequest = new GetPubKeyVersionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPubKeyVersionResult$Type extends MessageType<GetPubKeyVersionResult> {
  constructor() {
    super('massa.abi.v1.GetPubKeyVersionResult', [
      {
        no: 1,
        name: 'version',
        kind: 'scalar',
        T: 4 /* ScalarType.UINT64*/,
        L: 0 /* LongType.BIGINT*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<GetPubKeyVersionResult>,
  ): GetPubKeyVersionResult {
    const message = { version: 0n };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetPubKeyVersionResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetPubKeyVersionResult,
  ): GetPubKeyVersionResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* uint64 version */ 1:
          message.version = reader.uint64().toBigInt();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetPubKeyVersionResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* uint64 version = 1; */
    if (message.version !== 0n)
      writer.tag(1, WireType.Varint).uint64(message.version);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetPubKeyVersionResult
 */
export const GetPubKeyVersionResult = new GetPubKeyVersionResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetSignatureVersionRequest$Type extends MessageType<GetSignatureVersionRequest> {
  constructor() {
    super('massa.abi.v1.GetSignatureVersionRequest', [
      { no: 1, name: 'signature', kind: 'scalar', T: 9 /* ScalarType.STRING*/ },
    ]);
  }
  create(
    value?: PartialMessage<GetSignatureVersionRequest>,
  ): GetSignatureVersionRequest {
    const message = { signature: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetSignatureVersionRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetSignatureVersionRequest,
  ): GetSignatureVersionRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string signature */ 1:
          message.signature = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetSignatureVersionRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string signature = 1; */
    if (message.signature !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.signature);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetSignatureVersionRequest
 */
export const GetSignatureVersionRequest = new GetSignatureVersionRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetSignatureVersionResult$Type extends MessageType<GetSignatureVersionResult> {
  constructor() {
    super('massa.abi.v1.GetSignatureVersionResult', [
      {
        no: 1,
        name: 'version',
        kind: 'scalar',
        T: 4 /* ScalarType.UINT64*/,
        L: 0 /* LongType.BIGINT*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<GetSignatureVersionResult>,
  ): GetSignatureVersionResult {
    const message = { version: 0n };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<GetSignatureVersionResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: GetSignatureVersionResult,
  ): GetSignatureVersionResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* uint64 version */ 1:
          message.version = reader.uint64().toBigInt();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: GetSignatureVersionResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* uint64 version = 1; */
    if (message.version !== 0n)
      writer.tag(1, WireType.Varint).uint64(message.version);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.GetSignatureVersionResult
 */
export const GetSignatureVersionResult = new GetSignatureVersionResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BytesToBase58CheckRequest$Type extends MessageType<BytesToBase58CheckRequest> {
  constructor() {
    super('massa.abi.v1.BytesToBase58CheckRequest', [
      { no: 1, name: 'bytes', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(
    value?: PartialMessage<BytesToBase58CheckRequest>,
  ): BytesToBase58CheckRequest {
    const message = { bytes: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<BytesToBase58CheckRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: BytesToBase58CheckRequest,
  ): BytesToBase58CheckRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes bytes */ 1:
          message.bytes = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: BytesToBase58CheckRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes bytes = 1; */
    if (message.bytes.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.bytes);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.BytesToBase58CheckRequest
 */
export const BytesToBase58CheckRequest = new BytesToBase58CheckRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BytesToBase58CheckResult$Type extends MessageType<BytesToBase58CheckResult> {
  constructor() {
    super('massa.abi.v1.BytesToBase58CheckResult', [
      {
        no: 1,
        name: 'base58_check',
        kind: 'scalar',
        T: 9 /* ScalarType.STRING*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<BytesToBase58CheckResult>,
  ): BytesToBase58CheckResult {
    const message = { base58Check: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<BytesToBase58CheckResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: BytesToBase58CheckResult,
  ): BytesToBase58CheckResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string base58_check */ 1:
          message.base58Check = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: BytesToBase58CheckResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string base58_check = 1; */
    if (message.base58Check !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.base58Check);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.BytesToBase58CheckResult
 */
export const BytesToBase58CheckResult = new BytesToBase58CheckResult$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Base58CheckToBytesRequest$Type extends MessageType<Base58CheckToBytesRequest> {
  constructor() {
    super('massa.abi.v1.Base58CheckToBytesRequest', [
      {
        no: 1,
        name: 'base58_check',
        kind: 'scalar',
        T: 9 /* ScalarType.STRING*/,
      },
    ]);
  }
  create(
    value?: PartialMessage<Base58CheckToBytesRequest>,
  ): Base58CheckToBytesRequest {
    const message = { base58Check: '' };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<Base58CheckToBytesRequest>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: Base58CheckToBytesRequest,
  ): Base58CheckToBytesRequest {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* string base58_check */ 1:
          message.base58Check = reader.string();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: Base58CheckToBytesRequest,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* string base58_check = 1; */
    if (message.base58Check !== '')
      writer.tag(1, WireType.LengthDelimited).string(message.base58Check);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.Base58CheckToBytesRequest
 */
export const Base58CheckToBytesRequest = new Base58CheckToBytesRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Base58CheckToBytesResult$Type extends MessageType<Base58CheckToBytesResult> {
  constructor() {
    super('massa.abi.v1.Base58CheckToBytesResult', [
      { no: 1, name: 'bytes', kind: 'scalar', T: 12 /* ScalarType.BYTES*/ },
    ]);
  }
  create(
    value?: PartialMessage<Base58CheckToBytesResult>,
  ): Base58CheckToBytesResult {
    const message = { bytes: new Uint8Array(0) };
    globalThis.Object.defineProperty(message, MESSAGE_TYPE, {
      enumerable: false,
      value: this,
    });
    if (value !== undefined)
      reflectionMergePartial<Base58CheckToBytesResult>(this, message, value);
    return message;
  }
  internalBinaryRead(
    reader: IBinaryReader,
    length: number,
    options: BinaryReadOptions,
    target?: Base58CheckToBytesResult,
  ): Base58CheckToBytesResult {
    let message = target ?? this.create();
    let end = reader.pos + length;
    while (reader.pos < end) {
      let [fieldNo, wireType] = reader.tag();
      switch (fieldNo) {
        case /* bytes bytes */ 1:
          message.bytes = reader.bytes();
          break;
        default:
          let u = options.readUnknownField;
          if (u === 'throw')
            throw new globalThis.Error(
              `Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`,
            );
          let d = reader.skip(wireType);
          if (u !== false)
            (u === true ? UnknownFieldHandler.onRead : u)(
              this.typeName,
              message,
              fieldNo,
              wireType,
              d,
            );
      }
    }
    return message;
  }
  internalBinaryWrite(
    message: Base58CheckToBytesResult,
    writer: IBinaryWriter,
    options: BinaryWriteOptions,
  ): IBinaryWriter {
    /* bytes bytes = 1; */
    if (message.bytes.length)
      writer.tag(1, WireType.LengthDelimited).bytes(message.bytes);
    let u = options.writeUnknownFields;
    if (u !== false)
      (u == true ? UnknownFieldHandler.onWrite : u)(
        this.typeName,
        message,
        writer,
      );
    return writer;
  }
}
/**
 * @generated MessageType for protobuf message massa.abi.v1.Base58CheckToBytesResult
 */
export const Base58CheckToBytesResult = new Base58CheckToBytesResult$Type();
